

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


namespace DM_DataModel
{

using System;
using System.Data.Entity;
using System.Data.Entity.Infrastructure;

using System.Data.Entity.Core.Objects;
using System.Linq;


public partial class DM_MetaDataEntities : DbContext
{
    public DM_MetaDataEntities()
        : base("name=DM_MetaDataEntities")
    {

    }

    protected override void OnModelCreating(DbModelBuilder modelBuilder)
    {
        throw new UnintentionalCodeFirstException();
    }



    public virtual ObjectResult<HXR_GET_CLIENT_SP_Result> GetClientandProjectDetails(ObjectParameter status_Code, ObjectParameter message)
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HXR_GET_CLIENT_SP_Result>("GetClientandProjectDetails", status_Code, message);
    }


    public virtual int HXR_INSERT_METADATA_INFO_SP(string client_ID, string project_ID, string iP_Address, string database_Name, string source_Target, string config_ID, string last_Modified_By, ObjectParameter status_code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var iP_AddressParameter = iP_Address != null ?
            new ObjectParameter("IP_Address", iP_Address) :
            new ObjectParameter("IP_Address", typeof(string));


        var database_NameParameter = database_Name != null ?
            new ObjectParameter("Database_Name", database_Name) :
            new ObjectParameter("Database_Name", typeof(string));


        var source_TargetParameter = source_Target != null ?
            new ObjectParameter("Source_Target", source_Target) :
            new ObjectParameter("Source_Target", typeof(string));


        var config_IDParameter = config_ID != null ?
            new ObjectParameter("Config_ID", config_ID) :
            new ObjectParameter("Config_ID", typeof(string));


        var last_Modified_ByParameter = last_Modified_By != null ?
            new ObjectParameter("Last_Modified_By", last_Modified_By) :
            new ObjectParameter("Last_Modified_By", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HXR_INSERT_METADATA_INFO_SP", client_IDParameter, project_IDParameter, iP_AddressParameter, database_NameParameter, source_TargetParameter, config_IDParameter, last_Modified_ByParameter, status_code, message);
    }


    public virtual ObjectResult<HXR_GET_RULE_ATTRIBUTE_SP_Result> HXR_GET_RULE_ATTRIBUTE_SP(string client_ID, string project_ID, string table_name, string column_Name, Nullable<long> rule_Type_ID, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var table_nameParameter = table_name != null ?
            new ObjectParameter("Table_name", table_name) :
            new ObjectParameter("Table_name", typeof(string));


        var column_NameParameter = column_Name != null ?
            new ObjectParameter("Column_Name", column_Name) :
            new ObjectParameter("Column_Name", typeof(string));


        var rule_Type_IDParameter = rule_Type_ID.HasValue ?
            new ObjectParameter("Rule_Type_ID", rule_Type_ID) :
            new ObjectParameter("Rule_Type_ID", typeof(long));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HXR_GET_RULE_ATTRIBUTE_SP_Result>("HXR_GET_RULE_ATTRIBUTE_SP", client_IDParameter, project_IDParameter, table_nameParameter, column_NameParameter, rule_Type_IDParameter, status_Code, message);
    }


    public virtual ObjectResult<HXR_GET_TABLE_COLUMN_LIST_SP_Result> HXR_GET_TABLE_COLUMN_LIST_SP(string client_ID, string project_ID, string database_IP, string source_Target, string database_Name, string table_Name, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var database_IPParameter = database_IP != null ?
            new ObjectParameter("Database_IP", database_IP) :
            new ObjectParameter("Database_IP", typeof(string));


        var source_TargetParameter = source_Target != null ?
            new ObjectParameter("Source_Target", source_Target) :
            new ObjectParameter("Source_Target", typeof(string));


        var database_NameParameter = database_Name != null ?
            new ObjectParameter("Database_Name", database_Name) :
            new ObjectParameter("Database_Name", typeof(string));


        var table_NameParameter = table_Name != null ?
            new ObjectParameter("Table_Name", table_Name) :
            new ObjectParameter("Table_Name", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HXR_GET_TABLE_COLUMN_LIST_SP_Result>("HXR_GET_TABLE_COLUMN_LIST_SP", client_IDParameter, project_IDParameter, database_IPParameter, source_TargetParameter, database_NameParameter, table_NameParameter, status_Code, message);
    }


    public virtual ObjectResult<string> HXR_GET_TABLES_LIST_SP(string client_ID, string project_ID, string database_IP, string source_Target, string database_Name, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var database_IPParameter = database_IP != null ?
            new ObjectParameter("Database_IP", database_IP) :
            new ObjectParameter("Database_IP", typeof(string));


        var source_TargetParameter = source_Target != null ?
            new ObjectParameter("Source_Target", source_Target) :
            new ObjectParameter("Source_Target", typeof(string));


        var database_NameParameter = database_Name != null ?
            new ObjectParameter("Database_Name", database_Name) :
            new ObjectParameter("Database_Name", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("HXR_GET_TABLES_LIST_SP", client_IDParameter, project_IDParameter, database_IPParameter, source_TargetParameter, database_NameParameter, status_Code, message);
    }


    public virtual int HXR_ALLOCATE_RULE_ATTRIBUTE_SP(string client_ID, string project_ID, string active_Attri_Rule_ID, string inActive_Attri_Rule_ID, string table_name, string updated_by, ObjectParameter status_code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var active_Attri_Rule_IDParameter = active_Attri_Rule_ID != null ?
            new ObjectParameter("Active_Attri_Rule_ID", active_Attri_Rule_ID) :
            new ObjectParameter("Active_Attri_Rule_ID", typeof(string));


        var inActive_Attri_Rule_IDParameter = inActive_Attri_Rule_ID != null ?
            new ObjectParameter("InActive_Attri_Rule_ID", inActive_Attri_Rule_ID) :
            new ObjectParameter("InActive_Attri_Rule_ID", typeof(string));


        var table_nameParameter = table_name != null ?
            new ObjectParameter("Table_name", table_name) :
            new ObjectParameter("Table_name", typeof(string));


        var updated_byParameter = updated_by != null ?
            new ObjectParameter("Updated_by", updated_by) :
            new ObjectParameter("Updated_by", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HXR_ALLOCATE_RULE_ATTRIBUTE_SP", client_IDParameter, project_IDParameter, active_Attri_Rule_IDParameter, inActive_Attri_Rule_IDParameter, table_nameParameter, updated_byParameter, status_code, message);
    }


    public virtual int PRC_TO_CREATE_PROC(string client_ID, string project_ID, string table_name, string config_ID, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var table_nameParameter = table_name != null ?
            new ObjectParameter("Table_name", table_name) :
            new ObjectParameter("Table_name", typeof(string));


        var config_IDParameter = config_ID != null ?
            new ObjectParameter("Config_ID", config_ID) :
            new ObjectParameter("Config_ID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PRC_TO_CREATE_PROC", client_IDParameter, project_IDParameter, table_nameParameter, config_IDParameter, status_Code, message);
    }


    public virtual int HXR_ACTIVATE_RULE_ATTRIBUTE_SP(string client_ID, string project_ID, string active_Attri_Rule_ID, string inActive_Attri_Rule_ID, string updated_by, ObjectParameter status_code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var active_Attri_Rule_IDParameter = active_Attri_Rule_ID != null ?
            new ObjectParameter("Active_Attri_Rule_ID", active_Attri_Rule_ID) :
            new ObjectParameter("Active_Attri_Rule_ID", typeof(string));


        var inActive_Attri_Rule_IDParameter = inActive_Attri_Rule_ID != null ?
            new ObjectParameter("InActive_Attri_Rule_ID", inActive_Attri_Rule_ID) :
            new ObjectParameter("InActive_Attri_Rule_ID", typeof(string));


        var updated_byParameter = updated_by != null ?
            new ObjectParameter("Updated_by", updated_by) :
            new ObjectParameter("Updated_by", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HXR_ACTIVATE_RULE_ATTRIBUTE_SP", client_IDParameter, project_IDParameter, active_Attri_Rule_IDParameter, inActive_Attri_Rule_IDParameter, updated_byParameter, status_code, message);
    }


    public virtual ObjectResult<HXR_GET_ERROR_DESC_SP_Result> HXR_GET_ERROR_DESC_SP(string client_ID, string project_ID, string error_Code, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var error_CodeParameter = error_Code != null ?
            new ObjectParameter("Error_Code", error_Code) :
            new ObjectParameter("Error_Code", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HXR_GET_ERROR_DESC_SP_Result>("HXR_GET_ERROR_DESC_SP", client_IDParameter, project_IDParameter, error_CodeParameter, status_Code, message);
    }


    public virtual ObjectResult<HXR_GET_RULE_CATEGORY_SP_Result> HXR_GET_RULE_CATEGORY_SP(Nullable<long> ruleCategory_ID, string ruleCategory_Name, ObjectParameter status_Code, ObjectParameter message)
    {

        var ruleCategory_IDParameter = ruleCategory_ID.HasValue ?
            new ObjectParameter("RuleCategory_ID", ruleCategory_ID) :
            new ObjectParameter("RuleCategory_ID", typeof(long));


        var ruleCategory_NameParameter = ruleCategory_Name != null ?
            new ObjectParameter("RuleCategory_Name", ruleCategory_Name) :
            new ObjectParameter("RuleCategory_Name", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HXR_GET_RULE_CATEGORY_SP_Result>("HXR_GET_RULE_CATEGORY_SP", ruleCategory_IDParameter, ruleCategory_NameParameter, status_Code, message);
    }


    public virtual int HXR_UPDATE_RULE_ATTRIBUTE_SP(string client_ID, string project_ID, Nullable<long> attribute_Rule_ID, string rule_ID, Nullable<long> ruleType_ID, string iS_Predefined, string error_Code, Nullable<long> ruleCategory_ID, string column_Name, string default_value, string conditional_Clause, string rule_Description, string priority, string data_Steward, string last_Modified_By, ObjectParameter status_code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var attribute_Rule_IDParameter = attribute_Rule_ID.HasValue ?
            new ObjectParameter("Attribute_Rule_ID", attribute_Rule_ID) :
            new ObjectParameter("Attribute_Rule_ID", typeof(long));


        var rule_IDParameter = rule_ID != null ?
            new ObjectParameter("Rule_ID", rule_ID) :
            new ObjectParameter("Rule_ID", typeof(string));


        var ruleType_IDParameter = ruleType_ID.HasValue ?
            new ObjectParameter("RuleType_ID", ruleType_ID) :
            new ObjectParameter("RuleType_ID", typeof(long));


        var iS_PredefinedParameter = iS_Predefined != null ?
            new ObjectParameter("IS_Predefined", iS_Predefined) :
            new ObjectParameter("IS_Predefined", typeof(string));


        var error_CodeParameter = error_Code != null ?
            new ObjectParameter("Error_Code", error_Code) :
            new ObjectParameter("Error_Code", typeof(string));


        var ruleCategory_IDParameter = ruleCategory_ID.HasValue ?
            new ObjectParameter("RuleCategory_ID", ruleCategory_ID) :
            new ObjectParameter("RuleCategory_ID", typeof(long));


        var column_NameParameter = column_Name != null ?
            new ObjectParameter("Column_Name", column_Name) :
            new ObjectParameter("Column_Name", typeof(string));


        var default_valueParameter = default_value != null ?
            new ObjectParameter("Default_value", default_value) :
            new ObjectParameter("Default_value", typeof(string));


        var conditional_ClauseParameter = conditional_Clause != null ?
            new ObjectParameter("Conditional_Clause", conditional_Clause) :
            new ObjectParameter("Conditional_Clause", typeof(string));


        var rule_DescriptionParameter = rule_Description != null ?
            new ObjectParameter("Rule_Description", rule_Description) :
            new ObjectParameter("Rule_Description", typeof(string));


        var priorityParameter = priority != null ?
            new ObjectParameter("Priority", priority) :
            new ObjectParameter("Priority", typeof(string));


        var data_StewardParameter = data_Steward != null ?
            new ObjectParameter("Data_Steward", data_Steward) :
            new ObjectParameter("Data_Steward", typeof(string));


        var last_Modified_ByParameter = last_Modified_By != null ?
            new ObjectParameter("Last_Modified_By", last_Modified_By) :
            new ObjectParameter("Last_Modified_By", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HXR_UPDATE_RULE_ATTRIBUTE_SP", client_IDParameter, project_IDParameter, attribute_Rule_IDParameter, rule_IDParameter, ruleType_IDParameter, iS_PredefinedParameter, error_CodeParameter, ruleCategory_IDParameter, column_NameParameter, default_valueParameter, conditional_ClauseParameter, rule_DescriptionParameter, priorityParameter, data_StewardParameter, last_Modified_ByParameter, status_code, message);
    }


    public virtual ObjectResult<HXR_VALIDATE_COLUMN_SP_Result> HXR_VALIDATE_COLUMN_SP(string client_ID, string project_ID, string iP_Address, string database_Name, string table_Name, string source_Target, ObjectParameter status_code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var iP_AddressParameter = iP_Address != null ?
            new ObjectParameter("IP_Address", iP_Address) :
            new ObjectParameter("IP_Address", typeof(string));


        var database_NameParameter = database_Name != null ?
            new ObjectParameter("Database_Name", database_Name) :
            new ObjectParameter("Database_Name", typeof(string));


        var table_NameParameter = table_Name != null ?
            new ObjectParameter("Table_Name", table_Name) :
            new ObjectParameter("Table_Name", typeof(string));


        var source_TargetParameter = source_Target != null ?
            new ObjectParameter("Source_Target", source_Target) :
            new ObjectParameter("Source_Target", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HXR_VALIDATE_COLUMN_SP_Result>("HXR_VALIDATE_COLUMN_SP", client_IDParameter, project_IDParameter, iP_AddressParameter, database_NameParameter, table_NameParameter, source_TargetParameter, status_code, message);
    }


    public virtual int HXR_GET_CONFIG_DETAILS_SP(string client_ID, string project_ID, string source_Target, Nullable<long> tool_ID, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var source_TargetParameter = source_Target != null ?
            new ObjectParameter("Source_Target", source_Target) :
            new ObjectParameter("Source_Target", typeof(string));


        var tool_IDParameter = tool_ID.HasValue ?
            new ObjectParameter("Tool_ID", tool_ID) :
            new ObjectParameter("Tool_ID", typeof(long));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HXR_GET_CONFIG_DETAILS_SP", client_IDParameter, project_IDParameter, source_TargetParameter, tool_IDParameter, status_Code, message);
    }


    public virtual ObjectResult<HXR_GET_RULE_TYPE_SP_Result> HXR_GET_RULE_TYPE_SP(string client_ID, string project_ID, Nullable<long> ruleType_ID, string ruleType_Name, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var ruleType_IDParameter = ruleType_ID.HasValue ?
            new ObjectParameter("RuleType_ID", ruleType_ID) :
            new ObjectParameter("RuleType_ID", typeof(long));


        var ruleType_NameParameter = ruleType_Name != null ?
            new ObjectParameter("RuleType_Name", ruleType_Name) :
            new ObjectParameter("RuleType_Name", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HXR_GET_RULE_TYPE_SP_Result>("HXR_GET_RULE_TYPE_SP", client_IDParameter, project_IDParameter, ruleType_IDParameter, ruleType_NameParameter, status_Code, message);
    }


    public virtual ObjectResult<HXR_GET_RULE_SP_Result> HXR_GET_RULE_SP(string client_ID, string project_ID, Nullable<long> rule_Id, string rule_Name, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var rule_IdParameter = rule_Id.HasValue ?
            new ObjectParameter("Rule_Id", rule_Id) :
            new ObjectParameter("Rule_Id", typeof(long));


        var rule_NameParameter = rule_Name != null ?
            new ObjectParameter("Rule_Name", rule_Name) :
            new ObjectParameter("Rule_Name", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HXR_GET_RULE_SP_Result>("HXR_GET_RULE_SP", client_IDParameter, project_IDParameter, rule_IdParameter, rule_NameParameter, status_Code, message);
    }


    public virtual int HXR_INSERT_RULE_ATTRIBUTE_SP(string client_ID, string project_ID, Nullable<long> rule_ID, Nullable<long> ruleType_ID, string error_Code, Nullable<long> ruleCategory_ID, string table_name, string column_Name, string default_value, string conditional_Clause, string rule_Description, string priority, string reference_Table, string reference_Column, string reference_Cond, string data_Steward, string last_Modified_By, ObjectParameter status_code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var rule_IDParameter = rule_ID.HasValue ?
            new ObjectParameter("Rule_ID", rule_ID) :
            new ObjectParameter("Rule_ID", typeof(long));


        var ruleType_IDParameter = ruleType_ID.HasValue ?
            new ObjectParameter("RuleType_ID", ruleType_ID) :
            new ObjectParameter("RuleType_ID", typeof(long));


        var error_CodeParameter = error_Code != null ?
            new ObjectParameter("Error_Code", error_Code) :
            new ObjectParameter("Error_Code", typeof(string));


        var ruleCategory_IDParameter = ruleCategory_ID.HasValue ?
            new ObjectParameter("RuleCategory_ID", ruleCategory_ID) :
            new ObjectParameter("RuleCategory_ID", typeof(long));


        var table_nameParameter = table_name != null ?
            new ObjectParameter("Table_name", table_name) :
            new ObjectParameter("Table_name", typeof(string));


        var column_NameParameter = column_Name != null ?
            new ObjectParameter("Column_Name", column_Name) :
            new ObjectParameter("Column_Name", typeof(string));


        var default_valueParameter = default_value != null ?
            new ObjectParameter("Default_value", default_value) :
            new ObjectParameter("Default_value", typeof(string));


        var conditional_ClauseParameter = conditional_Clause != null ?
            new ObjectParameter("Conditional_Clause", conditional_Clause) :
            new ObjectParameter("Conditional_Clause", typeof(string));


        var rule_DescriptionParameter = rule_Description != null ?
            new ObjectParameter("Rule_Description", rule_Description) :
            new ObjectParameter("Rule_Description", typeof(string));


        var priorityParameter = priority != null ?
            new ObjectParameter("Priority", priority) :
            new ObjectParameter("Priority", typeof(string));


        var reference_TableParameter = reference_Table != null ?
            new ObjectParameter("Reference_Table", reference_Table) :
            new ObjectParameter("Reference_Table", typeof(string));


        var reference_ColumnParameter = reference_Column != null ?
            new ObjectParameter("Reference_Column", reference_Column) :
            new ObjectParameter("Reference_Column", typeof(string));


        var reference_CondParameter = reference_Cond != null ?
            new ObjectParameter("Reference_Cond", reference_Cond) :
            new ObjectParameter("Reference_Cond", typeof(string));


        var data_StewardParameter = data_Steward != null ?
            new ObjectParameter("Data_Steward", data_Steward) :
            new ObjectParameter("Data_Steward", typeof(string));


        var last_Modified_ByParameter = last_Modified_By != null ?
            new ObjectParameter("Last_Modified_By", last_Modified_By) :
            new ObjectParameter("Last_Modified_By", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HXR_INSERT_RULE_ATTRIBUTE_SP", client_IDParameter, project_IDParameter, rule_IDParameter, ruleType_IDParameter, error_CodeParameter, ruleCategory_IDParameter, table_nameParameter, column_NameParameter, default_valueParameter, conditional_ClauseParameter, rule_DescriptionParameter, priorityParameter, reference_TableParameter, reference_ColumnParameter, reference_CondParameter, data_StewardParameter, last_Modified_ByParameter, status_code, message);
    }


    public virtual ObjectResult<HXR_GET_RULE_VALIDATION_SP> HXR_GET_RULE_VALIDATION_SP(string client_ID, string project_ID, Nullable<long> tool_ID, Nullable<long> role_ID, string tablename, string query, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var tool_IDParameter = tool_ID.HasValue ?
            new ObjectParameter("Tool_ID", tool_ID) :
            new ObjectParameter("Tool_ID", typeof(long));


        var role_IDParameter = role_ID.HasValue ?
            new ObjectParameter("Role_ID", role_ID) :
            new ObjectParameter("Role_ID", typeof(long));


        var tablenameParameter = tablename != null ?
            new ObjectParameter("Tablename", tablename) :
            new ObjectParameter("Tablename", typeof(string));


        var queryParameter = query != null ?
            new ObjectParameter("Query", query) :
            new ObjectParameter("Query", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HXR_GET_RULE_VALIDATION_SP>("HXR_GET_RULE_VALIDATION_SP", client_IDParameter, project_IDParameter, tool_IDParameter, role_IDParameter, tablenameParameter, queryParameter, status_Code, message);
    }


    public virtual ObjectResult<DIMA_DELETE_MAPPING_MS_SP_Result> DIMA_DELETE_MAPPING_MS_SP(string client_ID, string project_ID, ObjectParameter status_code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DIMA_DELETE_MAPPING_MS_SP_Result>("DIMA_DELETE_MAPPING_MS_SP", client_IDParameter, project_IDParameter, status_code, message);
    }


    public virtual int DIMA_UPDATE_TABLE_TYPE_SP(ObjectParameter status_Code, ObjectParameter message)
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DIMA_UPDATE_TABLE_TYPE_SP", status_Code, message);
    }


    public virtual int INFAGEN_INSERT_AB_SOURCE_SP(string client_ID, string project_ID, Nullable<long> connection_ID, string template_ID, string template_Name, string table_Name, Nullable<long> field_Seq_No, string field_Name, string field_Prec, string field_Scale, string field_Key, string field_Data, string field_Description, string field_Type, string dataFeed, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var connection_IDParameter = connection_ID.HasValue ?
            new ObjectParameter("Connection_ID", connection_ID) :
            new ObjectParameter("Connection_ID", typeof(long));


        var template_IDParameter = template_ID != null ?
            new ObjectParameter("Template_ID", template_ID) :
            new ObjectParameter("Template_ID", typeof(string));


        var template_NameParameter = template_Name != null ?
            new ObjectParameter("Template_Name", template_Name) :
            new ObjectParameter("Template_Name", typeof(string));


        var table_NameParameter = table_Name != null ?
            new ObjectParameter("Table_Name", table_Name) :
            new ObjectParameter("Table_Name", typeof(string));


        var field_Seq_NoParameter = field_Seq_No.HasValue ?
            new ObjectParameter("Field_Seq_No", field_Seq_No) :
            new ObjectParameter("Field_Seq_No", typeof(long));


        var field_NameParameter = field_Name != null ?
            new ObjectParameter("Field_Name", field_Name) :
            new ObjectParameter("Field_Name", typeof(string));


        var field_PrecParameter = field_Prec != null ?
            new ObjectParameter("Field_Prec", field_Prec) :
            new ObjectParameter("Field_Prec", typeof(string));


        var field_ScaleParameter = field_Scale != null ?
            new ObjectParameter("Field_Scale", field_Scale) :
            new ObjectParameter("Field_Scale", typeof(string));


        var field_KeyParameter = field_Key != null ?
            new ObjectParameter("Field_Key", field_Key) :
            new ObjectParameter("Field_Key", typeof(string));


        var field_DataParameter = field_Data != null ?
            new ObjectParameter("Field_Data", field_Data) :
            new ObjectParameter("Field_Data", typeof(string));


        var field_DescriptionParameter = field_Description != null ?
            new ObjectParameter("Field_Description", field_Description) :
            new ObjectParameter("Field_Description", typeof(string));


        var field_TypeParameter = field_Type != null ?
            new ObjectParameter("Field_Type", field_Type) :
            new ObjectParameter("Field_Type", typeof(string));


        var dataFeedParameter = dataFeed != null ?
            new ObjectParameter("DataFeed", dataFeed) :
            new ObjectParameter("DataFeed", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INFAGEN_INSERT_AB_SOURCE_SP", client_IDParameter, project_IDParameter, connection_IDParameter, template_IDParameter, template_NameParameter, table_NameParameter, field_Seq_NoParameter, field_NameParameter, field_PrecParameter, field_ScaleParameter, field_KeyParameter, field_DataParameter, field_DescriptionParameter, field_TypeParameter, dataFeedParameter, status_Code, message);
    }


    public virtual ObjectResult<PRC_TO_UPDATE_SOURCE_TABLE_QUERY_SP> PRC_TO_UPDATE_SOURCE_TABLE_SP(string table_name, string primary_key_col, string primary_key_value, string update_col, string update_val, Nullable<long> config_ID, ObjectParameter status_Code, ObjectParameter message)
    {

        var table_nameParameter = table_name != null ?
            new ObjectParameter("Table_name", table_name) :
            new ObjectParameter("Table_name", typeof(string));


        var primary_key_colParameter = primary_key_col != null ?
            new ObjectParameter("Primary_key_col", primary_key_col) :
            new ObjectParameter("Primary_key_col", typeof(string));


        var primary_key_valueParameter = primary_key_value != null ?
            new ObjectParameter("Primary_key_value", primary_key_value) :
            new ObjectParameter("Primary_key_value", typeof(string));


        var update_colParameter = update_col != null ?
            new ObjectParameter("Update_col", update_col) :
            new ObjectParameter("Update_col", typeof(string));


        var update_valParameter = update_val != null ?
            new ObjectParameter("Update_val", update_val) :
            new ObjectParameter("Update_val", typeof(string));


        var config_IDParameter = config_ID.HasValue ?
            new ObjectParameter("Config_ID", config_ID) :
            new ObjectParameter("Config_ID", typeof(long));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PRC_TO_UPDATE_SOURCE_TABLE_QUERY_SP>("PRC_TO_UPDATE_SOURCE_TABLE_SP", table_nameParameter, primary_key_colParameter, primary_key_valueParameter, update_colParameter, update_valParameter, config_IDParameter, status_Code, message);
    }


    public virtual ObjectResult<HXR_GET_RULE_ATTRIBUTE_FOR_DISPLAY_SP_Result> HXR_GET_RULE_ATTRIBUTE_FOR_DISPLAY_SP(string client_ID, string project_ID, string table_name, string column_Name, Nullable<long> rule_Type_ID, Nullable<int> pageNo, Nullable<int> recordsPerPage, ObjectParameter status_Code, ObjectParameter message, ObjectParameter totalCount)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var table_nameParameter = table_name != null ?
            new ObjectParameter("Table_name", table_name) :
            new ObjectParameter("Table_name", typeof(string));


        var column_NameParameter = column_Name != null ?
            new ObjectParameter("Column_Name", column_Name) :
            new ObjectParameter("Column_Name", typeof(string));


        var rule_Type_IDParameter = rule_Type_ID.HasValue ?
            new ObjectParameter("Rule_Type_ID", rule_Type_ID) :
            new ObjectParameter("Rule_Type_ID", typeof(long));


        var pageNoParameter = pageNo.HasValue ?
            new ObjectParameter("PageNo", pageNo) :
            new ObjectParameter("PageNo", typeof(int));


        var recordsPerPageParameter = recordsPerPage.HasValue ?
            new ObjectParameter("RecordsPerPage", recordsPerPage) :
            new ObjectParameter("RecordsPerPage", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HXR_GET_RULE_ATTRIBUTE_FOR_DISPLAY_SP_Result>("HXR_GET_RULE_ATTRIBUTE_FOR_DISPLAY_SP", client_IDParameter, project_IDParameter, table_nameParameter, column_NameParameter, rule_Type_IDParameter, pageNoParameter, recordsPerPageParameter, status_Code, message, totalCount);
    }


    public virtual ObjectResult<RPT_GET_REPORT_DETAILS_SP_Result> RPT_GET_REPORT_DETAILS_SP(string client_ID, string project_ID, Nullable<long> tool_ID, Nullable<long> report_ID, string report_Name, string report_Display_Name, string report_Description, string report_Server_Path, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var tool_IDParameter = tool_ID.HasValue ?
            new ObjectParameter("Tool_ID", tool_ID) :
            new ObjectParameter("Tool_ID", typeof(long));


        var report_IDParameter = report_ID.HasValue ?
            new ObjectParameter("Report_ID", report_ID) :
            new ObjectParameter("Report_ID", typeof(long));


        var report_NameParameter = report_Name != null ?
            new ObjectParameter("Report_Name", report_Name) :
            new ObjectParameter("Report_Name", typeof(string));


        var report_Display_NameParameter = report_Display_Name != null ?
            new ObjectParameter("Report_Display_Name", report_Display_Name) :
            new ObjectParameter("Report_Display_Name", typeof(string));


        var report_DescriptionParameter = report_Description != null ?
            new ObjectParameter("Report_Description", report_Description) :
            new ObjectParameter("Report_Description", typeof(string));


        var report_Server_PathParameter = report_Server_Path != null ?
            new ObjectParameter("Report_Server_Path", report_Server_Path) :
            new ObjectParameter("Report_Server_Path", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RPT_GET_REPORT_DETAILS_SP_Result>("RPT_GET_REPORT_DETAILS_SP", client_IDParameter, project_IDParameter, tool_IDParameter, report_IDParameter, report_NameParameter, report_Display_NameParameter, report_DescriptionParameter, report_Server_PathParameter, status_Code, message);
    }


    public virtual ObjectResult<COMMON_GET_TABLE_LIST_SP_Result> COMMON_GET_TABLE_LIST_SP(string client_ID, string project_ID, Nullable<long> config_ID, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var config_IDParameter = config_ID.HasValue ?
            new ObjectParameter("Config_ID", config_ID) :
            new ObjectParameter("Config_ID", typeof(long));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<COMMON_GET_TABLE_LIST_SP_Result>("COMMON_GET_TABLE_LIST_SP", client_IDParameter, project_IDParameter, config_IDParameter, status_Code, message);
    }


    public virtual ObjectResult<PROFILER_GET_TABLE_DETAILS_SP_Result> PROFILER_GET_TABLE_DETAILS_SP(string client_ID, string project_ID, string table_name, string config_id, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var table_nameParameter = table_name != null ?
            new ObjectParameter("Table_name", table_name) :
            new ObjectParameter("Table_name", typeof(string));


        var config_idParameter = config_id != null ?
            new ObjectParameter("Config_id", config_id) :
            new ObjectParameter("Config_id", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PROFILER_GET_TABLE_DETAILS_SP_Result>("PROFILER_GET_TABLE_DETAILS_SP", client_IDParameter, project_IDParameter, table_nameParameter, config_idParameter, status_Code, message);
    }


    public virtual ObjectResult<PROFILER_GET_TEMPLATE_SP_Result> PROFILER_GET_TEMPLATE_SP(string client_ID, string project_ID, string template_Name, string table_Name, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var template_NameParameter = template_Name != null ?
            new ObjectParameter("Template_Name", template_Name) :
            new ObjectParameter("Template_Name", typeof(string));


        var table_NameParameter = table_Name != null ?
            new ObjectParameter("Table_Name", table_Name) :
            new ObjectParameter("Table_Name", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PROFILER_GET_TEMPLATE_SP_Result>("PROFILER_GET_TEMPLATE_SP", client_IDParameter, project_IDParameter, template_NameParameter, table_NameParameter, status_Code, message);
    }


    public virtual int PROFILER_INSERT_TEMPLATE_SP(ObjectParameter status_Code, ObjectParameter message)
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PROFILER_INSERT_TEMPLATE_SP", status_Code, message);
    }


    public virtual int PROFILER_UPDATE_TEMPLATE_SP(string client_ID, string project_ID, Nullable<long> profile_ID, Nullable<bool> profiling_Status, string modified_By, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var profile_IDParameter = profile_ID.HasValue ?
            new ObjectParameter("Profile_ID", profile_ID) :
            new ObjectParameter("Profile_ID", typeof(long));


        var profiling_StatusParameter = profiling_Status.HasValue ?
            new ObjectParameter("Profiling_Status", profiling_Status) :
            new ObjectParameter("Profiling_Status", typeof(bool));


        var modified_ByParameter = modified_By != null ?
            new ObjectParameter("Modified_By", modified_By) :
            new ObjectParameter("Modified_By", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PROFILER_UPDATE_TEMPLATE_SP", client_IDParameter, project_IDParameter, profile_IDParameter, profiling_StatusParameter, modified_ByParameter, status_Code, message);
    }


    public virtual ObjectResult<COMMON_GET_META_DATA_SP_Result> COMMON_GET_META_DATA_SP(string client_ID, string project_ID, string table_name, string column_Name, Nullable<long> config_ID, ObjectParameter status_code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var table_nameParameter = table_name != null ?
            new ObjectParameter("Table_name", table_name) :
            new ObjectParameter("Table_name", typeof(string));


        var column_NameParameter = column_Name != null ?
            new ObjectParameter("Column_Name", column_Name) :
            new ObjectParameter("Column_Name", typeof(string));


        var config_IDParameter = config_ID.HasValue ?
            new ObjectParameter("Config_ID", config_ID) :
            new ObjectParameter("Config_ID", typeof(long));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<COMMON_GET_META_DATA_SP_Result>("COMMON_GET_META_DATA_SP", client_IDParameter, project_IDParameter, table_nameParameter, column_NameParameter, config_IDParameter, status_code, message);
    }


    public virtual ObjectResult<ETL_GET_SOURCE_SP_Result> ETL_GET_SOURCE_SP(string client_ID, string project_ID, Nullable<long> connection_ID, string template_ID, string template_Name, string table_Name, Nullable<long> field_Seq_No, string field_Name, string field_Description, string field_Data_Type, string field_Prec, string field_Scale, string field_Key, string field_Type, string field_Data, string business_name, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var connection_IDParameter = connection_ID.HasValue ?
            new ObjectParameter("Connection_ID", connection_ID) :
            new ObjectParameter("Connection_ID", typeof(long));


        var template_IDParameter = template_ID != null ?
            new ObjectParameter("Template_ID", template_ID) :
            new ObjectParameter("Template_ID", typeof(string));


        var template_NameParameter = template_Name != null ?
            new ObjectParameter("Template_Name", template_Name) :
            new ObjectParameter("Template_Name", typeof(string));


        var table_NameParameter = table_Name != null ?
            new ObjectParameter("Table_Name", table_Name) :
            new ObjectParameter("Table_Name", typeof(string));


        var field_Seq_NoParameter = field_Seq_No.HasValue ?
            new ObjectParameter("Field_Seq_No", field_Seq_No) :
            new ObjectParameter("Field_Seq_No", typeof(long));


        var field_NameParameter = field_Name != null ?
            new ObjectParameter("Field_Name", field_Name) :
            new ObjectParameter("Field_Name", typeof(string));


        var field_DescriptionParameter = field_Description != null ?
            new ObjectParameter("Field_Description", field_Description) :
            new ObjectParameter("Field_Description", typeof(string));


        var field_Data_TypeParameter = field_Data_Type != null ?
            new ObjectParameter("Field_Data_Type", field_Data_Type) :
            new ObjectParameter("Field_Data_Type", typeof(string));


        var field_PrecParameter = field_Prec != null ?
            new ObjectParameter("Field_Prec", field_Prec) :
            new ObjectParameter("Field_Prec", typeof(string));


        var field_ScaleParameter = field_Scale != null ?
            new ObjectParameter("Field_Scale", field_Scale) :
            new ObjectParameter("Field_Scale", typeof(string));


        var field_KeyParameter = field_Key != null ?
            new ObjectParameter("Field_Key", field_Key) :
            new ObjectParameter("Field_Key", typeof(string));


        var field_TypeParameter = field_Type != null ?
            new ObjectParameter("Field_Type", field_Type) :
            new ObjectParameter("Field_Type", typeof(string));


        var field_DataParameter = field_Data != null ?
            new ObjectParameter("Field_Data", field_Data) :
            new ObjectParameter("Field_Data", typeof(string));


        var business_nameParameter = business_name != null ?
            new ObjectParameter("Business_name", business_name) :
            new ObjectParameter("Business_name", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ETL_GET_SOURCE_SP_Result>("ETL_GET_SOURCE_SP", client_IDParameter, project_IDParameter, connection_IDParameter, template_IDParameter, template_NameParameter, table_NameParameter, field_Seq_NoParameter, field_NameParameter, field_DescriptionParameter, field_Data_TypeParameter, field_PrecParameter, field_ScaleParameter, field_KeyParameter, field_TypeParameter, field_DataParameter, business_nameParameter, status_Code, message);
    }


    public virtual ObjectResult<ETL_GET_SOURCE_TEMPLATE_LIST_SP_Result> ETL_GET_SOURCE_TEMPLATE_LIST_SP(string client_ID, string project_ID, string type, ObjectParameter status_code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var typeParameter = type != null ?
            new ObjectParameter("Type", type) :
            new ObjectParameter("Type", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ETL_GET_SOURCE_TEMPLATE_LIST_SP_Result>("ETL_GET_SOURCE_TEMPLATE_LIST_SP", client_IDParameter, project_IDParameter, typeParameter, status_code, message);
    }


    public virtual ObjectResult<ETL_GET_SOURCE_TEMPLATE_SP_Result> ETL_GET_SOURCE_TEMPLATE_SP(string client_ID, string project_ID, string template_ID, string template_Name, ObjectParameter status_code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var template_IDParameter = template_ID != null ?
            new ObjectParameter("Template_ID", template_ID) :
            new ObjectParameter("Template_ID", typeof(string));


        var template_NameParameter = template_Name != null ?
            new ObjectParameter("Template_Name", template_Name) :
            new ObjectParameter("Template_Name", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ETL_GET_SOURCE_TEMPLATE_SP_Result>("ETL_GET_SOURCE_TEMPLATE_SP", client_IDParameter, project_IDParameter, template_IDParameter, template_NameParameter, status_code, message);
    }


    public virtual ObjectResult<ETL_GET_TARGET_TEMPLATE_SP_Result> ETL_GET_TARGET_TEMPLATE_SP(string client_ID, string project_ID, string template_ID, string template_Name, ObjectParameter status_code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var template_IDParameter = template_ID != null ?
            new ObjectParameter("Template_ID", template_ID) :
            new ObjectParameter("Template_ID", typeof(string));


        var template_NameParameter = template_Name != null ?
            new ObjectParameter("Template_Name", template_Name) :
            new ObjectParameter("Template_Name", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ETL_GET_TARGET_TEMPLATE_SP_Result>("ETL_GET_TARGET_TEMPLATE_SP", client_IDParameter, project_IDParameter, template_IDParameter, template_NameParameter, status_code, message);
    }


    public virtual ObjectResult<ETL_GET_TRANS_TEMPLATE_SP_Result> ETL_GET_TRANS_TEMPLATE_SP(string client_ID, string project_ID, string template_ID, ObjectParameter status_code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var template_IDParameter = template_ID != null ?
            new ObjectParameter("Template_ID", template_ID) :
            new ObjectParameter("Template_ID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ETL_GET_TRANS_TEMPLATE_SP_Result>("ETL_GET_TRANS_TEMPLATE_SP", client_IDParameter, project_IDParameter, template_IDParameter, status_code, message);
    }


    public virtual int ETL_INSERT_SOURCE_SP(string client_ID, string project_ID, Nullable<long> connection_ID, string template_Name, string table_Name, Nullable<long> field_Seq_No, string field_Name, string field_Prec, string field_Scale, string field_Key, string field_Data, string field_Description, string field_Type, string dataFeed, string created_by, Nullable<long> tempalte_ID, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var connection_IDParameter = connection_ID.HasValue ?
            new ObjectParameter("Connection_ID", connection_ID) :
            new ObjectParameter("Connection_ID", typeof(long));


        var template_NameParameter = template_Name != null ?
            new ObjectParameter("Template_Name", template_Name) :
            new ObjectParameter("Template_Name", typeof(string));


        var table_NameParameter = table_Name != null ?
            new ObjectParameter("Table_Name", table_Name) :
            new ObjectParameter("Table_Name", typeof(string));


        var field_Seq_NoParameter = field_Seq_No.HasValue ?
            new ObjectParameter("Field_Seq_No", field_Seq_No) :
            new ObjectParameter("Field_Seq_No", typeof(long));


        var field_NameParameter = field_Name != null ?
            new ObjectParameter("Field_Name", field_Name) :
            new ObjectParameter("Field_Name", typeof(string));


        var field_PrecParameter = field_Prec != null ?
            new ObjectParameter("Field_Prec", field_Prec) :
            new ObjectParameter("Field_Prec", typeof(string));


        var field_ScaleParameter = field_Scale != null ?
            new ObjectParameter("Field_Scale", field_Scale) :
            new ObjectParameter("Field_Scale", typeof(string));


        var field_KeyParameter = field_Key != null ?
            new ObjectParameter("Field_Key", field_Key) :
            new ObjectParameter("Field_Key", typeof(string));


        var field_DataParameter = field_Data != null ?
            new ObjectParameter("Field_Data", field_Data) :
            new ObjectParameter("Field_Data", typeof(string));


        var field_DescriptionParameter = field_Description != null ?
            new ObjectParameter("Field_Description", field_Description) :
            new ObjectParameter("Field_Description", typeof(string));


        var field_TypeParameter = field_Type != null ?
            new ObjectParameter("Field_Type", field_Type) :
            new ObjectParameter("Field_Type", typeof(string));


        var dataFeedParameter = dataFeed != null ?
            new ObjectParameter("DataFeed", dataFeed) :
            new ObjectParameter("DataFeed", typeof(string));


        var created_byParameter = created_by != null ?
            new ObjectParameter("Created_by", created_by) :
            new ObjectParameter("Created_by", typeof(string));


        var tempalte_IDParameter = tempalte_ID.HasValue ?
            new ObjectParameter("Tempalte_ID", tempalte_ID) :
            new ObjectParameter("Tempalte_ID", typeof(long));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ETL_INSERT_SOURCE_SP", client_IDParameter, project_IDParameter, connection_IDParameter, template_NameParameter, table_NameParameter, field_Seq_NoParameter, field_NameParameter, field_PrecParameter, field_ScaleParameter, field_KeyParameter, field_DataParameter, field_DescriptionParameter, field_TypeParameter, dataFeedParameter, created_byParameter, tempalte_IDParameter, status_Code, message);
    }


    public virtual int ETL_INSERT_TARGET_SP(string client_ID, string project_ID, Nullable<long> connection_ID, string template_ID, string template_Name, string table_Name, Nullable<long> field_Seq_No, string field_Name, string field_Prec, string field_Scale, string field_Key, string field_Data_Type, string field_Description, string field_data, string createdby, string modifyby, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var connection_IDParameter = connection_ID.HasValue ?
            new ObjectParameter("Connection_ID", connection_ID) :
            new ObjectParameter("Connection_ID", typeof(long));


        var template_IDParameter = template_ID != null ?
            new ObjectParameter("Template_ID", template_ID) :
            new ObjectParameter("Template_ID", typeof(string));


        var template_NameParameter = template_Name != null ?
            new ObjectParameter("Template_Name", template_Name) :
            new ObjectParameter("Template_Name", typeof(string));


        var table_NameParameter = table_Name != null ?
            new ObjectParameter("Table_Name", table_Name) :
            new ObjectParameter("Table_Name", typeof(string));


        var field_Seq_NoParameter = field_Seq_No.HasValue ?
            new ObjectParameter("Field_Seq_No", field_Seq_No) :
            new ObjectParameter("Field_Seq_No", typeof(long));


        var field_NameParameter = field_Name != null ?
            new ObjectParameter("Field_Name", field_Name) :
            new ObjectParameter("Field_Name", typeof(string));


        var field_PrecParameter = field_Prec != null ?
            new ObjectParameter("Field_Prec", field_Prec) :
            new ObjectParameter("Field_Prec", typeof(string));


        var field_ScaleParameter = field_Scale != null ?
            new ObjectParameter("Field_Scale", field_Scale) :
            new ObjectParameter("Field_Scale", typeof(string));


        var field_KeyParameter = field_Key != null ?
            new ObjectParameter("Field_Key", field_Key) :
            new ObjectParameter("Field_Key", typeof(string));


        var field_Data_TypeParameter = field_Data_Type != null ?
            new ObjectParameter("Field_Data_Type", field_Data_Type) :
            new ObjectParameter("Field_Data_Type", typeof(string));


        var field_DescriptionParameter = field_Description != null ?
            new ObjectParameter("Field_Description", field_Description) :
            new ObjectParameter("Field_Description", typeof(string));


        var field_dataParameter = field_data != null ?
            new ObjectParameter("Field_data", field_data) :
            new ObjectParameter("Field_data", typeof(string));


        var createdbyParameter = createdby != null ?
            new ObjectParameter("createdby", createdby) :
            new ObjectParameter("createdby", typeof(string));


        var modifybyParameter = modifyby != null ?
            new ObjectParameter("modifyby", modifyby) :
            new ObjectParameter("modifyby", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ETL_INSERT_TARGET_SP", client_IDParameter, project_IDParameter, connection_IDParameter, template_IDParameter, template_NameParameter, table_NameParameter, field_Seq_NoParameter, field_NameParameter, field_PrecParameter, field_ScaleParameter, field_KeyParameter, field_Data_TypeParameter, field_DescriptionParameter, field_dataParameter, createdbyParameter, modifybyParameter, status_Code, message);
    }


    public virtual int ETL_INSERT_TRANS_SP(string client_ID, string project_ID, Nullable<long> field_Seq_No, string table_Name, string trans_Name, string trans_Field, string trans_Rule, string field_Type, string field_Length, string trans_Type, Nullable<int> trans_Order, string source_Name, string template_ID, string template_Name, string modified_by, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var field_Seq_NoParameter = field_Seq_No.HasValue ?
            new ObjectParameter("Field_Seq_No", field_Seq_No) :
            new ObjectParameter("Field_Seq_No", typeof(long));


        var table_NameParameter = table_Name != null ?
            new ObjectParameter("Table_Name", table_Name) :
            new ObjectParameter("Table_Name", typeof(string));


        var trans_NameParameter = trans_Name != null ?
            new ObjectParameter("Trans_Name", trans_Name) :
            new ObjectParameter("Trans_Name", typeof(string));


        var trans_FieldParameter = trans_Field != null ?
            new ObjectParameter("Trans_Field", trans_Field) :
            new ObjectParameter("Trans_Field", typeof(string));


        var trans_RuleParameter = trans_Rule != null ?
            new ObjectParameter("Trans_Rule", trans_Rule) :
            new ObjectParameter("Trans_Rule", typeof(string));


        var field_TypeParameter = field_Type != null ?
            new ObjectParameter("Field_Type", field_Type) :
            new ObjectParameter("Field_Type", typeof(string));


        var field_LengthParameter = field_Length != null ?
            new ObjectParameter("Field_Length", field_Length) :
            new ObjectParameter("Field_Length", typeof(string));


        var trans_TypeParameter = trans_Type != null ?
            new ObjectParameter("Trans_Type", trans_Type) :
            new ObjectParameter("Trans_Type", typeof(string));


        var trans_OrderParameter = trans_Order.HasValue ?
            new ObjectParameter("Trans_Order", trans_Order) :
            new ObjectParameter("Trans_Order", typeof(int));


        var source_NameParameter = source_Name != null ?
            new ObjectParameter("Source_Name", source_Name) :
            new ObjectParameter("Source_Name", typeof(string));


        var template_IDParameter = template_ID != null ?
            new ObjectParameter("Template_ID", template_ID) :
            new ObjectParameter("Template_ID", typeof(string));


        var template_NameParameter = template_Name != null ?
            new ObjectParameter("Template_Name", template_Name) :
            new ObjectParameter("Template_Name", typeof(string));


        var modified_byParameter = modified_by != null ?
            new ObjectParameter("Modified_by", modified_by) :
            new ObjectParameter("Modified_by", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ETL_INSERT_TRANS_SP", client_IDParameter, project_IDParameter, field_Seq_NoParameter, table_NameParameter, trans_NameParameter, trans_FieldParameter, trans_RuleParameter, field_TypeParameter, field_LengthParameter, trans_TypeParameter, trans_OrderParameter, source_NameParameter, template_IDParameter, template_NameParameter, modified_byParameter, status_Code, message);
    }


    public virtual int ETL_UPDATE_SOURCE_SP(string client_ID, string project_ID, Nullable<long> row_ID, string table_Name, Nullable<long> connection_ID, string template_ID, string template_Name, Nullable<long> field_Seq_No, string field_Name, string field_Description, string field_Data_Type, string field_Prec, string field_Scale, string field_Key, string field_Type, string field_Data, string business_name, string modified_by, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var row_IDParameter = row_ID.HasValue ?
            new ObjectParameter("Row_ID", row_ID) :
            new ObjectParameter("Row_ID", typeof(long));


        var table_NameParameter = table_Name != null ?
            new ObjectParameter("Table_Name", table_Name) :
            new ObjectParameter("Table_Name", typeof(string));


        var connection_IDParameter = connection_ID.HasValue ?
            new ObjectParameter("Connection_ID", connection_ID) :
            new ObjectParameter("Connection_ID", typeof(long));


        var template_IDParameter = template_ID != null ?
            new ObjectParameter("Template_ID", template_ID) :
            new ObjectParameter("Template_ID", typeof(string));


        var template_NameParameter = template_Name != null ?
            new ObjectParameter("Template_Name", template_Name) :
            new ObjectParameter("Template_Name", typeof(string));


        var field_Seq_NoParameter = field_Seq_No.HasValue ?
            new ObjectParameter("Field_Seq_No", field_Seq_No) :
            new ObjectParameter("Field_Seq_No", typeof(long));


        var field_NameParameter = field_Name != null ?
            new ObjectParameter("Field_Name", field_Name) :
            new ObjectParameter("Field_Name", typeof(string));


        var field_DescriptionParameter = field_Description != null ?
            new ObjectParameter("Field_Description", field_Description) :
            new ObjectParameter("Field_Description", typeof(string));


        var field_Data_TypeParameter = field_Data_Type != null ?
            new ObjectParameter("Field_Data_Type", field_Data_Type) :
            new ObjectParameter("Field_Data_Type", typeof(string));


        var field_PrecParameter = field_Prec != null ?
            new ObjectParameter("Field_Prec", field_Prec) :
            new ObjectParameter("Field_Prec", typeof(string));


        var field_ScaleParameter = field_Scale != null ?
            new ObjectParameter("Field_Scale", field_Scale) :
            new ObjectParameter("Field_Scale", typeof(string));


        var field_KeyParameter = field_Key != null ?
            new ObjectParameter("Field_Key", field_Key) :
            new ObjectParameter("Field_Key", typeof(string));


        var field_TypeParameter = field_Type != null ?
            new ObjectParameter("Field_Type", field_Type) :
            new ObjectParameter("Field_Type", typeof(string));


        var field_DataParameter = field_Data != null ?
            new ObjectParameter("Field_Data", field_Data) :
            new ObjectParameter("Field_Data", typeof(string));


        var business_nameParameter = business_name != null ?
            new ObjectParameter("Business_name", business_name) :
            new ObjectParameter("Business_name", typeof(string));


        var modified_byParameter = modified_by != null ?
            new ObjectParameter("Modified_by", modified_by) :
            new ObjectParameter("Modified_by", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ETL_UPDATE_SOURCE_SP", client_IDParameter, project_IDParameter, row_IDParameter, table_NameParameter, connection_IDParameter, template_IDParameter, template_NameParameter, field_Seq_NoParameter, field_NameParameter, field_DescriptionParameter, field_Data_TypeParameter, field_PrecParameter, field_ScaleParameter, field_KeyParameter, field_TypeParameter, field_DataParameter, business_nameParameter, modified_byParameter, status_Code, message);
    }


    public virtual int ETL_UPDATE_TARGET_SP(string client_ID, string project_ID, Nullable<long> row_ID, string table_Name, Nullable<long> connection_ID, string template_ID, string template_Name, Nullable<long> field_Seq_No, string field_Name, string field_Description, string field_Data_Type, string field_Prec, string field_Scale, string field_Key, string field_Type, string field_Data, string business_name, string modified_by, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var row_IDParameter = row_ID.HasValue ?
            new ObjectParameter("Row_ID", row_ID) :
            new ObjectParameter("Row_ID", typeof(long));


        var table_NameParameter = table_Name != null ?
            new ObjectParameter("Table_Name", table_Name) :
            new ObjectParameter("Table_Name", typeof(string));


        var connection_IDParameter = connection_ID.HasValue ?
            new ObjectParameter("Connection_ID", connection_ID) :
            new ObjectParameter("Connection_ID", typeof(long));


        var template_IDParameter = template_ID != null ?
            new ObjectParameter("Template_ID", template_ID) :
            new ObjectParameter("Template_ID", typeof(string));


        var template_NameParameter = template_Name != null ?
            new ObjectParameter("Template_Name", template_Name) :
            new ObjectParameter("Template_Name", typeof(string));


        var field_Seq_NoParameter = field_Seq_No.HasValue ?
            new ObjectParameter("Field_Seq_No", field_Seq_No) :
            new ObjectParameter("Field_Seq_No", typeof(long));


        var field_NameParameter = field_Name != null ?
            new ObjectParameter("Field_Name", field_Name) :
            new ObjectParameter("Field_Name", typeof(string));


        var field_DescriptionParameter = field_Description != null ?
            new ObjectParameter("Field_Description", field_Description) :
            new ObjectParameter("Field_Description", typeof(string));


        var field_Data_TypeParameter = field_Data_Type != null ?
            new ObjectParameter("Field_Data_Type", field_Data_Type) :
            new ObjectParameter("Field_Data_Type", typeof(string));


        var field_PrecParameter = field_Prec != null ?
            new ObjectParameter("Field_Prec", field_Prec) :
            new ObjectParameter("Field_Prec", typeof(string));


        var field_ScaleParameter = field_Scale != null ?
            new ObjectParameter("Field_Scale", field_Scale) :
            new ObjectParameter("Field_Scale", typeof(string));


        var field_KeyParameter = field_Key != null ?
            new ObjectParameter("Field_Key", field_Key) :
            new ObjectParameter("Field_Key", typeof(string));


        var field_TypeParameter = field_Type != null ?
            new ObjectParameter("Field_Type", field_Type) :
            new ObjectParameter("Field_Type", typeof(string));


        var field_DataParameter = field_Data != null ?
            new ObjectParameter("Field_Data", field_Data) :
            new ObjectParameter("Field_Data", typeof(string));


        var business_nameParameter = business_name != null ?
            new ObjectParameter("Business_name", business_name) :
            new ObjectParameter("Business_name", typeof(string));


        var modified_byParameter = modified_by != null ?
            new ObjectParameter("Modified_by", modified_by) :
            new ObjectParameter("Modified_by", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ETL_UPDATE_TARGET_SP", client_IDParameter, project_IDParameter, row_IDParameter, table_NameParameter, connection_IDParameter, template_IDParameter, template_NameParameter, field_Seq_NoParameter, field_NameParameter, field_DescriptionParameter, field_Data_TypeParameter, field_PrecParameter, field_ScaleParameter, field_KeyParameter, field_TypeParameter, field_DataParameter, business_nameParameter, modified_byParameter, status_Code, message);
    }


    public virtual int ETL_UPDATE_TRANS_SP(string client_ID, string project_ID, Nullable<long> trans_ID, string trans_Name, string trans_Field, string trans_Rule, string field_Type, string field_Length, string trans_Type, Nullable<int> trans_Order, string table_Name, string field_Name, string source_Name, string modified_by, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var trans_IDParameter = trans_ID.HasValue ?
            new ObjectParameter("Trans_ID", trans_ID) :
            new ObjectParameter("Trans_ID", typeof(long));


        var trans_NameParameter = trans_Name != null ?
            new ObjectParameter("Trans_Name", trans_Name) :
            new ObjectParameter("Trans_Name", typeof(string));


        var trans_FieldParameter = trans_Field != null ?
            new ObjectParameter("Trans_Field", trans_Field) :
            new ObjectParameter("Trans_Field", typeof(string));


        var trans_RuleParameter = trans_Rule != null ?
            new ObjectParameter("Trans_Rule", trans_Rule) :
            new ObjectParameter("Trans_Rule", typeof(string));


        var field_TypeParameter = field_Type != null ?
            new ObjectParameter("Field_Type", field_Type) :
            new ObjectParameter("Field_Type", typeof(string));


        var field_LengthParameter = field_Length != null ?
            new ObjectParameter("Field_Length", field_Length) :
            new ObjectParameter("Field_Length", typeof(string));


        var trans_TypeParameter = trans_Type != null ?
            new ObjectParameter("Trans_Type", trans_Type) :
            new ObjectParameter("Trans_Type", typeof(string));


        var trans_OrderParameter = trans_Order.HasValue ?
            new ObjectParameter("Trans_Order", trans_Order) :
            new ObjectParameter("Trans_Order", typeof(int));


        var table_NameParameter = table_Name != null ?
            new ObjectParameter("Table_Name", table_Name) :
            new ObjectParameter("Table_Name", typeof(string));


        var field_NameParameter = field_Name != null ?
            new ObjectParameter("Field_Name", field_Name) :
            new ObjectParameter("Field_Name", typeof(string));


        var source_NameParameter = source_Name != null ?
            new ObjectParameter("Source_Name", source_Name) :
            new ObjectParameter("Source_Name", typeof(string));


        var modified_byParameter = modified_by != null ?
            new ObjectParameter("Modified_by", modified_by) :
            new ObjectParameter("Modified_by", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ETL_UPDATE_TRANS_SP", client_IDParameter, project_IDParameter, trans_IDParameter, trans_NameParameter, trans_FieldParameter, trans_RuleParameter, field_TypeParameter, field_LengthParameter, trans_TypeParameter, trans_OrderParameter, table_NameParameter, field_NameParameter, source_NameParameter, modified_byParameter, status_Code, message);
    }


    public virtual ObjectResult<INFAGEN_GET_AB_TRANS_METADATA_Result> INFAGEN_GET_AB_TRANS_METADATA(string client_ID, string project_ID, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<INFAGEN_GET_AB_TRANS_METADATA_Result>("INFAGEN_GET_AB_TRANS_METADATA", client_IDParameter, project_IDParameter, status_Code, message);
    }


    public virtual ObjectResult<INFAGEN_GET_COLUMN_DATA_TYPE_SP_Result> INFAGEN_GET_COLUMN_DATA_TYPE_SP(string client_ID, string project_ID, string template_Name, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var template_NameParameter = template_Name != null ?
            new ObjectParameter("Template_Name", template_Name) :
            new ObjectParameter("Template_Name", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<INFAGEN_GET_COLUMN_DATA_TYPE_SP_Result>("INFAGEN_GET_COLUMN_DATA_TYPE_SP", client_IDParameter, project_IDParameter, template_NameParameter, status_Code, message);
    }


    public virtual ObjectResult<INFAGEN_GET_CONN_STRING_SP_Result> INFAGEN_GET_CONN_STRING_SP(string client_ID, string project_ID, Nullable<long> tool_ID, string sourceTarget, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var tool_IDParameter = tool_ID.HasValue ?
            new ObjectParameter("Tool_ID", tool_ID) :
            new ObjectParameter("Tool_ID", typeof(long));


        var sourceTargetParameter = sourceTarget != null ?
            new ObjectParameter("SourceTarget", sourceTarget) :
            new ObjectParameter("SourceTarget", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<INFAGEN_GET_CONN_STRING_SP_Result>("INFAGEN_GET_CONN_STRING_SP", client_IDParameter, project_IDParameter, tool_IDParameter, sourceTargetParameter, status_Code, message);
    }


    public virtual ObjectResult<INFAGEN_GET_SOURCE_TARGET_TABLE_SP_Result> INFAGEN_GET_SOURCE_TARGET_TABLE_SP(string client_ID, string project_ID, string source_Target, Nullable<long> tool_ID, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var source_TargetParameter = source_Target != null ?
            new ObjectParameter("Source_Target", source_Target) :
            new ObjectParameter("Source_Target", typeof(string));


        var tool_IDParameter = tool_ID.HasValue ?
            new ObjectParameter("Tool_ID", tool_ID) :
            new ObjectParameter("Tool_ID", typeof(long));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<INFAGEN_GET_SOURCE_TARGET_TABLE_SP_Result>("INFAGEN_GET_SOURCE_TARGET_TABLE_SP", client_IDParameter, project_IDParameter, source_TargetParameter, tool_IDParameter, status_Code, message);
    }


    public virtual ObjectResult<INFAGEN_GET_TEMPLATE_TABLE_COLUMNS_SP_Result> INFAGEN_GET_TEMPLATE_TABLE_COLUMNS_SP(string client_ID, string project_ID, string template_Name, string table_Name, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var template_NameParameter = template_Name != null ?
            new ObjectParameter("Template_Name", template_Name) :
            new ObjectParameter("Template_Name", typeof(string));


        var table_NameParameter = table_Name != null ?
            new ObjectParameter("Table_Name", table_Name) :
            new ObjectParameter("Table_Name", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<INFAGEN_GET_TEMPLATE_TABLE_COLUMNS_SP_Result>("INFAGEN_GET_TEMPLATE_TABLE_COLUMNS_SP", client_IDParameter, project_IDParameter, template_NameParameter, table_NameParameter, status_Code, message);
    }


    public virtual ObjectResult<INFAGEN_GET_TEMPLATE_TABLE_SP_Result> INFAGEN_GET_TEMPLATE_TABLE_SP(string client_ID, string project_ID, string template_Name, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var template_NameParameter = template_Name != null ?
            new ObjectParameter("Template_Name", template_Name) :
            new ObjectParameter("Template_Name", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<INFAGEN_GET_TEMPLATE_TABLE_SP_Result>("INFAGEN_GET_TEMPLATE_TABLE_SP", client_IDParameter, project_IDParameter, template_NameParameter, status_Code, message);
    }


    public virtual int INFAGEN_INSERT_AB_ADDTRANS_SP(string client_ID, string project_ID, Nullable<long> tool_ID, string templateName, string transName, string transType, string tableName, string columnName, string transRule, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var tool_IDParameter = tool_ID.HasValue ?
            new ObjectParameter("Tool_ID", tool_ID) :
            new ObjectParameter("Tool_ID", typeof(long));


        var templateNameParameter = templateName != null ?
            new ObjectParameter("TemplateName", templateName) :
            new ObjectParameter("TemplateName", typeof(string));


        var transNameParameter = transName != null ?
            new ObjectParameter("TransName", transName) :
            new ObjectParameter("TransName", typeof(string));


        var transTypeParameter = transType != null ?
            new ObjectParameter("TransType", transType) :
            new ObjectParameter("TransType", typeof(string));


        var tableNameParameter = tableName != null ?
            new ObjectParameter("tableName", tableName) :
            new ObjectParameter("tableName", typeof(string));


        var columnNameParameter = columnName != null ?
            new ObjectParameter("ColumnName", columnName) :
            new ObjectParameter("ColumnName", typeof(string));


        var transRuleParameter = transRule != null ?
            new ObjectParameter("TransRule", transRule) :
            new ObjectParameter("TransRule", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INFAGEN_INSERT_AB_ADDTRANS_SP", client_IDParameter, project_IDParameter, tool_IDParameter, templateNameParameter, transNameParameter, transTypeParameter, tableNameParameter, columnNameParameter, transRuleParameter, status_Code, message);
    }


    public virtual int PROFILER_CREATE_DYNAMIC_VIEW_SP(string tableName, Nullable<long> role_ID, string columnList, Nullable<long> rowCount, string source_DB_Name, ObjectParameter viewName)
    {

        var tableNameParameter = tableName != null ?
            new ObjectParameter("TableName", tableName) :
            new ObjectParameter("TableName", typeof(string));


        var role_IDParameter = role_ID.HasValue ?
            new ObjectParameter("Role_ID", role_ID) :
            new ObjectParameter("Role_ID", typeof(long));


        var columnListParameter = columnList != null ?
            new ObjectParameter("ColumnList", columnList) :
            new ObjectParameter("ColumnList", typeof(string));


        var rowCountParameter = rowCount.HasValue ?
            new ObjectParameter("RowCount", rowCount) :
            new ObjectParameter("RowCount", typeof(long));


        var source_DB_NameParameter = source_DB_Name != null ?
            new ObjectParameter("Source_DB_Name", source_DB_Name) :
            new ObjectParameter("Source_DB_Name", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PROFILER_CREATE_DYNAMIC_VIEW_SP", tableNameParameter, role_IDParameter, columnListParameter, rowCountParameter, source_DB_NameParameter, viewName);
    }


    public virtual int PROFILER_DROP_DYNAMIC_VIEW_SP(string viewName, string source_DB_Name, ObjectParameter status_Code, ObjectParameter message)
    {

        var viewNameParameter = viewName != null ?
            new ObjectParameter("ViewName", viewName) :
            new ObjectParameter("ViewName", typeof(string));


        var source_DB_NameParameter = source_DB_Name != null ?
            new ObjectParameter("Source_DB_Name", source_DB_Name) :
            new ObjectParameter("Source_DB_Name", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PROFILER_DROP_DYNAMIC_VIEW_SP", viewNameParameter, source_DB_NameParameter, status_Code, message);
    }


    public virtual ObjectResult<PROFILER_GET_DISTINCT_TEMPLATES_SP_Result> PROFILER_GET_DISTINCT_TEMPLATES_SP(string client_ID, string project_ID, Nullable<long> config_ID, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var config_IDParameter = config_ID.HasValue ?
            new ObjectParameter("Config_ID", config_ID) :
            new ObjectParameter("Config_ID", typeof(long));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PROFILER_GET_DISTINCT_TEMPLATES_SP_Result>("PROFILER_GET_DISTINCT_TEMPLATES_SP", client_IDParameter, project_IDParameter, config_IDParameter, status_Code, message);
    }


    public virtual ObjectResult<PROFILER_GET_PARAMETER_VALUES_SP_Result> PROFILER_GET_PARAMETER_VALUES_SP(Nullable<long> tool_ID, ObjectParameter status_Code, ObjectParameter message)
    {

        var tool_IDParameter = tool_ID.HasValue ?
            new ObjectParameter("Tool_ID", tool_ID) :
            new ObjectParameter("Tool_ID", typeof(long));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PROFILER_GET_PARAMETER_VALUES_SP_Result>("PROFILER_GET_PARAMETER_VALUES_SP", tool_IDParameter, status_Code, message);
    }


    public virtual int PROFILER_GET_TABLE_COLUMN_VALUES_SP(Nullable<long> config_ID, string table_name, string column_list, string row_Count, Nullable<int> pageNo, Nullable<int> recordsPerPage, ObjectParameter status_Code, ObjectParameter message, ObjectParameter totalCount)
    {

        var config_IDParameter = config_ID.HasValue ?
            new ObjectParameter("Config_ID", config_ID) :
            new ObjectParameter("Config_ID", typeof(long));


        var table_nameParameter = table_name != null ?
            new ObjectParameter("Table_name", table_name) :
            new ObjectParameter("Table_name", typeof(string));


        var column_listParameter = column_list != null ?
            new ObjectParameter("Column_list", column_list) :
            new ObjectParameter("Column_list", typeof(string));


        var row_CountParameter = row_Count != null ?
            new ObjectParameter("Row_Count", row_Count) :
            new ObjectParameter("Row_Count", typeof(string));


        var pageNoParameter = pageNo.HasValue ?
            new ObjectParameter("PageNo", pageNo) :
            new ObjectParameter("PageNo", typeof(int));


        var recordsPerPageParameter = recordsPerPage.HasValue ?
            new ObjectParameter("RecordsPerPage", recordsPerPage) :
            new ObjectParameter("RecordsPerPage", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PROFILER_GET_TABLE_COLUMN_VALUES_SP", config_IDParameter, table_nameParameter, column_listParameter, row_CountParameter, pageNoParameter, recordsPerPageParameter, status_Code, message, totalCount);
    }


    public virtual ObjectResult<PROFILER_GET_TEMPALTE_DETAILS_SP_Result> PROFILER_GET_TEMPALTE_DETAILS_SP(string client_ID, string project_ID, string template_Name, Nullable<long> config_ID, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var template_NameParameter = template_Name != null ?
            new ObjectParameter("Template_Name", template_Name) :
            new ObjectParameter("Template_Name", typeof(string));


        var config_IDParameter = config_ID.HasValue ?
            new ObjectParameter("Config_ID", config_ID) :
            new ObjectParameter("Config_ID", typeof(long));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PROFILER_GET_TEMPALTE_DETAILS_SP_Result>("PROFILER_GET_TEMPALTE_DETAILS_SP", client_IDParameter, project_IDParameter, template_NameParameter, config_IDParameter, status_Code, message);
    }


    public virtual ObjectResult<HXR_GET_RULE_FUNCTION_SP_Result> HXR_GET_RULE_FUNCTION_SP(string client_ID, string project_ID, string data_type, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var data_typeParameter = data_type != null ?
            new ObjectParameter("Data_type", data_type) :
            new ObjectParameter("Data_type", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HXR_GET_RULE_FUNCTION_SP_Result>("HXR_GET_RULE_FUNCTION_SP", client_IDParameter, project_IDParameter, data_typeParameter, status_Code, message);
    }


    public virtual ObjectResult<ETL_GET_COLUMN_DATA_TYPE_SP_Result> ETL_GET_COLUMN_DATA_TYPE_SP(string client_ID, string project_ID, string template_Name, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var template_NameParameter = template_Name != null ?
            new ObjectParameter("Template_Name", template_Name) :
            new ObjectParameter("Template_Name", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ETL_GET_COLUMN_DATA_TYPE_SP_Result>("ETL_GET_COLUMN_DATA_TYPE_SP", client_IDParameter, project_IDParameter, template_NameParameter, status_Code, message);
    }


    public virtual ObjectResult<ETL_GET_CONN_STRING_SP_Result> ETL_GET_CONN_STRING_SP(string client_ID, string project_ID, Nullable<long> tool_ID, Nullable<long> role_ID, string sourceTarget, string dB_Type, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var tool_IDParameter = tool_ID.HasValue ?
            new ObjectParameter("Tool_ID", tool_ID) :
            new ObjectParameter("Tool_ID", typeof(long));


        var role_IDParameter = role_ID.HasValue ?
            new ObjectParameter("Role_ID", role_ID) :
            new ObjectParameter("Role_ID", typeof(long));


        var sourceTargetParameter = sourceTarget != null ?
            new ObjectParameter("SourceTarget", sourceTarget) :
            new ObjectParameter("SourceTarget", typeof(string));


        var dB_TypeParameter = dB_Type != null ?
            new ObjectParameter("DB_Type", dB_Type) :
            new ObjectParameter("DB_Type", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ETL_GET_CONN_STRING_SP_Result>("ETL_GET_CONN_STRING_SP", client_IDParameter, project_IDParameter, tool_IDParameter, role_IDParameter, sourceTargetParameter, dB_TypeParameter, status_Code, message);
    }


    public virtual ObjectResult<ETL_GET_SOURCE_TARGET_TABLE_SP_Result> ETL_GET_SOURCE_TARGET_TABLE_SP(string client_ID, string project_ID, Nullable<long> role_ID, string source_Target, Nullable<long> tool_ID, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var role_IDParameter = role_ID.HasValue ?
            new ObjectParameter("Role_ID", role_ID) :
            new ObjectParameter("Role_ID", typeof(long));


        var source_TargetParameter = source_Target != null ?
            new ObjectParameter("Source_Target", source_Target) :
            new ObjectParameter("Source_Target", typeof(string));


        var tool_IDParameter = tool_ID.HasValue ?
            new ObjectParameter("Tool_ID", tool_ID) :
            new ObjectParameter("Tool_ID", typeof(long));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ETL_GET_SOURCE_TARGET_TABLE_SP_Result>("ETL_GET_SOURCE_TARGET_TABLE_SP", client_IDParameter, project_IDParameter, role_IDParameter, source_TargetParameter, tool_IDParameter, status_Code, message);
    }


    public virtual ObjectResult<ETL_GET_TARGET_SP_Result> ETL_GET_TARGET_SP(string client_ID, string project_ID, Nullable<long> connection_ID, string template_ID, string template_Name, string table_Name, Nullable<long> field_Seq_No, string field_Name, string field_Description, string field_Data_Type, string field_Prec, string field_Scale, string field_Key, string field_Type, string field_Data, string business_name, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var connection_IDParameter = connection_ID.HasValue ?
            new ObjectParameter("Connection_ID", connection_ID) :
            new ObjectParameter("Connection_ID", typeof(long));


        var template_IDParameter = template_ID != null ?
            new ObjectParameter("Template_ID", template_ID) :
            new ObjectParameter("Template_ID", typeof(string));


        var template_NameParameter = template_Name != null ?
            new ObjectParameter("Template_Name", template_Name) :
            new ObjectParameter("Template_Name", typeof(string));


        var table_NameParameter = table_Name != null ?
            new ObjectParameter("Table_Name", table_Name) :
            new ObjectParameter("Table_Name", typeof(string));


        var field_Seq_NoParameter = field_Seq_No.HasValue ?
            new ObjectParameter("Field_Seq_No", field_Seq_No) :
            new ObjectParameter("Field_Seq_No", typeof(long));


        var field_NameParameter = field_Name != null ?
            new ObjectParameter("Field_Name", field_Name) :
            new ObjectParameter("Field_Name", typeof(string));


        var field_DescriptionParameter = field_Description != null ?
            new ObjectParameter("Field_Description", field_Description) :
            new ObjectParameter("Field_Description", typeof(string));


        var field_Data_TypeParameter = field_Data_Type != null ?
            new ObjectParameter("Field_Data_Type", field_Data_Type) :
            new ObjectParameter("Field_Data_Type", typeof(string));


        var field_PrecParameter = field_Prec != null ?
            new ObjectParameter("Field_Prec", field_Prec) :
            new ObjectParameter("Field_Prec", typeof(string));


        var field_ScaleParameter = field_Scale != null ?
            new ObjectParameter("Field_Scale", field_Scale) :
            new ObjectParameter("Field_Scale", typeof(string));


        var field_KeyParameter = field_Key != null ?
            new ObjectParameter("Field_Key", field_Key) :
            new ObjectParameter("Field_Key", typeof(string));


        var field_TypeParameter = field_Type != null ?
            new ObjectParameter("Field_Type", field_Type) :
            new ObjectParameter("Field_Type", typeof(string));


        var field_DataParameter = field_Data != null ?
            new ObjectParameter("Field_Data", field_Data) :
            new ObjectParameter("Field_Data", typeof(string));


        var business_nameParameter = business_name != null ?
            new ObjectParameter("Business_name", business_name) :
            new ObjectParameter("Business_name", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ETL_GET_TARGET_SP_Result>("ETL_GET_TARGET_SP", client_IDParameter, project_IDParameter, connection_IDParameter, template_IDParameter, template_NameParameter, table_NameParameter, field_Seq_NoParameter, field_NameParameter, field_DescriptionParameter, field_Data_TypeParameter, field_PrecParameter, field_ScaleParameter, field_KeyParameter, field_TypeParameter, field_DataParameter, business_nameParameter, status_Code, message);
    }


    public virtual ObjectResult<ETL_GET_TEMPLATE_TABLE_COLUMNS_SP_Result> ETL_GET_TEMPLATE_TABLE_COLUMNS_SP(string client_ID, string project_ID, string template_Name, string table_Name, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var template_NameParameter = template_Name != null ?
            new ObjectParameter("Template_Name", template_Name) :
            new ObjectParameter("Template_Name", typeof(string));


        var table_NameParameter = table_Name != null ?
            new ObjectParameter("Table_Name", table_Name) :
            new ObjectParameter("Table_Name", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ETL_GET_TEMPLATE_TABLE_COLUMNS_SP_Result>("ETL_GET_TEMPLATE_TABLE_COLUMNS_SP", client_IDParameter, project_IDParameter, template_NameParameter, table_NameParameter, status_Code, message);
    }


    public virtual ObjectResult<ETL_GET_TEMPLATE_TABLE_COLUMNS_SP_old_Result> ETL_GET_TEMPLATE_TABLE_COLUMNS_SP_old(string client_ID, string project_ID, string template_Name, string table_Name, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var template_NameParameter = template_Name != null ?
            new ObjectParameter("Template_Name", template_Name) :
            new ObjectParameter("Template_Name", typeof(string));


        var table_NameParameter = table_Name != null ?
            new ObjectParameter("Table_Name", table_Name) :
            new ObjectParameter("Table_Name", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ETL_GET_TEMPLATE_TABLE_COLUMNS_SP_old_Result>("ETL_GET_TEMPLATE_TABLE_COLUMNS_SP_old", client_IDParameter, project_IDParameter, template_NameParameter, table_NameParameter, status_Code, message);
    }


    public virtual ObjectResult<ETL_GET_TEMPLATE_TABLE_SP_Result> ETL_GET_TEMPLATE_TABLE_SP(string client_ID, string project_ID, string template_Name, string type, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var template_NameParameter = template_Name != null ?
            new ObjectParameter("Template_Name", template_Name) :
            new ObjectParameter("Template_Name", typeof(string));


        var typeParameter = type != null ?
            new ObjectParameter("type", type) :
            new ObjectParameter("type", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ETL_GET_TEMPLATE_TABLE_SP_Result>("ETL_GET_TEMPLATE_TABLE_SP", client_IDParameter, project_IDParameter, template_NameParameter, typeParameter, status_Code, message);
    }


    public virtual ObjectResult<ETL_GET_TRANS_METADATA_Result> ETL_GET_TRANS_METADATA(string trans_Tool, ObjectParameter status_Code, ObjectParameter message)
    {

        var trans_ToolParameter = trans_Tool != null ?
            new ObjectParameter("Trans_Tool", trans_Tool) :
            new ObjectParameter("Trans_Tool", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ETL_GET_TRANS_METADATA_Result>("ETL_GET_TRANS_METADATA", trans_ToolParameter, status_Code, message);
    }


    public virtual ObjectResult<ETL_GET_TRANS_SP_Result> ETL_GET_TRANS_SP(string client_ID, string project_ID, Nullable<long> field_Seq_No, string trans_Name, string trans_Field, string trans_Rule, string field_Type, string field_Length, string trans_Type, Nullable<int> trans_Order, string source_Name, Nullable<int> template_ID, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var field_Seq_NoParameter = field_Seq_No.HasValue ?
            new ObjectParameter("Field_Seq_No", field_Seq_No) :
            new ObjectParameter("Field_Seq_No", typeof(long));


        var trans_NameParameter = trans_Name != null ?
            new ObjectParameter("Trans_Name", trans_Name) :
            new ObjectParameter("Trans_Name", typeof(string));


        var trans_FieldParameter = trans_Field != null ?
            new ObjectParameter("Trans_Field", trans_Field) :
            new ObjectParameter("Trans_Field", typeof(string));


        var trans_RuleParameter = trans_Rule != null ?
            new ObjectParameter("Trans_Rule", trans_Rule) :
            new ObjectParameter("Trans_Rule", typeof(string));


        var field_TypeParameter = field_Type != null ?
            new ObjectParameter("Field_Type", field_Type) :
            new ObjectParameter("Field_Type", typeof(string));


        var field_LengthParameter = field_Length != null ?
            new ObjectParameter("Field_Length", field_Length) :
            new ObjectParameter("Field_Length", typeof(string));


        var trans_TypeParameter = trans_Type != null ?
            new ObjectParameter("Trans_Type", trans_Type) :
            new ObjectParameter("Trans_Type", typeof(string));


        var trans_OrderParameter = trans_Order.HasValue ?
            new ObjectParameter("Trans_Order", trans_Order) :
            new ObjectParameter("Trans_Order", typeof(int));


        var source_NameParameter = source_Name != null ?
            new ObjectParameter("Source_Name", source_Name) :
            new ObjectParameter("Source_Name", typeof(string));


        var template_IDParameter = template_ID.HasValue ?
            new ObjectParameter("Template_ID", template_ID) :
            new ObjectParameter("Template_ID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ETL_GET_TRANS_SP_Result>("ETL_GET_TRANS_SP", client_IDParameter, project_IDParameter, field_Seq_NoParameter, trans_NameParameter, trans_FieldParameter, trans_RuleParameter, field_TypeParameter, field_LengthParameter, trans_TypeParameter, trans_OrderParameter, source_NameParameter, template_IDParameter, status_Code, message);
    }


    public virtual int ETL_INSERT_ADDTRANS_SP(string client_ID, string project_ID, Nullable<long> tool_ID, string templateName, string transName, string transType, string tableName, string columnName, string transRule, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var tool_IDParameter = tool_ID.HasValue ?
            new ObjectParameter("Tool_ID", tool_ID) :
            new ObjectParameter("Tool_ID", typeof(long));


        var templateNameParameter = templateName != null ?
            new ObjectParameter("TemplateName", templateName) :
            new ObjectParameter("TemplateName", typeof(string));


        var transNameParameter = transName != null ?
            new ObjectParameter("TransName", transName) :
            new ObjectParameter("TransName", typeof(string));


        var transTypeParameter = transType != null ?
            new ObjectParameter("TransType", transType) :
            new ObjectParameter("TransType", typeof(string));


        var tableNameParameter = tableName != null ?
            new ObjectParameter("tableName", tableName) :
            new ObjectParameter("tableName", typeof(string));


        var columnNameParameter = columnName != null ?
            new ObjectParameter("ColumnName", columnName) :
            new ObjectParameter("ColumnName", typeof(string));


        var transRuleParameter = transRule != null ?
            new ObjectParameter("TransRule", transRule) :
            new ObjectParameter("TransRule", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ETL_INSERT_ADDTRANS_SP", client_IDParameter, project_IDParameter, tool_IDParameter, templateNameParameter, transNameParameter, transTypeParameter, tableNameParameter, columnNameParameter, transRuleParameter, status_Code, message);
    }


    public virtual int COMMON_INSERT_METADATA_INFO_SP(string client_ID, string project_ID, string config_ID, string table_name_list, string last_Modified_By, ObjectParameter generateMap, ObjectParameter status_code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var config_IDParameter = config_ID != null ?
            new ObjectParameter("Config_ID", config_ID) :
            new ObjectParameter("Config_ID", typeof(string));


        var table_name_listParameter = table_name_list != null ?
            new ObjectParameter("Table_name_list", table_name_list) :
            new ObjectParameter("Table_name_list", typeof(string));


        var last_Modified_ByParameter = last_Modified_By != null ?
            new ObjectParameter("Last_Modified_By", last_Modified_By) :
            new ObjectParameter("Last_Modified_By", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("COMMON_INSERT_METADATA_INFO_SP", client_IDParameter, project_IDParameter, config_IDParameter, table_name_listParameter, last_Modified_ByParameter, generateMap, status_code, message);
    }


    public virtual int ETL_GENERATE_TEMPLATES_EY_SP(string client_ID, string project_ID, Nullable<long> tool_ID, ObjectParameter table_count, ObjectParameter status_code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var tool_IDParameter = tool_ID.HasValue ?
            new ObjectParameter("Tool_ID", tool_ID) :
            new ObjectParameter("Tool_ID", typeof(long));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ETL_GENERATE_TEMPLATES_EY_SP", client_IDParameter, project_IDParameter, tool_IDParameter, table_count, status_code, message);
    }


    public virtual int HXR_INSERT_RULE_CATEGORY_SP(string ruleCategory_Name, string ruleCategory_Desc, string inserted_by, ObjectParameter status_code, ObjectParameter message)
    {

        var ruleCategory_NameParameter = ruleCategory_Name != null ?
            new ObjectParameter("RuleCategory_Name", ruleCategory_Name) :
            new ObjectParameter("RuleCategory_Name", typeof(string));


        var ruleCategory_DescParameter = ruleCategory_Desc != null ?
            new ObjectParameter("RuleCategory_Desc", ruleCategory_Desc) :
            new ObjectParameter("RuleCategory_Desc", typeof(string));


        var inserted_byParameter = inserted_by != null ?
            new ObjectParameter("Inserted_by", inserted_by) :
            new ObjectParameter("Inserted_by", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HXR_INSERT_RULE_CATEGORY_SP", ruleCategory_NameParameter, ruleCategory_DescParameter, inserted_byParameter, status_code, message);
    }


    public virtual int HXR_UPDATE_RULE_CATEGORY_SP(Nullable<long> ruleCategory_ID, string ruleCategory_Name, string ruleCategory_Desc, Nullable<long> active_Flag, string last_Modified_By, ObjectParameter status_code, ObjectParameter message)
    {

        var ruleCategory_IDParameter = ruleCategory_ID.HasValue ?
            new ObjectParameter("RuleCategory_ID", ruleCategory_ID) :
            new ObjectParameter("RuleCategory_ID", typeof(long));


        var ruleCategory_NameParameter = ruleCategory_Name != null ?
            new ObjectParameter("RuleCategory_Name", ruleCategory_Name) :
            new ObjectParameter("RuleCategory_Name", typeof(string));


        var ruleCategory_DescParameter = ruleCategory_Desc != null ?
            new ObjectParameter("RuleCategory_Desc", ruleCategory_Desc) :
            new ObjectParameter("RuleCategory_Desc", typeof(string));


        var active_FlagParameter = active_Flag.HasValue ?
            new ObjectParameter("Active_Flag", active_Flag) :
            new ObjectParameter("Active_Flag", typeof(long));


        var last_Modified_ByParameter = last_Modified_By != null ?
            new ObjectParameter("Last_Modified_By", last_Modified_By) :
            new ObjectParameter("Last_Modified_By", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HXR_UPDATE_RULE_CATEGORY_SP", ruleCategory_IDParameter, ruleCategory_NameParameter, ruleCategory_DescParameter, active_FlagParameter, last_Modified_ByParameter, status_code, message);
    }


    public virtual ObjectResult<HXR_GET_KEY_COLUMNS_SP_Result> HXR_GET_KEY_COLUMNS_SP(string client_ID, string project_ID, string table_Name, ObjectParameter status_code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var table_NameParameter = table_Name != null ?
            new ObjectParameter("Table_Name", table_Name) :
            new ObjectParameter("Table_Name", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HXR_GET_KEY_COLUMNS_SP_Result>("HXR_GET_KEY_COLUMNS_SP", client_IDParameter, project_IDParameter, table_NameParameter, status_code, message);
    }


    public virtual int HXR_INSERT_ERROR_SP(string client_ID, string project_ID, string error_Code, string error_Description, string last_Modified_By, ObjectParameter status_code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var error_CodeParameter = error_Code != null ?
            new ObjectParameter("Error_Code", error_Code) :
            new ObjectParameter("Error_Code", typeof(string));


        var error_DescriptionParameter = error_Description != null ?
            new ObjectParameter("Error_Description", error_Description) :
            new ObjectParameter("Error_Description", typeof(string));


        var last_Modified_ByParameter = last_Modified_By != null ?
            new ObjectParameter("Last_Modified_By", last_Modified_By) :
            new ObjectParameter("Last_Modified_By", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HXR_INSERT_ERROR_SP", client_IDParameter, project_IDParameter, error_CodeParameter, error_DescriptionParameter, last_Modified_ByParameter, status_code, message);
    }


    public virtual int HXR_UPDATE_ERROR_SP(string client_ID, string project_ID, string error_Code, string error_Description, Nullable<long> active_Flag, string last_Modified_By, ObjectParameter status_code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var error_CodeParameter = error_Code != null ?
            new ObjectParameter("Error_Code", error_Code) :
            new ObjectParameter("Error_Code", typeof(string));


        var error_DescriptionParameter = error_Description != null ?
            new ObjectParameter("Error_Description", error_Description) :
            new ObjectParameter("Error_Description", typeof(string));


        var active_FlagParameter = active_Flag.HasValue ?
            new ObjectParameter("Active_Flag", active_Flag) :
            new ObjectParameter("Active_Flag", typeof(long));


        var last_Modified_ByParameter = last_Modified_By != null ?
            new ObjectParameter("Last_Modified_By", last_Modified_By) :
            new ObjectParameter("Last_Modified_By", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HXR_UPDATE_ERROR_SP", client_IDParameter, project_IDParameter, error_CodeParameter, error_DescriptionParameter, active_FlagParameter, last_Modified_ByParameter, status_code, message);
    }


    public virtual int HXR_INSERT_RULE_SP(string client_ID, string project_ID, string rule_Name, string rule_Description, Nullable<System.DateTime> start_Date, Nullable<System.DateTime> end_Date, string conditional_Clause, string default_value, string last_Modified_By, ObjectParameter rule_ID, ObjectParameter status_code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var rule_NameParameter = rule_Name != null ?
            new ObjectParameter("Rule_Name", rule_Name) :
            new ObjectParameter("Rule_Name", typeof(string));


        var rule_DescriptionParameter = rule_Description != null ?
            new ObjectParameter("Rule_Description", rule_Description) :
            new ObjectParameter("Rule_Description", typeof(string));


        var start_DateParameter = start_Date.HasValue ?
            new ObjectParameter("Start_Date", start_Date) :
            new ObjectParameter("Start_Date", typeof(System.DateTime));


        var end_DateParameter = end_Date.HasValue ?
            new ObjectParameter("End_Date", end_Date) :
            new ObjectParameter("End_Date", typeof(System.DateTime));


        var conditional_ClauseParameter = conditional_Clause != null ?
            new ObjectParameter("Conditional_Clause", conditional_Clause) :
            new ObjectParameter("Conditional_Clause", typeof(string));


        var default_valueParameter = default_value != null ?
            new ObjectParameter("Default_value", default_value) :
            new ObjectParameter("Default_value", typeof(string));


        var last_Modified_ByParameter = last_Modified_By != null ?
            new ObjectParameter("Last_Modified_By", last_Modified_By) :
            new ObjectParameter("Last_Modified_By", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HXR_INSERT_RULE_SP", client_IDParameter, project_IDParameter, rule_NameParameter, rule_DescriptionParameter, start_DateParameter, end_DateParameter, conditional_ClauseParameter, default_valueParameter, last_Modified_ByParameter, rule_ID, status_code, message);
    }


    public virtual int HXR_UPDATE_RULE_SP(string client_ID, string project_ID, Nullable<long> rule_ID, string rule_Name, Nullable<long> active_Flag, string rule_Description, Nullable<System.DateTime> start_Date, Nullable<System.DateTime> end_Date, string conditional_Clause, string default_value, string last_Modified_By, ObjectParameter status_code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var rule_IDParameter = rule_ID.HasValue ?
            new ObjectParameter("Rule_ID", rule_ID) :
            new ObjectParameter("Rule_ID", typeof(long));


        var rule_NameParameter = rule_Name != null ?
            new ObjectParameter("Rule_Name", rule_Name) :
            new ObjectParameter("Rule_Name", typeof(string));


        var active_FlagParameter = active_Flag.HasValue ?
            new ObjectParameter("Active_Flag", active_Flag) :
            new ObjectParameter("Active_Flag", typeof(long));


        var rule_DescriptionParameter = rule_Description != null ?
            new ObjectParameter("Rule_Description", rule_Description) :
            new ObjectParameter("Rule_Description", typeof(string));


        var start_DateParameter = start_Date.HasValue ?
            new ObjectParameter("Start_Date", start_Date) :
            new ObjectParameter("Start_Date", typeof(System.DateTime));


        var end_DateParameter = end_Date.HasValue ?
            new ObjectParameter("End_Date", end_Date) :
            new ObjectParameter("End_Date", typeof(System.DateTime));


        var conditional_ClauseParameter = conditional_Clause != null ?
            new ObjectParameter("Conditional_Clause", conditional_Clause) :
            new ObjectParameter("Conditional_Clause", typeof(string));


        var default_valueParameter = default_value != null ?
            new ObjectParameter("Default_value", default_value) :
            new ObjectParameter("Default_value", typeof(string));


        var last_Modified_ByParameter = last_Modified_By != null ?
            new ObjectParameter("Last_Modified_By", last_Modified_By) :
            new ObjectParameter("Last_Modified_By", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HXR_UPDATE_RULE_SP", client_IDParameter, project_IDParameter, rule_IDParameter, rule_NameParameter, active_FlagParameter, rule_DescriptionParameter, start_DateParameter, end_DateParameter, conditional_ClauseParameter, default_valueParameter, last_Modified_ByParameter, status_code, message);
    }


    public virtual int COMMON_INSERT_CONFIG_DETAILS_SP(string client_ID, string project_ID, Nullable<long> tool_ID, string source_Target, string dB_TYPE, string sERVER_NAME, string sERVER_IP_ADDRESS, string sERVER_PORT, string dATABASE_NAME, string dATABASE_PASSWORD, string sCHEMA_NAME, string sCHEMA_PASSWORD, Nullable<long> aCTIVE_FLAG, string oS_Username, string oS_PASSWORD, Nullable<System.DateTime> last_Modified_Date, string last_Modified_By, Nullable<int> role_ID, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var tool_IDParameter = tool_ID.HasValue ?
            new ObjectParameter("Tool_ID", tool_ID) :
            new ObjectParameter("Tool_ID", typeof(long));


        var source_TargetParameter = source_Target != null ?
            new ObjectParameter("Source_Target", source_Target) :
            new ObjectParameter("Source_Target", typeof(string));


        var dB_TYPEParameter = dB_TYPE != null ?
            new ObjectParameter("DB_TYPE", dB_TYPE) :
            new ObjectParameter("DB_TYPE", typeof(string));


        var sERVER_NAMEParameter = sERVER_NAME != null ?
            new ObjectParameter("SERVER_NAME", sERVER_NAME) :
            new ObjectParameter("SERVER_NAME", typeof(string));


        var sERVER_IP_ADDRESSParameter = sERVER_IP_ADDRESS != null ?
            new ObjectParameter("SERVER_IP_ADDRESS", sERVER_IP_ADDRESS) :
            new ObjectParameter("SERVER_IP_ADDRESS", typeof(string));


        var sERVER_PORTParameter = sERVER_PORT != null ?
            new ObjectParameter("SERVER_PORT", sERVER_PORT) :
            new ObjectParameter("SERVER_PORT", typeof(string));


        var dATABASE_NAMEParameter = dATABASE_NAME != null ?
            new ObjectParameter("DATABASE_NAME", dATABASE_NAME) :
            new ObjectParameter("DATABASE_NAME", typeof(string));


        var dATABASE_PASSWORDParameter = dATABASE_PASSWORD != null ?
            new ObjectParameter("DATABASE_PASSWORD", dATABASE_PASSWORD) :
            new ObjectParameter("DATABASE_PASSWORD", typeof(string));


        var sCHEMA_NAMEParameter = sCHEMA_NAME != null ?
            new ObjectParameter("SCHEMA_NAME", sCHEMA_NAME) :
            new ObjectParameter("SCHEMA_NAME", typeof(string));


        var sCHEMA_PASSWORDParameter = sCHEMA_PASSWORD != null ?
            new ObjectParameter("SCHEMA_PASSWORD", sCHEMA_PASSWORD) :
            new ObjectParameter("SCHEMA_PASSWORD", typeof(string));


        var aCTIVE_FLAGParameter = aCTIVE_FLAG.HasValue ?
            new ObjectParameter("ACTIVE_FLAG", aCTIVE_FLAG) :
            new ObjectParameter("ACTIVE_FLAG", typeof(long));


        var oS_UsernameParameter = oS_Username != null ?
            new ObjectParameter("OS_Username", oS_Username) :
            new ObjectParameter("OS_Username", typeof(string));


        var oS_PASSWORDParameter = oS_PASSWORD != null ?
            new ObjectParameter("OS_PASSWORD", oS_PASSWORD) :
            new ObjectParameter("OS_PASSWORD", typeof(string));


        var last_Modified_DateParameter = last_Modified_Date.HasValue ?
            new ObjectParameter("Last_Modified_Date", last_Modified_Date) :
            new ObjectParameter("Last_Modified_Date", typeof(System.DateTime));


        var last_Modified_ByParameter = last_Modified_By != null ?
            new ObjectParameter("Last_Modified_By", last_Modified_By) :
            new ObjectParameter("Last_Modified_By", typeof(string));


        var role_IDParameter = role_ID.HasValue ?
            new ObjectParameter("Role_ID", role_ID) :
            new ObjectParameter("Role_ID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("COMMON_INSERT_CONFIG_DETAILS_SP", client_IDParameter, project_IDParameter, tool_IDParameter, source_TargetParameter, dB_TYPEParameter, sERVER_NAMEParameter, sERVER_IP_ADDRESSParameter, sERVER_PORTParameter, dATABASE_NAMEParameter, dATABASE_PASSWORDParameter, sCHEMA_NAMEParameter, sCHEMA_PASSWORDParameter, aCTIVE_FLAGParameter, oS_UsernameParameter, oS_PASSWORDParameter, last_Modified_DateParameter, last_Modified_ByParameter, role_IDParameter, status_Code, message);
    }


    public virtual ObjectResult<COMMON_GET_CONFIG_DETAILS_SP_Result> COMMON_GET_CONFIG_DETAILS_SP(string client_ID, string project_ID, string source_Target, string dB_Type, Nullable<long> tool_ID, Nullable<int> role_ID, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var source_TargetParameter = source_Target != null ?
            new ObjectParameter("Source_Target", source_Target) :
            new ObjectParameter("Source_Target", typeof(string));


        var dB_TypeParameter = dB_Type != null ?
            new ObjectParameter("DB_Type", dB_Type) :
            new ObjectParameter("DB_Type", typeof(string));


        var tool_IDParameter = tool_ID.HasValue ?
            new ObjectParameter("Tool_ID", tool_ID) :
            new ObjectParameter("Tool_ID", typeof(long));


        var role_IDParameter = role_ID.HasValue ?
            new ObjectParameter("Role_ID", role_ID) :
            new ObjectParameter("Role_ID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<COMMON_GET_CONFIG_DETAILS_SP_Result>("COMMON_GET_CONFIG_DETAILS_SP", client_IDParameter, project_IDParameter, source_TargetParameter, dB_TypeParameter, tool_IDParameter, role_IDParameter, status_Code, message);
    }


    public virtual int HXR_INSERT_RULE_TYPE_SP(string client_ID, string project_ID, string ruleType_Name, string ruleType_Desc, string inserted_by, ObjectParameter status_code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var ruleType_NameParameter = ruleType_Name != null ?
            new ObjectParameter("RuleType_Name", ruleType_Name) :
            new ObjectParameter("RuleType_Name", typeof(string));


        var ruleType_DescParameter = ruleType_Desc != null ?
            new ObjectParameter("RuleType_Desc", ruleType_Desc) :
            new ObjectParameter("RuleType_Desc", typeof(string));


        var inserted_byParameter = inserted_by != null ?
            new ObjectParameter("Inserted_by", inserted_by) :
            new ObjectParameter("Inserted_by", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HXR_INSERT_RULE_TYPE_SP", client_IDParameter, project_IDParameter, ruleType_NameParameter, ruleType_DescParameter, inserted_byParameter, status_code, message);
    }


    public virtual int HXR_UPDATE_RULE_TYPE_SP(Nullable<long> ruleType_ID, string ruleType_Name, Nullable<long> active_Flag, string ruleType_Desc, string last_Modified_By, ObjectParameter status_code, ObjectParameter message)
    {

        var ruleType_IDParameter = ruleType_ID.HasValue ?
            new ObjectParameter("RuleType_ID", ruleType_ID) :
            new ObjectParameter("RuleType_ID", typeof(long));


        var ruleType_NameParameter = ruleType_Name != null ?
            new ObjectParameter("RuleType_Name", ruleType_Name) :
            new ObjectParameter("RuleType_Name", typeof(string));


        var active_FlagParameter = active_Flag.HasValue ?
            new ObjectParameter("Active_Flag", active_Flag) :
            new ObjectParameter("Active_Flag", typeof(long));


        var ruleType_DescParameter = ruleType_Desc != null ?
            new ObjectParameter("RuleType_Desc", ruleType_Desc) :
            new ObjectParameter("RuleType_Desc", typeof(string));


        var last_Modified_ByParameter = last_Modified_By != null ?
            new ObjectParameter("Last_Modified_By", last_Modified_By) :
            new ObjectParameter("Last_Modified_By", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HXR_UPDATE_RULE_TYPE_SP", ruleType_IDParameter, ruleType_NameParameter, active_FlagParameter, ruleType_DescParameter, last_Modified_ByParameter, status_code, message);
    }


    public virtual ObjectResult<COMMON_GET_TABLE_COLUMN_LIST_SP_Result> COMMON_GET_TABLE_COLUMN_LIST_SP(string client_ID, string project_ID, string database_IP, string source_Target, string database_Name, Nullable<long> config_ID, string table_Name, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var database_IPParameter = database_IP != null ?
            new ObjectParameter("Database_IP", database_IP) :
            new ObjectParameter("Database_IP", typeof(string));


        var source_TargetParameter = source_Target != null ?
            new ObjectParameter("Source_Target", source_Target) :
            new ObjectParameter("Source_Target", typeof(string));


        var database_NameParameter = database_Name != null ?
            new ObjectParameter("Database_Name", database_Name) :
            new ObjectParameter("Database_Name", typeof(string));


        var config_IDParameter = config_ID.HasValue ?
            new ObjectParameter("Config_ID", config_ID) :
            new ObjectParameter("Config_ID", typeof(long));


        var table_NameParameter = table_Name != null ?
            new ObjectParameter("Table_Name", table_Name) :
            new ObjectParameter("Table_Name", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<COMMON_GET_TABLE_COLUMN_LIST_SP_Result>("COMMON_GET_TABLE_COLUMN_LIST_SP", client_IDParameter, project_IDParameter, database_IPParameter, source_TargetParameter, database_NameParameter, config_IDParameter, table_NameParameter, status_Code, message);
    }


    public virtual ObjectResult<ETL_GET_SOURCE_TARGET_TABLE_COLUMNS_SP_Result> ETL_GET_SOURCE_TARGET_TABLE_COLUMNS_SP(string client_ID, string project_ID, string source_Target, string table_Name, Nullable<long> tool_ID, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var source_TargetParameter = source_Target != null ?
            new ObjectParameter("Source_Target", source_Target) :
            new ObjectParameter("Source_Target", typeof(string));


        var table_NameParameter = table_Name != null ?
            new ObjectParameter("Table_Name", table_Name) :
            new ObjectParameter("Table_Name", typeof(string));


        var tool_IDParameter = tool_ID.HasValue ?
            new ObjectParameter("Tool_ID", tool_ID) :
            new ObjectParameter("Tool_ID", typeof(long));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ETL_GET_SOURCE_TARGET_TABLE_COLUMNS_SP_Result>("ETL_GET_SOURCE_TARGET_TABLE_COLUMNS_SP", client_IDParameter, project_IDParameter, source_TargetParameter, table_NameParameter, tool_IDParameter, status_Code, message);
    }


    public virtual ObjectResult<DRD_GET_SOURCE_TARGET_TABLE_COLUMNS_SP_Result> DRD_GET_SOURCE_TARGET_TABLE_COLUMNS_SP(string client_ID, string project_ID, string source_Table_Name, string target_Table_Name, string source_Config_ID, string target_Config_ID, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var source_Table_NameParameter = source_Table_Name != null ?
            new ObjectParameter("Source_Table_Name", source_Table_Name) :
            new ObjectParameter("Source_Table_Name", typeof(string));


        var target_Table_NameParameter = target_Table_Name != null ?
            new ObjectParameter("Target_Table_Name", target_Table_Name) :
            new ObjectParameter("Target_Table_Name", typeof(string));


        var source_Config_IDParameter = source_Config_ID != null ?
            new ObjectParameter("Source_Config_ID", source_Config_ID) :
            new ObjectParameter("Source_Config_ID", typeof(string));


        var target_Config_IDParameter = target_Config_ID != null ?
            new ObjectParameter("Target_Config_ID", target_Config_ID) :
            new ObjectParameter("Target_Config_ID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DRD_GET_SOURCE_TARGET_TABLE_COLUMNS_SP_Result>("DRD_GET_SOURCE_TARGET_TABLE_COLUMNS_SP", client_IDParameter, project_IDParameter, source_Table_NameParameter, target_Table_NameParameter, source_Config_IDParameter, target_Config_IDParameter, status_Code, message);
    }


    public virtual ObjectResult<DRD_GET_SOURCE_TARGET_TABLE_TRANS_SP_Result> DRD_GET_SOURCE_TARGET_TABLE_TRANS_SP(string client_ID, string project_ID, string source_Table_Name, string target_Table_Name, string source_Column, string target_Column, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var source_Table_NameParameter = source_Table_Name != null ?
            new ObjectParameter("Source_Table_Name", source_Table_Name) :
            new ObjectParameter("Source_Table_Name", typeof(string));


        var target_Table_NameParameter = target_Table_Name != null ?
            new ObjectParameter("Target_Table_Name", target_Table_Name) :
            new ObjectParameter("Target_Table_Name", typeof(string));


        var source_ColumnParameter = source_Column != null ?
            new ObjectParameter("Source_Column", source_Column) :
            new ObjectParameter("Source_Column", typeof(string));


        var target_ColumnParameter = target_Column != null ?
            new ObjectParameter("Target_Column", target_Column) :
            new ObjectParameter("Target_Column", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DRD_GET_SOURCE_TARGET_TABLE_TRANS_SP_Result>("DRD_GET_SOURCE_TARGET_TABLE_TRANS_SP", client_IDParameter, project_IDParameter, source_Table_NameParameter, target_Table_NameParameter, source_ColumnParameter, target_ColumnParameter, status_Code, message);
    }


    public virtual int DRD_DATA_COMPARE_SP(string client_ID, string project_ID, string template_Name, Nullable<long> tool_ID, Nullable<long> role_ID, string run_User, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var template_NameParameter = template_Name != null ?
            new ObjectParameter("Template_Name", template_Name) :
            new ObjectParameter("Template_Name", typeof(string));


        var tool_IDParameter = tool_ID.HasValue ?
            new ObjectParameter("Tool_ID", tool_ID) :
            new ObjectParameter("Tool_ID", typeof(long));


        var role_IDParameter = role_ID.HasValue ?
            new ObjectParameter("Role_ID", role_ID) :
            new ObjectParameter("Role_ID", typeof(long));


        var run_UserParameter = run_User != null ?
            new ObjectParameter("Run_User", run_User) :
            new ObjectParameter("Run_User", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DRD_DATA_COMPARE_SP", client_IDParameter, project_IDParameter, template_NameParameter, tool_IDParameter, role_IDParameter, run_UserParameter, status_Code, message);
    }


    public virtual ObjectResult<DRD_GET_DATARECON_REPORT_SP_Result> DRD_GET_DATARECON_REPORT_SP(Nullable<long> run_ID, string column_Name)
    {

        var run_IDParameter = run_ID.HasValue ?
            new ObjectParameter("Run_ID", run_ID) :
            new ObjectParameter("Run_ID", typeof(long));


        var column_NameParameter = column_Name != null ?
            new ObjectParameter("Column_Name", column_Name) :
            new ObjectParameter("Column_Name", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DRD_GET_DATARECON_REPORT_SP_Result>("DRD_GET_DATARECON_REPORT_SP", run_IDParameter, column_NameParameter);
    }


    public virtual ObjectResult<DRD_GET_SOURCE_TARGET_TABLE_SP_Result> DRD_GET_SOURCE_TARGET_TABLE_SP(string client_ID, string project_ID, string config_ID, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var config_IDParameter = config_ID != null ?
            new ObjectParameter("Config_ID", config_ID) :
            new ObjectParameter("Config_ID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DRD_GET_SOURCE_TARGET_TABLE_SP_Result>("DRD_GET_SOURCE_TARGET_TABLE_SP", client_IDParameter, project_IDParameter, config_IDParameter, status_Code, message);
    }


    public virtual int DRD_INSERT_DRD_DATA_MAPPING_DOM_SP(string client_ID, string project_ID, string source_Table_name, string target_Table_name, string mapping_name, string source_Config_id, string target_Config_id, string last_Modified_By, ObjectParameter status_code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var source_Table_nameParameter = source_Table_name != null ?
            new ObjectParameter("Source_Table_name", source_Table_name) :
            new ObjectParameter("Source_Table_name", typeof(string));


        var target_Table_nameParameter = target_Table_name != null ?
            new ObjectParameter("Target_Table_name", target_Table_name) :
            new ObjectParameter("Target_Table_name", typeof(string));


        var mapping_nameParameter = mapping_name != null ?
            new ObjectParameter("Mapping_name", mapping_name) :
            new ObjectParameter("Mapping_name", typeof(string));


        var source_Config_idParameter = source_Config_id != null ?
            new ObjectParameter("Source_Config_id", source_Config_id) :
            new ObjectParameter("Source_Config_id", typeof(string));


        var target_Config_idParameter = target_Config_id != null ?
            new ObjectParameter("Target_Config_id", target_Config_id) :
            new ObjectParameter("Target_Config_id", typeof(string));


        var last_Modified_ByParameter = last_Modified_By != null ?
            new ObjectParameter("Last_Modified_By", last_Modified_By) :
            new ObjectParameter("Last_Modified_By", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DRD_INSERT_DRD_DATA_MAPPING_DOM_SP", client_IDParameter, project_IDParameter, source_Table_nameParameter, target_Table_nameParameter, mapping_nameParameter, source_Config_idParameter, target_Config_idParameter, last_Modified_ByParameter, status_code, message);
    }


    public virtual int DRD_UPDATE_DRD_DATA_MAPPING_DOM_SP(string client_ID, string project_ID, string table_name, string column_Name_list, string last_Modified_By, ObjectParameter status_code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var table_nameParameter = table_name != null ?
            new ObjectParameter("Table_name", table_name) :
            new ObjectParameter("Table_name", typeof(string));


        var column_Name_listParameter = column_Name_list != null ?
            new ObjectParameter("Column_Name_list", column_Name_list) :
            new ObjectParameter("Column_Name_list", typeof(string));


        var last_Modified_ByParameter = last_Modified_By != null ?
            new ObjectParameter("Last_Modified_By", last_Modified_By) :
            new ObjectParameter("Last_Modified_By", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DRD_UPDATE_DRD_DATA_MAPPING_DOM_SP", client_IDParameter, project_IDParameter, table_nameParameter, column_Name_listParameter, last_Modified_ByParameter, status_code, message);
    }


    public virtual ObjectResult<string> DIMPLS_GET_SLICING_COL_LIST_SP(string client_ID, string project_ID, string constraint_Type, Nullable<long> config_ID, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var constraint_TypeParameter = constraint_Type != null ?
            new ObjectParameter("Constraint_Type", constraint_Type) :
            new ObjectParameter("Constraint_Type", typeof(string));


        var config_IDParameter = config_ID.HasValue ?
            new ObjectParameter("Config_ID", config_ID) :
            new ObjectParameter("Config_ID", typeof(long));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("DIMPLS_GET_SLICING_COL_LIST_SP", client_IDParameter, project_IDParameter, constraint_TypeParameter, config_IDParameter, status_Code, message);
    }


    public virtual int ATMTN_INSERT_VARIABLE_PARAMETER_SP(string client_ID, string project_ID, Nullable<long> template_ID, string template_Name, string parameter_Name, string arameter_Value, string package_Save_Location, Nullable<long> tool_ID, string created_By, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var template_IDParameter = template_ID.HasValue ?
            new ObjectParameter("Template_ID", template_ID) :
            new ObjectParameter("Template_ID", typeof(long));


        var template_NameParameter = template_Name != null ?
            new ObjectParameter("Template_Name", template_Name) :
            new ObjectParameter("Template_Name", typeof(string));


        var parameter_NameParameter = parameter_Name != null ?
            new ObjectParameter("Parameter_Name", parameter_Name) :
            new ObjectParameter("Parameter_Name", typeof(string));


        var arameter_ValueParameter = arameter_Value != null ?
            new ObjectParameter("arameter_Value", arameter_Value) :
            new ObjectParameter("arameter_Value", typeof(string));


        var package_Save_LocationParameter = package_Save_Location != null ?
            new ObjectParameter("Package_Save_Location", package_Save_Location) :
            new ObjectParameter("Package_Save_Location", typeof(string));


        var tool_IDParameter = tool_ID.HasValue ?
            new ObjectParameter("Tool_ID", tool_ID) :
            new ObjectParameter("Tool_ID", typeof(long));


        var created_ByParameter = created_By != null ?
            new ObjectParameter("Created_By", created_By) :
            new ObjectParameter("Created_By", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ATMTN_INSERT_VARIABLE_PARAMETER_SP", client_IDParameter, project_IDParameter, template_IDParameter, template_NameParameter, parameter_NameParameter, arameter_ValueParameter, package_Save_LocationParameter, tool_IDParameter, created_ByParameter, status_Code, message);
    }


    public virtual int HXR_UPDATE_CRITERIA_DELETEFLAG_SP(string client_ID, string project_ID, string type, string object_Name, string slicing_Field, string slicing_Value, string flag)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var typeParameter = type != null ?
            new ObjectParameter("type", type) :
            new ObjectParameter("type", typeof(string));


        var object_NameParameter = object_Name != null ?
            new ObjectParameter("Object_Name", object_Name) :
            new ObjectParameter("Object_Name", typeof(string));


        var slicing_FieldParameter = slicing_Field != null ?
            new ObjectParameter("Slicing_Field", slicing_Field) :
            new ObjectParameter("Slicing_Field", typeof(string));


        var slicing_ValueParameter = slicing_Value != null ?
            new ObjectParameter("Slicing_Value", slicing_Value) :
            new ObjectParameter("Slicing_Value", typeof(string));


        var flagParameter = flag != null ?
            new ObjectParameter("flag", flag) :
            new ObjectParameter("flag", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HXR_UPDATE_CRITERIA_DELETEFLAG_SP", client_IDParameter, project_IDParameter, typeParameter, object_NameParameter, slicing_FieldParameter, slicing_ValueParameter, flagParameter);
    }


    public virtual int HXR_UPDATE_CRITERIA_SP(string client_ID, string project_ID, string type, string object_Name, string slicing_Field, string slicing_Value, Nullable<long> flag)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var typeParameter = type != null ?
            new ObjectParameter("type", type) :
            new ObjectParameter("type", typeof(string));


        var object_NameParameter = object_Name != null ?
            new ObjectParameter("Object_Name", object_Name) :
            new ObjectParameter("Object_Name", typeof(string));


        var slicing_FieldParameter = slicing_Field != null ?
            new ObjectParameter("Slicing_Field", slicing_Field) :
            new ObjectParameter("Slicing_Field", typeof(string));


        var slicing_ValueParameter = slicing_Value != null ?
            new ObjectParameter("Slicing_Value", slicing_Value) :
            new ObjectParameter("Slicing_Value", typeof(string));


        var flagParameter = flag.HasValue ?
            new ObjectParameter("flag", flag) :
            new ObjectParameter("flag", typeof(long));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HXR_UPDATE_CRITERIA_SP", client_IDParameter, project_IDParameter, typeParameter, object_NameParameter, slicing_FieldParameter, slicing_ValueParameter, flagParameter);
    }


    public virtual ObjectResult<HXR_GET_CRITERIA_ALL_SP_Result> HXR_GET_CRITERIA_ALL_SP(string client_ID, string project_ID, Nullable<int> pageNo, Nullable<int> recordsPerPage)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var pageNoParameter = pageNo.HasValue ?
            new ObjectParameter("PageNo", pageNo) :
            new ObjectParameter("PageNo", typeof(int));


        var recordsPerPageParameter = recordsPerPage.HasValue ?
            new ObjectParameter("RecordsPerPage", recordsPerPage) :
            new ObjectParameter("RecordsPerPage", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HXR_GET_CRITERIA_ALL_SP_Result>("HXR_GET_CRITERIA_ALL_SP", client_IDParameter, project_IDParameter, pageNoParameter, recordsPerPageParameter);
    }


    public virtual ObjectResult<HXR_FX_GET_CRITERIAMASTER_SP_Result> HXR_FX_GET_CRITERIAMASTER_SP(string client_ID, string project_ID, string type, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var typeParameter = type != null ?
            new ObjectParameter("type", type) :
            new ObjectParameter("type", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HXR_FX_GET_CRITERIAMASTER_SP_Result>("HXR_FX_GET_CRITERIAMASTER_SP", client_IDParameter, project_IDParameter, typeParameter, status_Code, message);
    }


    public virtual ObjectResult<HXR_GET_AUDITREPORT_SP_Result> HXR_GET_AUDITREPORT_SP(string client_ID, string project_ID, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HXR_GET_AUDITREPORT_SP_Result>("HXR_GET_AUDITREPORT_SP", client_IDParameter, project_IDParameter, status_Code, message);
    }


    public virtual ObjectResult<HXR_GET_OBJECTNAME_SP_Result> HXR_GET_OBJECTNAME_SP(string client_ID, string project_ID, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HXR_GET_OBJECTNAME_SP_Result>("HXR_GET_OBJECTNAME_SP", client_IDParameter, project_IDParameter, status_Code, message);
    }


    public virtual ObjectResult<HXR_GET_PARAMETERCOUNT_SP_Result> HXR_GET_PARAMETERCOUNT_SP(string client_ID, string project_ID, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HXR_GET_PARAMETERCOUNT_SP_Result>("HXR_GET_PARAMETERCOUNT_SP", client_IDParameter, project_IDParameter, status_Code, message);
    }


    public virtual ObjectResult<HXR_GET_SCRIPTDIFINATION_SP_Result> HXR_GET_SCRIPTDIFINATION_SP(string client_ID, string project_ID, string type, Nullable<long> tool_ID, string objectname, ObjectParameter status_code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var typeParameter = type != null ?
            new ObjectParameter("type", type) :
            new ObjectParameter("type", typeof(string));


        var tool_IDParameter = tool_ID.HasValue ?
            new ObjectParameter("Tool_ID", tool_ID) :
            new ObjectParameter("Tool_ID", typeof(long));


        var objectnameParameter = objectname != null ?
            new ObjectParameter("objectname", objectname) :
            new ObjectParameter("objectname", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HXR_GET_SCRIPTDIFINATION_SP_Result>("HXR_GET_SCRIPTDIFINATION_SP", client_IDParameter, project_IDParameter, typeParameter, tool_IDParameter, objectnameParameter, status_code, message);
    }


    public virtual ObjectResult<HXR_GET_TRANSFERRESULT_SP_Result> HXR_GET_TRANSFERRESULT_SP(string client_ID, string project_ID, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HXR_GET_TRANSFERRESULT_SP_Result>("HXR_GET_TRANSFERRESULT_SP", client_IDParameter, project_IDParameter, status_Code, message);
    }


    public virtual int HXR_UP_TRANSFERPROCESS_SP(string client_ID, string project_ID, Nullable<long> tool_ID, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var tool_IDParameter = tool_ID.HasValue ?
            new ObjectParameter("Tool_ID", tool_ID) :
            new ObjectParameter("Tool_ID", typeof(long));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HXR_UP_TRANSFERPROCESS_SP", client_IDParameter, project_IDParameter, tool_IDParameter, status_Code, message);
    }


    public virtual ObjectResult<HXR_GET_DELETELIST_SP_Result> HXR_GET_DELETELIST_SP(string client_ID, string project_ID, Nullable<int> pageNo, Nullable<int> recordsPerPage, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var pageNoParameter = pageNo.HasValue ?
            new ObjectParameter("PageNo", pageNo) :
            new ObjectParameter("PageNo", typeof(int));


        var recordsPerPageParameter = recordsPerPage.HasValue ?
            new ObjectParameter("RecordsPerPage", recordsPerPage) :
            new ObjectParameter("RecordsPerPage", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HXR_GET_DELETELIST_SP_Result>("HXR_GET_DELETELIST_SP", client_IDParameter, project_IDParameter, pageNoParameter, recordsPerPageParameter, status_Code, message);
    }


    public virtual int HXR_UP_PURGE_DATA_SP(string client_ID, string project_ID, string objectname, string fieldname, string value, Nullable<int> dflag, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var objectnameParameter = objectname != null ?
            new ObjectParameter("Objectname", objectname) :
            new ObjectParameter("Objectname", typeof(string));


        var fieldnameParameter = fieldname != null ?
            new ObjectParameter("Fieldname", fieldname) :
            new ObjectParameter("Fieldname", typeof(string));


        var valueParameter = value != null ?
            new ObjectParameter("value", value) :
            new ObjectParameter("value", typeof(string));


        var dflagParameter = dflag.HasValue ?
            new ObjectParameter("dflag", dflag) :
            new ObjectParameter("dflag", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HXR_UP_PURGE_DATA_SP", client_IDParameter, project_IDParameter, objectnameParameter, fieldnameParameter, valueParameter, dflagParameter, status_Code, message);
    }


    public virtual ObjectResult<COMMON_GET_KEY_COLUMNS_SP_Result> COMMON_GET_KEY_COLUMNS_SP(string client_ID, string project_ID, string table_Name, Nullable<long> tool_ID, ObjectParameter status_code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var table_NameParameter = table_Name != null ?
            new ObjectParameter("Table_Name", table_Name) :
            new ObjectParameter("Table_Name", typeof(string));


        var tool_IDParameter = tool_ID.HasValue ?
            new ObjectParameter("Tool_ID", tool_ID) :
            new ObjectParameter("Tool_ID", typeof(long));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<COMMON_GET_KEY_COLUMNS_SP_Result>("COMMON_GET_KEY_COLUMNS_SP", client_IDParameter, project_IDParameter, table_NameParameter, tool_IDParameter, status_code, message);
    }


    public virtual int COMMON_GET_TABLE_DATA_SP(string client_ID, string project_ID, string config_ID, string table_Name, string column_name, Nullable<byte> iS_Distinct, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var config_IDParameter = config_ID != null ?
            new ObjectParameter("Config_ID", config_ID) :
            new ObjectParameter("Config_ID", typeof(string));


        var table_NameParameter = table_Name != null ?
            new ObjectParameter("Table_Name", table_Name) :
            new ObjectParameter("Table_Name", typeof(string));


        var column_nameParameter = column_name != null ?
            new ObjectParameter("Column_name", column_name) :
            new ObjectParameter("Column_name", typeof(string));


        var iS_DistinctParameter = iS_Distinct.HasValue ?
            new ObjectParameter("IS_Distinct", iS_Distinct) :
            new ObjectParameter("IS_Distinct", typeof(byte));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("COMMON_GET_TABLE_DATA_SP", client_IDParameter, project_IDParameter, config_IDParameter, table_NameParameter, column_nameParameter, iS_DistinctParameter, status_Code, message);
    }


    public virtual int COMMON_UPDATE_BATCH_ID_SP(string client_ID, string project_ID, Nullable<long> config_ID, string table_Name, ObjectParameter status_Code, ObjectParameter message, ObjectParameter batch_ID)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var config_IDParameter = config_ID.HasValue ?
            new ObjectParameter("Config_ID", config_ID) :
            new ObjectParameter("Config_ID", typeof(long));


        var table_NameParameter = table_Name != null ?
            new ObjectParameter("Table_Name", table_Name) :
            new ObjectParameter("Table_Name", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("COMMON_UPDATE_BATCH_ID_SP", client_IDParameter, project_IDParameter, config_IDParameter, table_NameParameter, status_Code, message, batch_ID);
    }


    public virtual int PROFILER_CREATE_RULES_SP(string client_ID, string project_ID, Nullable<long> config_ID, string table_Name, string column_Name, string distinct_Value_List, string created_by, ObjectParameter status_code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var config_IDParameter = config_ID.HasValue ?
            new ObjectParameter("Config_ID", config_ID) :
            new ObjectParameter("Config_ID", typeof(long));


        var table_NameParameter = table_Name != null ?
            new ObjectParameter("Table_Name", table_Name) :
            new ObjectParameter("Table_Name", typeof(string));


        var column_NameParameter = column_Name != null ?
            new ObjectParameter("Column_Name", column_Name) :
            new ObjectParameter("Column_Name", typeof(string));


        var distinct_Value_ListParameter = distinct_Value_List != null ?
            new ObjectParameter("Distinct_Value_List", distinct_Value_List) :
            new ObjectParameter("Distinct_Value_List", typeof(string));


        var created_byParameter = created_by != null ?
            new ObjectParameter("Created_by", created_by) :
            new ObjectParameter("Created_by", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PROFILER_CREATE_RULES_SP", client_IDParameter, project_IDParameter, config_IDParameter, table_NameParameter, column_NameParameter, distinct_Value_ListParameter, created_byParameter, status_code, message);
    }


    public virtual ObjectResult<string> PROFILER_GET_COLUMN_LIST_SP(string client_ID, string project_ID, Nullable<long> config_ID, ObjectParameter status_code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var config_IDParameter = config_ID.HasValue ?
            new ObjectParameter("Config_ID", config_ID) :
            new ObjectParameter("Config_ID", typeof(long));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("PROFILER_GET_COLUMN_LIST_SP", client_IDParameter, project_IDParameter, config_IDParameter, status_code, message);
    }


    public virtual int ATMTN_COPY_TEMPLATE_SP(string client_ID, string project_ID, Nullable<long> old_Template_ID, string new_Template_Name, string created_By, ObjectParameter new_Template_ID, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var old_Template_IDParameter = old_Template_ID.HasValue ?
            new ObjectParameter("Old_Template_ID", old_Template_ID) :
            new ObjectParameter("Old_Template_ID", typeof(long));


        var new_Template_NameParameter = new_Template_Name != null ?
            new ObjectParameter("New_Template_Name", new_Template_Name) :
            new ObjectParameter("New_Template_Name", typeof(string));


        var created_ByParameter = created_By != null ?
            new ObjectParameter("Created_By", created_By) :
            new ObjectParameter("Created_By", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ATMTN_COPY_TEMPLATE_SP", client_IDParameter, project_IDParameter, old_Template_IDParameter, new_Template_NameParameter, created_ByParameter, new_Template_ID, status_Code, message);
    }


    public virtual ObjectResult<ETL_GET_COLUMN_DETAIL_SP_Result> ETL_GET_COLUMN_DETAIL_SP(string client_ID, string project_ID, string template_Name, string table_Name, string table_FieldName, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var template_NameParameter = template_Name != null ?
            new ObjectParameter("Template_Name", template_Name) :
            new ObjectParameter("Template_Name", typeof(string));


        var table_NameParameter = table_Name != null ?
            new ObjectParameter("Table_Name", table_Name) :
            new ObjectParameter("Table_Name", typeof(string));


        var table_FieldNameParameter = table_FieldName != null ?
            new ObjectParameter("Table_FieldName", table_FieldName) :
            new ObjectParameter("Table_FieldName", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ETL_GET_COLUMN_DETAIL_SP_Result>("ETL_GET_COLUMN_DETAIL_SP", client_IDParameter, project_IDParameter, template_NameParameter, table_NameParameter, table_FieldNameParameter, status_Code, message);
    }


    public virtual ObjectResult<ATMTN_GET_TBL_EXPORT_STATUS_SP_Result> ATMTN_GET_TBL_EXPORT_STATUS_SP(string client_ID, string project_ID, Nullable<long> config_ID, string request_User, ObjectParameter status_code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var config_IDParameter = config_ID.HasValue ?
            new ObjectParameter("Config_ID", config_ID) :
            new ObjectParameter("Config_ID", typeof(long));


        var request_UserParameter = request_User != null ?
            new ObjectParameter("Request_User", request_User) :
            new ObjectParameter("Request_User", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ATMTN_GET_TBL_EXPORT_STATUS_SP_Result>("ATMTN_GET_TBL_EXPORT_STATUS_SP", client_IDParameter, project_IDParameter, config_IDParameter, request_UserParameter, status_code, message);
    }


    public virtual ObjectResult<string> DRD_GET_DISTINCT_TEMPLATES_SP(string client_ID, string project_ID, Nullable<long> tool_ID, Nullable<long> role_ID)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var tool_IDParameter = tool_ID.HasValue ?
            new ObjectParameter("Tool_ID", tool_ID) :
            new ObjectParameter("Tool_ID", typeof(long));


        var role_IDParameter = role_ID.HasValue ?
            new ObjectParameter("Role_ID", role_ID) :
            new ObjectParameter("Role_ID", typeof(long));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("DRD_GET_DISTINCT_TEMPLATES_SP", client_IDParameter, project_IDParameter, tool_IDParameter, role_IDParameter);
    }


    public virtual ObjectResult<DRD_GET_TEMPLATE_DETAILS_SP_Result> DRD_GET_TEMPLATE_DETAILS_SP(string client_ID, string project_ID, string template_Name, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var template_NameParameter = template_Name != null ?
            new ObjectParameter("Template_Name", template_Name) :
            new ObjectParameter("Template_Name", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DRD_GET_TEMPLATE_DETAILS_SP_Result>("DRD_GET_TEMPLATE_DETAILS_SP", client_IDParameter, project_IDParameter, template_NameParameter, status_Code, message);
    }


    public virtual int CMN_UPDATE_PROJECT_SP(string client_ID, string project_ID, Nullable<long> active_Flag, string modified_By, ObjectParameter status_code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var active_FlagParameter = active_Flag.HasValue ?
            new ObjectParameter("Active_Flag", active_Flag) :
            new ObjectParameter("Active_Flag", typeof(long));


        var modified_ByParameter = modified_By != null ?
            new ObjectParameter("Modified_By", modified_By) :
            new ObjectParameter("Modified_By", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CMN_UPDATE_PROJECT_SP", client_IDParameter, project_IDParameter, active_FlagParameter, modified_ByParameter, status_code, message);
    }


    public virtual int ETL_DELETE_SOURCE_SP(Nullable<long> row_ID, ObjectParameter status_Code, ObjectParameter message)
    {

        var row_IDParameter = row_ID.HasValue ?
            new ObjectParameter("Row_ID", row_ID) :
            new ObjectParameter("Row_ID", typeof(long));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ETL_DELETE_SOURCE_SP", row_IDParameter, status_Code, message);
    }


    public virtual int ETL_DELETE_TARGET_SP(Nullable<long> row_ID, ObjectParameter status_Code, ObjectParameter message)
    {

        var row_IDParameter = row_ID.HasValue ?
            new ObjectParameter("Row_ID", row_ID) :
            new ObjectParameter("Row_ID", typeof(long));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ETL_DELETE_TARGET_SP", row_IDParameter, status_Code, message);
    }


    public virtual int ETL_DELETE_TRANS_SP(Nullable<long> trans_ID, ObjectParameter status_Code, ObjectParameter message)
    {

        var trans_IDParameter = trans_ID.HasValue ?
            new ObjectParameter("Trans_ID", trans_ID) :
            new ObjectParameter("Trans_ID", typeof(long));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ETL_DELETE_TRANS_SP", trans_IDParameter, status_Code, message);
    }


    public virtual ObjectResult<ETL_GET_TEMPLATE_SOURCE_TARGET_TABLE_SP_Result> ETL_GET_TEMPLATE_SOURCE_TARGET_TABLE_SP(string client_ID, string project_ID, Nullable<long> template_ID, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var template_IDParameter = template_ID.HasValue ?
            new ObjectParameter("Template_ID", template_ID) :
            new ObjectParameter("Template_ID", typeof(long));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ETL_GET_TEMPLATE_SOURCE_TARGET_TABLE_SP_Result>("ETL_GET_TEMPLATE_SOURCE_TARGET_TABLE_SP", client_IDParameter, project_IDParameter, template_IDParameter, status_Code, message);
    }


    public virtual int ATMTN_REQUEST_TBL_EXPORT_SP(string client_ID, string project_ID, Nullable<long> config_ID, string table_Name, string folder_Name, string file_Format, string request_User, ObjectParameter status_code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var config_IDParameter = config_ID.HasValue ?
            new ObjectParameter("Config_ID", config_ID) :
            new ObjectParameter("Config_ID", typeof(long));


        var table_NameParameter = table_Name != null ?
            new ObjectParameter("Table_Name", table_Name) :
            new ObjectParameter("Table_Name", typeof(string));


        var folder_NameParameter = folder_Name != null ?
            new ObjectParameter("Folder_Name", folder_Name) :
            new ObjectParameter("Folder_Name", typeof(string));


        var file_FormatParameter = file_Format != null ?
            new ObjectParameter("File_Format", file_Format) :
            new ObjectParameter("File_Format", typeof(string));


        var request_UserParameter = request_User != null ?
            new ObjectParameter("Request_User", request_User) :
            new ObjectParameter("Request_User", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ATMTN_REQUEST_TBL_EXPORT_SP", client_IDParameter, project_IDParameter, config_IDParameter, table_NameParameter, folder_NameParameter, file_FormatParameter, request_UserParameter, status_code, message);
    }


    public virtual ObjectResult<CMN_GET_KEY_COLUMNS_SP_Result> CMN_GET_KEY_COLUMNS_SP(string client_ID, string project_ID, string table_Name, Nullable<long> config_ID, ObjectParameter status_code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var table_NameParameter = table_Name != null ?
            new ObjectParameter("Table_Name", table_Name) :
            new ObjectParameter("Table_Name", typeof(string));


        var config_IDParameter = config_ID.HasValue ?
            new ObjectParameter("Config_ID", config_ID) :
            new ObjectParameter("Config_ID", typeof(long));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CMN_GET_KEY_COLUMNS_SP_Result>("CMN_GET_KEY_COLUMNS_SP", client_IDParameter, project_IDParameter, table_NameParameter, config_IDParameter, status_code, message);
    }


    public virtual int CMN_INSERT_KEY_COLUMN_SP(string client_ID, string project_ID, Nullable<long> config_ID, string table_Name, string key_Column1, string key_Column2, string key_Column3, string key_Column4, string key_Column5, string created_By, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var config_IDParameter = config_ID.HasValue ?
            new ObjectParameter("Config_ID", config_ID) :
            new ObjectParameter("Config_ID", typeof(long));


        var table_NameParameter = table_Name != null ?
            new ObjectParameter("Table_Name", table_Name) :
            new ObjectParameter("Table_Name", typeof(string));


        var key_Column1Parameter = key_Column1 != null ?
            new ObjectParameter("Key_Column1", key_Column1) :
            new ObjectParameter("Key_Column1", typeof(string));


        var key_Column2Parameter = key_Column2 != null ?
            new ObjectParameter("Key_Column2", key_Column2) :
            new ObjectParameter("Key_Column2", typeof(string));


        var key_Column3Parameter = key_Column3 != null ?
            new ObjectParameter("Key_Column3", key_Column3) :
            new ObjectParameter("Key_Column3", typeof(string));


        var key_Column4Parameter = key_Column4 != null ?
            new ObjectParameter("Key_Column4", key_Column4) :
            new ObjectParameter("Key_Column4", typeof(string));


        var key_Column5Parameter = key_Column5 != null ?
            new ObjectParameter("Key_Column5", key_Column5) :
            new ObjectParameter("Key_Column5", typeof(string));


        var created_ByParameter = created_By != null ?
            new ObjectParameter("Created_By", created_By) :
            new ObjectParameter("Created_By", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CMN_INSERT_KEY_COLUMN_SP", client_IDParameter, project_IDParameter, config_IDParameter, table_NameParameter, key_Column1Parameter, key_Column2Parameter, key_Column3Parameter, key_Column4Parameter, key_Column5Parameter, created_ByParameter, status_Code, message);
    }


    public virtual int ATMTN_INSERT_RUN_AUDIT_SP(string client_ID, string project_ID, string template_Name, string modified_by, Nullable<long> run_ID, ObjectParameter run_ID_OUTPUT, Nullable<long> role_ID, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var template_NameParameter = template_Name != null ?
            new ObjectParameter("Template_Name", template_Name) :
            new ObjectParameter("Template_Name", typeof(string));


        var modified_byParameter = modified_by != null ?
            new ObjectParameter("Modified_by", modified_by) :
            new ObjectParameter("Modified_by", typeof(string));


        var run_IDParameter = run_ID.HasValue ?
            new ObjectParameter("Run_ID", run_ID) :
            new ObjectParameter("Run_ID", typeof(long));


        var role_IDParameter = role_ID.HasValue ?
            new ObjectParameter("Role_ID", role_ID) :
            new ObjectParameter("Role_ID", typeof(long));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ATMTN_INSERT_RUN_AUDIT_SP", client_IDParameter, project_IDParameter, template_NameParameter, modified_byParameter, run_IDParameter, run_ID_OUTPUT, role_IDParameter, status_Code, message);
    }


    public virtual ObjectResult<CMN_GET_TOOL_SP_Result> CMN_GET_TOOL_SP(string client_ID, string project_ID, string user_Name, ObjectParameter status_code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var user_NameParameter = user_Name != null ?
            new ObjectParameter("User_Name", user_Name) :
            new ObjectParameter("User_Name", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CMN_GET_TOOL_SP_Result>("CMN_GET_TOOL_SP", client_IDParameter, project_IDParameter, user_NameParameter, status_code, message);
    }


    public virtual int CMN_AUTHENTICATE_USER_SP(string user_Name, string password, ObjectParameter status_Code, ObjectParameter message)
    {

        var user_NameParameter = user_Name != null ?
            new ObjectParameter("User_Name", user_Name) :
            new ObjectParameter("User_Name", typeof(string));


        var passwordParameter = password != null ?
            new ObjectParameter("Password", password) :
            new ObjectParameter("Password", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CMN_AUTHENTICATE_USER_SP", user_NameParameter, passwordParameter, status_Code, message);
    }


    public virtual int CMN_INSERT_USER_SP(string client_ID, string user_Name, string email_ID, string project_ID, string password, string role_Name, string last_Modified_By, ObjectParameter status_code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var user_NameParameter = user_Name != null ?
            new ObjectParameter("User_Name", user_Name) :
            new ObjectParameter("User_Name", typeof(string));


        var email_IDParameter = email_ID != null ?
            new ObjectParameter("Email_ID", email_ID) :
            new ObjectParameter("Email_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var passwordParameter = password != null ?
            new ObjectParameter("Password", password) :
            new ObjectParameter("Password", typeof(string));


        var role_NameParameter = role_Name != null ?
            new ObjectParameter("Role_Name", role_Name) :
            new ObjectParameter("Role_Name", typeof(string));


        var last_Modified_ByParameter = last_Modified_By != null ?
            new ObjectParameter("Last_Modified_By", last_Modified_By) :
            new ObjectParameter("Last_Modified_By", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CMN_INSERT_USER_SP", client_IDParameter, user_NameParameter, email_IDParameter, project_IDParameter, passwordParameter, role_NameParameter, last_Modified_ByParameter, status_code, message);
    }


    public virtual int CMN_UPDATE_TOOL_SP(Nullable<long> id, Nullable<long> active_Flag, ObjectParameter status_code, ObjectParameter message)
    {

        var idParameter = id.HasValue ?
            new ObjectParameter("Id", id) :
            new ObjectParameter("Id", typeof(long));


        var active_FlagParameter = active_Flag.HasValue ?
            new ObjectParameter("Active_Flag", active_Flag) :
            new ObjectParameter("Active_Flag", typeof(long));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CMN_UPDATE_TOOL_SP", idParameter, active_FlagParameter, status_code, message);
    }


    public virtual ObjectResult<CMN_GET_ALL_USER_DETAILS_SP_Result> CMN_GET_ALL_USER_DETAILS_SP(string client_ID, string project_ID, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CMN_GET_ALL_USER_DETAILS_SP_Result>("CMN_GET_ALL_USER_DETAILS_SP", client_IDParameter, project_IDParameter, status_Code, message);
    }


    public virtual ObjectResult<CMN_GET_CLIENT_SP_Result> CMN_GET_CLIENT_SP(string user_Name, ObjectParameter status_Code, ObjectParameter message)
    {

        var user_NameParameter = user_Name != null ?
            new ObjectParameter("User_Name", user_Name) :
            new ObjectParameter("User_Name", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CMN_GET_CLIENT_SP_Result>("CMN_GET_CLIENT_SP", user_NameParameter, status_Code, message);
    }


    public virtual ObjectResult<PROFILER_INSERT_STATUS_SP_Result> PROFILER_INSERT_STATUS_SP(string client_ID, string project_ID, Nullable<long> config_ID, string template_Name, string table_Name, string profile_Type, string profile_Description, Nullable<System.DateTime> profile_Start_Time, string profile_Status, Nullable<long> rec_Count, string profiled_By, Nullable<long> profile_ID, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var config_IDParameter = config_ID.HasValue ?
            new ObjectParameter("Config_ID", config_ID) :
            new ObjectParameter("Config_ID", typeof(long));


        var template_NameParameter = template_Name != null ?
            new ObjectParameter("Template_Name", template_Name) :
            new ObjectParameter("Template_Name", typeof(string));


        var table_NameParameter = table_Name != null ?
            new ObjectParameter("Table_Name", table_Name) :
            new ObjectParameter("Table_Name", typeof(string));


        var profile_TypeParameter = profile_Type != null ?
            new ObjectParameter("Profile_Type", profile_Type) :
            new ObjectParameter("Profile_Type", typeof(string));


        var profile_DescriptionParameter = profile_Description != null ?
            new ObjectParameter("Profile_Description", profile_Description) :
            new ObjectParameter("Profile_Description", typeof(string));


        var profile_Start_TimeParameter = profile_Start_Time.HasValue ?
            new ObjectParameter("Profile_Start_Time", profile_Start_Time) :
            new ObjectParameter("Profile_Start_Time", typeof(System.DateTime));


        var profile_StatusParameter = profile_Status != null ?
            new ObjectParameter("Profile_Status", profile_Status) :
            new ObjectParameter("Profile_Status", typeof(string));


        var rec_CountParameter = rec_Count.HasValue ?
            new ObjectParameter("Rec_Count", rec_Count) :
            new ObjectParameter("Rec_Count", typeof(long));


        var profiled_ByParameter = profiled_By != null ?
            new ObjectParameter("Profiled_By", profiled_By) :
            new ObjectParameter("Profiled_By", typeof(string));


        var profile_IDParameter = profile_ID.HasValue ?
            new ObjectParameter("Profile_ID", profile_ID) :
            new ObjectParameter("Profile_ID", typeof(long));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PROFILER_INSERT_STATUS_SP_Result>("PROFILER_INSERT_STATUS_SP", client_IDParameter, project_IDParameter, config_IDParameter, template_NameParameter, table_NameParameter, profile_TypeParameter, profile_DescriptionParameter, profile_Start_TimeParameter, profile_StatusParameter, rec_CountParameter, profiled_ByParameter, profile_IDParameter, status_Code, message);
    }


    public virtual int CMN_INST_OFLINE_BATCH_JOBS_SP(string client_ID, string project_ID, Nullable<long> tool_ID, Nullable<long> config_ID, string template_Name, string template_Path, string table_Name, string column_Name, Nullable<System.DateTime> schedule_Date, string run_Status, string job_Description, string procedure_Name, string parameter_LISt, string created_by, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var tool_IDParameter = tool_ID.HasValue ?
            new ObjectParameter("Tool_ID", tool_ID) :
            new ObjectParameter("Tool_ID", typeof(long));


        var config_IDParameter = config_ID.HasValue ?
            new ObjectParameter("Config_ID", config_ID) :
            new ObjectParameter("Config_ID", typeof(long));


        var template_NameParameter = template_Name != null ?
            new ObjectParameter("Template_Name", template_Name) :
            new ObjectParameter("Template_Name", typeof(string));


        var template_PathParameter = template_Path != null ?
            new ObjectParameter("Template_Path", template_Path) :
            new ObjectParameter("Template_Path", typeof(string));


        var table_NameParameter = table_Name != null ?
            new ObjectParameter("Table_Name", table_Name) :
            new ObjectParameter("Table_Name", typeof(string));


        var column_NameParameter = column_Name != null ?
            new ObjectParameter("Column_Name", column_Name) :
            new ObjectParameter("Column_Name", typeof(string));


        var schedule_DateParameter = schedule_Date.HasValue ?
            new ObjectParameter("Schedule_Date", schedule_Date) :
            new ObjectParameter("Schedule_Date", typeof(System.DateTime));


        var run_StatusParameter = run_Status != null ?
            new ObjectParameter("Run_Status", run_Status) :
            new ObjectParameter("Run_Status", typeof(string));


        var job_DescriptionParameter = job_Description != null ?
            new ObjectParameter("Job_Description", job_Description) :
            new ObjectParameter("Job_Description", typeof(string));


        var procedure_NameParameter = procedure_Name != null ?
            new ObjectParameter("Procedure_Name", procedure_Name) :
            new ObjectParameter("Procedure_Name", typeof(string));


        var parameter_LIStParameter = parameter_LISt != null ?
            new ObjectParameter("Parameter_LISt", parameter_LISt) :
            new ObjectParameter("Parameter_LISt", typeof(string));


        var created_byParameter = created_by != null ?
            new ObjectParameter("Created_by", created_by) :
            new ObjectParameter("Created_by", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CMN_INST_OFLINE_BATCH_JOBS_SP", client_IDParameter, project_IDParameter, tool_IDParameter, config_IDParameter, template_NameParameter, template_PathParameter, table_NameParameter, column_NameParameter, schedule_DateParameter, run_StatusParameter, job_DescriptionParameter, procedure_NameParameter, parameter_LIStParameter, created_byParameter, status_Code, message);
    }


    public virtual ObjectResult<DASM_GET_CRITERIA_TYPE_SP_Result> DASM_GET_CRITERIA_TYPE_SP(string client_ID, string project_ID, string object_Type, string template_Name, string tool_ID, Nullable<long> config_ID, string columname, string slicingvalue, string expression, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var object_TypeParameter = object_Type != null ?
            new ObjectParameter("Object_Type", object_Type) :
            new ObjectParameter("Object_Type", typeof(string));


        var template_NameParameter = template_Name != null ?
            new ObjectParameter("Template_Name", template_Name) :
            new ObjectParameter("Template_Name", typeof(string));


        var tool_IDParameter = tool_ID != null ?
            new ObjectParameter("Tool_ID", tool_ID) :
            new ObjectParameter("Tool_ID", typeof(string));


        var config_IDParameter = config_ID.HasValue ?
            new ObjectParameter("Config_ID", config_ID) :
            new ObjectParameter("Config_ID", typeof(long));


        var columnameParameter = columname != null ?
            new ObjectParameter("Columname", columname) :
            new ObjectParameter("Columname", typeof(string));


        var slicingvalueParameter = slicingvalue != null ?
            new ObjectParameter("Slicingvalue", slicingvalue) :
            new ObjectParameter("Slicingvalue", typeof(string));


        var expressionParameter = expression != null ?
            new ObjectParameter("Expression", expression) :
            new ObjectParameter("Expression", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DASM_GET_CRITERIA_TYPE_SP_Result>("DASM_GET_CRITERIA_TYPE_SP", client_IDParameter, project_IDParameter, object_TypeParameter, template_NameParameter, tool_IDParameter, config_IDParameter, columnameParameter, slicingvalueParameter, expressionParameter, status_Code, message);
    }


    public virtual ObjectResult<DASM_GET_TEMPLATE_SP_Result> DASM_GET_TEMPLATE_SP(string client_ID, string project_ID, Nullable<long> role_ID, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var role_IDParameter = role_ID.HasValue ?
            new ObjectParameter("Role_ID", role_ID) :
            new ObjectParameter("Role_ID", typeof(long));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DASM_GET_TEMPLATE_SP_Result>("DASM_GET_TEMPLATE_SP", client_IDParameter, project_IDParameter, role_IDParameter, status_Code, message);
    }


    public virtual int DASM_INSERT_TEMPLATE_SP(ObjectParameter status_Code, ObjectParameter message)
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DASM_INSERT_TEMPLATE_SP", status_Code, message);
    }


    public virtual ObjectResult<DASM_GET_CRI_OBJ_COUNT_SP_Result> DASM_GET_CRI_OBJ_COUNT_SP(string client_ID, string project_ID, Nullable<long> template_ID, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var template_IDParameter = template_ID.HasValue ?
            new ObjectParameter("Template_ID", template_ID) :
            new ObjectParameter("Template_ID", typeof(long));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DASM_GET_CRI_OBJ_COUNT_SP_Result>("DASM_GET_CRI_OBJ_COUNT_SP", client_IDParameter, project_IDParameter, template_IDParameter, status_Code, message);
    }


    public virtual ObjectResult<DASM_GET_OBJECTNAME_SP_Result> DASM_GET_OBJECTNAME_SP(string client_ID, string project_ID, Nullable<long> template_ID, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var template_IDParameter = template_ID.HasValue ?
            new ObjectParameter("Template_ID", template_ID) :
            new ObjectParameter("Template_ID", typeof(long));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DASM_GET_OBJECTNAME_SP_Result>("DASM_GET_OBJECTNAME_SP", client_IDParameter, project_IDParameter, template_IDParameter, status_Code, message);
    }


    public virtual int DASM_UP_TRANSFERPROCESS_SP(string client_ID, string project_ID, Nullable<long> tool_ID, Nullable<long> template_ID, Nullable<long> role_ID, string modified_By, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var tool_IDParameter = tool_ID.HasValue ?
            new ObjectParameter("Tool_ID", tool_ID) :
            new ObjectParameter("Tool_ID", typeof(long));


        var template_IDParameter = template_ID.HasValue ?
            new ObjectParameter("Template_ID", template_ID) :
            new ObjectParameter("Template_ID", typeof(long));


        var role_IDParameter = role_ID.HasValue ?
            new ObjectParameter("Role_ID", role_ID) :
            new ObjectParameter("Role_ID", typeof(long));


        var modified_ByParameter = modified_By != null ?
            new ObjectParameter("Modified_By", modified_By) :
            new ObjectParameter("Modified_By", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DASM_UP_TRANSFERPROCESS_SP", client_IDParameter, project_IDParameter, tool_IDParameter, template_IDParameter, role_IDParameter, modified_ByParameter, status_Code, message);
    }


    public virtual ObjectResult<DASM_GET_TRANSFERRESULT_SP_Result> DASM_GET_TRANSFERRESULT_SP(string client_ID, string project_ID, Nullable<long> template_ID, Nullable<long> run_ID, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var template_IDParameter = template_ID.HasValue ?
            new ObjectParameter("Template_ID", template_ID) :
            new ObjectParameter("Template_ID", typeof(long));


        var run_IDParameter = run_ID.HasValue ?
            new ObjectParameter("Run_ID", run_ID) :
            new ObjectParameter("Run_ID", typeof(long));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DASM_GET_TRANSFERRESULT_SP_Result>("DASM_GET_TRANSFERRESULT_SP", client_IDParameter, project_IDParameter, template_IDParameter, run_IDParameter, status_Code, message);
    }


    public virtual int DASM_UP_PURGE_DATA_SP(string client_ID, string project_ID, Nullable<long> template_ID, Nullable<long> run_ID, Nullable<long> tool_ID, Nullable<long> role_ID, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var template_IDParameter = template_ID.HasValue ?
            new ObjectParameter("Template_ID", template_ID) :
            new ObjectParameter("Template_ID", typeof(long));


        var run_IDParameter = run_ID.HasValue ?
            new ObjectParameter("Run_ID", run_ID) :
            new ObjectParameter("Run_ID", typeof(long));


        var tool_IDParameter = tool_ID.HasValue ?
            new ObjectParameter("Tool_ID", tool_ID) :
            new ObjectParameter("Tool_ID", typeof(long));


        var role_IDParameter = role_ID.HasValue ?
            new ObjectParameter("Role_ID", role_ID) :
            new ObjectParameter("Role_ID", typeof(long));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DASM_UP_PURGE_DATA_SP", client_IDParameter, project_IDParameter, template_IDParameter, run_IDParameter, tool_IDParameter, role_IDParameter, status_Code, message);
    }


    public virtual ObjectResult<DASM_GET_CRI_OBJ_COUNT_SP1_Result> DASM_GET_CRI_OBJ_COUNT_SP1(string client_ID, string project_ID, Nullable<long> template_ID, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var template_IDParameter = template_ID.HasValue ?
            new ObjectParameter("Template_ID", template_ID) :
            new ObjectParameter("Template_ID", typeof(long));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DASM_GET_CRI_OBJ_COUNT_SP1_Result>("DASM_GET_CRI_OBJ_COUNT_SP1", client_IDParameter, project_IDParameter, template_IDParameter, status_Code, message);
    }


    public virtual int DASM_INSERT_AUDIT_LOG_SP(string client_ID, string project_ID, Nullable<long> tool_ID, Nullable<long> template_ID, Nullable<long> role_ID, string task, string modified_By, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var tool_IDParameter = tool_ID.HasValue ?
            new ObjectParameter("Tool_ID", tool_ID) :
            new ObjectParameter("Tool_ID", typeof(long));


        var template_IDParameter = template_ID.HasValue ?
            new ObjectParameter("Template_ID", template_ID) :
            new ObjectParameter("Template_ID", typeof(long));


        var role_IDParameter = role_ID.HasValue ?
            new ObjectParameter("Role_ID", role_ID) :
            new ObjectParameter("Role_ID", typeof(long));


        var taskParameter = task != null ?
            new ObjectParameter("Task", task) :
            new ObjectParameter("Task", typeof(string));


        var modified_ByParameter = modified_By != null ?
            new ObjectParameter("Modified_By", modified_By) :
            new ObjectParameter("Modified_By", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DASM_INSERT_AUDIT_LOG_SP", client_IDParameter, project_IDParameter, tool_IDParameter, template_IDParameter, role_IDParameter, taskParameter, modified_ByParameter, status_Code, message);
    }


    public virtual ObjectResult<CMN_GET_DATA_MASK_TYPE_SP_Result> CMN_GET_DATA_MASK_TYPE_SP(string column_Type, ObjectParameter status_Code, ObjectParameter message)
    {

        var column_TypeParameter = column_Type != null ?
            new ObjectParameter("Column_Type", column_Type) :
            new ObjectParameter("Column_Type", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CMN_GET_DATA_MASK_TYPE_SP_Result>("CMN_GET_DATA_MASK_TYPE_SP", column_TypeParameter, status_Code, message);
    }


    public virtual ObjectResult<CMN_GET_ENTITY_LIST_SP_Result> CMN_GET_ENTITY_LIST_SP(string client_ID, string project_ID, Nullable<long> config_ID, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var config_IDParameter = config_ID.HasValue ?
            new ObjectParameter("Config_ID", config_ID) :
            new ObjectParameter("Config_ID", typeof(long));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CMN_GET_ENTITY_LIST_SP_Result>("CMN_GET_ENTITY_LIST_SP", client_IDParameter, project_IDParameter, config_IDParameter, status_Code, message);
    }


    public virtual int CMN_INSERT_PROJECT_SP(string client_ID, string project_ID, string project_Description, string modified_By, ObjectParameter status_code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var project_DescriptionParameter = project_Description != null ?
            new ObjectParameter("Project_Description", project_Description) :
            new ObjectParameter("Project_Description", typeof(string));


        var modified_ByParameter = modified_By != null ?
            new ObjectParameter("Modified_By", modified_By) :
            new ObjectParameter("Modified_By", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CMN_INSERT_PROJECT_SP", client_IDParameter, project_IDParameter, project_DescriptionParameter, modified_ByParameter, status_code, message);
    }


    public virtual ObjectResult<CMN_GET_ENTITY_COLS_SP_Result> CMN_GET_ENTITY_COLS_SP(string client_ID, string project_ID, Nullable<long> entity_ID, Nullable<long> config_ID, ObjectParameter status_code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var entity_IDParameter = entity_ID.HasValue ?
            new ObjectParameter("Entity_ID", entity_ID) :
            new ObjectParameter("Entity_ID", typeof(long));


        var config_IDParameter = config_ID.HasValue ?
            new ObjectParameter("Config_ID", config_ID) :
            new ObjectParameter("Config_ID", typeof(long));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CMN_GET_ENTITY_COLS_SP_Result>("CMN_GET_ENTITY_COLS_SP", client_IDParameter, project_IDParameter, entity_IDParameter, config_IDParameter, status_code, message);
    }


    public virtual int CMN_INS_WORK_FLOW_SEQ_SP(ObjectParameter status_Code, ObjectParameter message)
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CMN_INS_WORK_FLOW_SEQ_SP", status_Code, message);
    }


    public virtual ObjectResult<CMN_GET_WORK_FLOW_SEQ_SP_Result> CMN_GET_WORK_FLOW_SEQ_SP(string client_ID, string project_ID, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CMN_GET_WORK_FLOW_SEQ_SP_Result>("CMN_GET_WORK_FLOW_SEQ_SP", client_IDParameter, project_IDParameter, status_Code, message);
    }


    public virtual ObjectResult<CMN_GET_PROJECT_SP_Result> CMN_GET_PROJECT_SP(string client_ID, string userName, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var userNameParameter = userName != null ?
            new ObjectParameter("UserName", userName) :
            new ObjectParameter("UserName", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CMN_GET_PROJECT_SP_Result>("CMN_GET_PROJECT_SP", client_IDParameter, userNameParameter, status_Code, message);
    }


    public virtual int CMN_INSERT_CLIENT_SP(string client_ID, string client_Name, string created_By, ObjectParameter status_code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var client_NameParameter = client_Name != null ?
            new ObjectParameter("Client_Name", client_Name) :
            new ObjectParameter("Client_Name", typeof(string));


        var created_ByParameter = created_By != null ?
            new ObjectParameter("Created_By", created_By) :
            new ObjectParameter("Created_By", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CMN_INSERT_CLIENT_SP", client_IDParameter, client_NameParameter, created_ByParameter, status_code, message);
    }


    public virtual int CMN_UPDATE_USER_SP(string client_ID, string project_ID, Nullable<long> uSER_ID, string email_ID, string user_Name, Nullable<long> active_Flag, string role_Name, string last_Modified_By, ObjectParameter status_code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var uSER_IDParameter = uSER_ID.HasValue ?
            new ObjectParameter("USER_ID", uSER_ID) :
            new ObjectParameter("USER_ID", typeof(long));


        var email_IDParameter = email_ID != null ?
            new ObjectParameter("Email_ID", email_ID) :
            new ObjectParameter("Email_ID", typeof(string));


        var user_NameParameter = user_Name != null ?
            new ObjectParameter("User_Name", user_Name) :
            new ObjectParameter("User_Name", typeof(string));


        var active_FlagParameter = active_Flag.HasValue ?
            new ObjectParameter("Active_Flag", active_Flag) :
            new ObjectParameter("Active_Flag", typeof(long));


        var role_NameParameter = role_Name != null ?
            new ObjectParameter("Role_Name", role_Name) :
            new ObjectParameter("Role_Name", typeof(string));


        var last_Modified_ByParameter = last_Modified_By != null ?
            new ObjectParameter("Last_Modified_By", last_Modified_By) :
            new ObjectParameter("Last_Modified_By", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CMN_UPDATE_USER_SP", client_IDParameter, project_IDParameter, uSER_IDParameter, email_IDParameter, user_NameParameter, active_FlagParameter, role_NameParameter, last_Modified_ByParameter, status_code, message);
    }


    public virtual int ETL_DELTE_VARIABLE_PARAM_SP(Nullable<long> parameter_ID, string modified_By, ObjectParameter status_Code, ObjectParameter message)
    {

        var parameter_IDParameter = parameter_ID.HasValue ?
            new ObjectParameter("Parameter_ID", parameter_ID) :
            new ObjectParameter("Parameter_ID", typeof(long));


        var modified_ByParameter = modified_By != null ?
            new ObjectParameter("Modified_By", modified_By) :
            new ObjectParameter("Modified_By", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ETL_DELTE_VARIABLE_PARAM_SP", parameter_IDParameter, modified_ByParameter, status_Code, message);
    }


    public virtual ObjectResult<ETL_GET_VARIABLE_PARAM_SP_Result> ETL_GET_VARIABLE_PARAM_SP(string client_ID, string project_ID, string template_Name, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var template_NameParameter = template_Name != null ?
            new ObjectParameter("Template_Name", template_Name) :
            new ObjectParameter("Template_Name", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ETL_GET_VARIABLE_PARAM_SP_Result>("ETL_GET_VARIABLE_PARAM_SP", client_IDParameter, project_IDParameter, template_NameParameter, status_Code, message);
    }


    public virtual int ETL_INSERT_VARIABLE_PARAM_SP(string client_ID, string project_ID, Nullable<long> template_ID, string template_Name, string parameter_Name, string arameter_Value, string package_Save_Location, Nullable<long> tool_ID, string created_By, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var template_IDParameter = template_ID.HasValue ?
            new ObjectParameter("Template_ID", template_ID) :
            new ObjectParameter("Template_ID", typeof(long));


        var template_NameParameter = template_Name != null ?
            new ObjectParameter("Template_Name", template_Name) :
            new ObjectParameter("Template_Name", typeof(string));


        var parameter_NameParameter = parameter_Name != null ?
            new ObjectParameter("Parameter_Name", parameter_Name) :
            new ObjectParameter("Parameter_Name", typeof(string));


        var arameter_ValueParameter = arameter_Value != null ?
            new ObjectParameter("arameter_Value", arameter_Value) :
            new ObjectParameter("arameter_Value", typeof(string));


        var package_Save_LocationParameter = package_Save_Location != null ?
            new ObjectParameter("Package_Save_Location", package_Save_Location) :
            new ObjectParameter("Package_Save_Location", typeof(string));


        var tool_IDParameter = tool_ID.HasValue ?
            new ObjectParameter("Tool_ID", tool_ID) :
            new ObjectParameter("Tool_ID", typeof(long));


        var created_ByParameter = created_By != null ?
            new ObjectParameter("Created_By", created_By) :
            new ObjectParameter("Created_By", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ETL_INSERT_VARIABLE_PARAM_SP", client_IDParameter, project_IDParameter, template_IDParameter, template_NameParameter, parameter_NameParameter, arameter_ValueParameter, package_Save_LocationParameter, tool_IDParameter, created_ByParameter, status_Code, message);
    }


    public virtual int ETL_UPDT_VARIABLE_PARAM_SP(Nullable<long> parameter_ID, string parameter_Name, string arameter_Value, string modified_By, ObjectParameter status_Code, ObjectParameter message)
    {

        var parameter_IDParameter = parameter_ID.HasValue ?
            new ObjectParameter("Parameter_ID", parameter_ID) :
            new ObjectParameter("Parameter_ID", typeof(long));


        var parameter_NameParameter = parameter_Name != null ?
            new ObjectParameter("Parameter_Name", parameter_Name) :
            new ObjectParameter("Parameter_Name", typeof(string));


        var arameter_ValueParameter = arameter_Value != null ?
            new ObjectParameter("arameter_Value", arameter_Value) :
            new ObjectParameter("arameter_Value", typeof(string));


        var modified_ByParameter = modified_By != null ?
            new ObjectParameter("Modified_By", modified_By) :
            new ObjectParameter("Modified_By", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ETL_UPDT_VARIABLE_PARAM_SP", parameter_IDParameter, parameter_NameParameter, arameter_ValueParameter, modified_ByParameter, status_Code, message);
    }


    public virtual ObjectResult<CMN_GET_OFFLINE_JOB_STATS_SP_Result> CMN_GET_OFFLINE_JOB_STATS_SP(string client_ID, string project_ID, Nullable<long> tool_ID, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var tool_IDParameter = tool_ID.HasValue ?
            new ObjectParameter("Tool_ID", tool_ID) :
            new ObjectParameter("Tool_ID", typeof(long));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CMN_GET_OFFLINE_JOB_STATS_SP_Result>("CMN_GET_OFFLINE_JOB_STATS_SP", client_IDParameter, project_IDParameter, tool_IDParameter, status_Code, message);
    }


    public virtual ObjectResult<CMN_GET_METADATA_BUSNAME_SP_Result> CMN_GET_METADATA_BUSNAME_SP(string client_ID, string project_ID, string table_name, string column_Name, Nullable<long> config_ID, ObjectParameter status_code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var table_nameParameter = table_name != null ?
            new ObjectParameter("Table_name", table_name) :
            new ObjectParameter("Table_name", typeof(string));


        var column_NameParameter = column_Name != null ?
            new ObjectParameter("Column_Name", column_Name) :
            new ObjectParameter("Column_Name", typeof(string));


        var config_IDParameter = config_ID.HasValue ?
            new ObjectParameter("Config_ID", config_ID) :
            new ObjectParameter("Config_ID", typeof(long));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CMN_GET_METADATA_BUSNAME_SP_Result>("CMN_GET_METADATA_BUSNAME_SP", client_IDParameter, project_IDParameter, table_nameParameter, column_NameParameter, config_IDParameter, status_code, message);
    }


    public virtual int CMN_CHANGE_PASSWORD_SP(string client_ID, string project_ID, string old_Password, string new_Password, string user_Name, string email_ID, string action, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var old_PasswordParameter = old_Password != null ?
            new ObjectParameter("Old_Password", old_Password) :
            new ObjectParameter("Old_Password", typeof(string));


        var new_PasswordParameter = new_Password != null ?
            new ObjectParameter("New_Password", new_Password) :
            new ObjectParameter("New_Password", typeof(string));


        var user_NameParameter = user_Name != null ?
            new ObjectParameter("User_Name", user_Name) :
            new ObjectParameter("User_Name", typeof(string));


        var email_IDParameter = email_ID != null ?
            new ObjectParameter("Email_ID", email_ID) :
            new ObjectParameter("Email_ID", typeof(string));


        var actionParameter = action != null ?
            new ObjectParameter("Action", action) :
            new ObjectParameter("Action", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CMN_CHANGE_PASSWORD_SP", client_IDParameter, project_IDParameter, old_PasswordParameter, new_PasswordParameter, user_NameParameter, email_IDParameter, actionParameter, status_Code, message);
    }


    public virtual ObjectResult<PROF_GET_PROFILER_RULE_SP_Result> PROF_GET_PROFILER_RULE_SP(string client_ID, string project_ID, string table_Name, string column_Name, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var table_NameParameter = table_Name != null ?
            new ObjectParameter("Table_Name", table_Name) :
            new ObjectParameter("Table_Name", typeof(string));


        var column_NameParameter = column_Name != null ?
            new ObjectParameter("Column_Name", column_Name) :
            new ObjectParameter("Column_Name", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PROF_GET_PROFILER_RULE_SP_Result>("PROF_GET_PROFILER_RULE_SP", client_IDParameter, project_IDParameter, table_NameParameter, column_NameParameter, status_Code, message);
    }


    public virtual ObjectResult<CMN_GUESS_DATA_TYPE_SP_Result> CMN_GUESS_DATA_TYPE_SP(string client_ID, string project_ID, string table_Name, string column_Name, ObjectParameter status_code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var table_NameParameter = table_Name != null ?
            new ObjectParameter("Table_Name", table_Name) :
            new ObjectParameter("Table_Name", typeof(string));


        var column_NameParameter = column_Name != null ?
            new ObjectParameter("Column_Name", column_Name) :
            new ObjectParameter("Column_Name", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CMN_GUESS_DATA_TYPE_SP_Result>("CMN_GUESS_DATA_TYPE_SP", client_IDParameter, project_IDParameter, table_NameParameter, column_NameParameter, status_code, message);
    }


    public virtual int CMN_UPDATE_ENTITY_ATTRS_SP(ObjectParameter status_Code, ObjectParameter message)
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CMN_UPDATE_ENTITY_ATTRS_SP", status_Code, message);
    }


    public virtual ObjectResult<CMN_GET_ROLE_MENU_ITEMS_SP_Result> CMN_GET_ROLE_MENU_ITEMS_SP(Nullable<int> role_ID, ObjectParameter status_Code, ObjectParameter message)
    {

        var role_IDParameter = role_ID.HasValue ?
            new ObjectParameter("Role_ID", role_ID) :
            new ObjectParameter("Role_ID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CMN_GET_ROLE_MENU_ITEMS_SP_Result>("CMN_GET_ROLE_MENU_ITEMS_SP", role_IDParameter, status_Code, message);
    }


    public virtual int CMN_UPDATE_ROLE_MENU_SP(Nullable<int> role_ID, string menu_item_list, ObjectParameter status_Code, ObjectParameter message)
    {

        var role_IDParameter = role_ID.HasValue ?
            new ObjectParameter("Role_ID", role_ID) :
            new ObjectParameter("Role_ID", typeof(int));


        var menu_item_listParameter = menu_item_list != null ?
            new ObjectParameter("Menu_item_list", menu_item_list) :
            new ObjectParameter("Menu_item_list", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CMN_UPDATE_ROLE_MENU_SP", role_IDParameter, menu_item_listParameter, status_Code, message);
    }


    public virtual ObjectResult<CMN_GET_USR_RLE_MNU_BY_TYPE_SP_Result> CMN_GET_USR_RLE_MNU_BY_TYPE_SP(string user_Name, string menu_Type, ObjectParameter status_Code, ObjectParameter message)
    {

        var user_NameParameter = user_Name != null ?
            new ObjectParameter("User_Name", user_Name) :
            new ObjectParameter("User_Name", typeof(string));


        var menu_TypeParameter = menu_Type != null ?
            new ObjectParameter("Menu_Type", menu_Type) :
            new ObjectParameter("Menu_Type", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CMN_GET_USR_RLE_MNU_BY_TYPE_SP_Result>("CMN_GET_USR_RLE_MNU_BY_TYPE_SP", user_NameParameter, menu_TypeParameter, status_Code, message);
    }


    public virtual ObjectResult<HXR_GET_RUN_ID_SP_Result> HXR_GET_RUN_ID_SP(string client_Id, string project_ID, string table_name, ObjectParameter status_code, ObjectParameter message)
    {

        var client_IdParameter = client_Id != null ?
            new ObjectParameter("Client_Id", client_Id) :
            new ObjectParameter("Client_Id", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var table_nameParameter = table_name != null ?
            new ObjectParameter("Table_name", table_name) :
            new ObjectParameter("Table_name", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HXR_GET_RUN_ID_SP_Result>("HXR_GET_RUN_ID_SP", client_IdParameter, project_IDParameter, table_nameParameter, status_code, message);
    }


    public virtual ObjectResult<CMN_GET_SCHEDULED_JOBS_SP_Result> CMN_GET_SCHEDULED_JOBS_SP(string client_ID, string project_ID, Nullable<long> tool_ID, string trans_Type, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var tool_IDParameter = tool_ID.HasValue ?
            new ObjectParameter("Tool_ID", tool_ID) :
            new ObjectParameter("Tool_ID", typeof(long));


        var trans_TypeParameter = trans_Type != null ?
            new ObjectParameter("Trans_Type", trans_Type) :
            new ObjectParameter("Trans_Type", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CMN_GET_SCHEDULED_JOBS_SP_Result>("CMN_GET_SCHEDULED_JOBS_SP", client_IDParameter, project_IDParameter, tool_IDParameter, trans_TypeParameter, status_Code, message);
    }


    public virtual int CMN_CHECK_KEY_COLS_SP(string client_ID, string project_ID, string table_Name, Nullable<long> config_ID, ObjectParameter status_code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var table_NameParameter = table_Name != null ?
            new ObjectParameter("Table_Name", table_Name) :
            new ObjectParameter("Table_Name", typeof(string));


        var config_IDParameter = config_ID.HasValue ?
            new ObjectParameter("Config_ID", config_ID) :
            new ObjectParameter("Config_ID", typeof(long));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CMN_CHECK_KEY_COLS_SP", client_IDParameter, project_IDParameter, table_NameParameter, config_IDParameter, status_code, message);
    }


    public virtual ObjectResult<HXR_GET_ERROR_RULE_CATEGORY_SP_Result> HXR_GET_ERROR_RULE_CATEGORY_SP(string client_Id, string project_ID, string table_name, Nullable<long> run_ID, ObjectParameter status_code, ObjectParameter message)
    {

        var client_IdParameter = client_Id != null ?
            new ObjectParameter("Client_Id", client_Id) :
            new ObjectParameter("Client_Id", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var table_nameParameter = table_name != null ?
            new ObjectParameter("Table_name", table_name) :
            new ObjectParameter("Table_name", typeof(string));


        var run_IDParameter = run_ID.HasValue ?
            new ObjectParameter("Run_ID", run_ID) :
            new ObjectParameter("Run_ID", typeof(long));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HXR_GET_ERROR_RULE_CATEGORY_SP_Result>("HXR_GET_ERROR_RULE_CATEGORY_SP", client_IdParameter, project_IDParameter, table_nameParameter, run_IDParameter, status_code, message);
    }


    public virtual ObjectResult<HXR_GET_ERROR_RULE_SP_Result> HXR_GET_ERROR_RULE_SP(string client_Id, string project_ID, string table_name, Nullable<long> run_ID, Nullable<long> rule_category_ID, ObjectParameter status_code, ObjectParameter message)
    {

        var client_IdParameter = client_Id != null ?
            new ObjectParameter("Client_Id", client_Id) :
            new ObjectParameter("Client_Id", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var table_nameParameter = table_name != null ?
            new ObjectParameter("Table_name", table_name) :
            new ObjectParameter("Table_name", typeof(string));


        var run_IDParameter = run_ID.HasValue ?
            new ObjectParameter("Run_ID", run_ID) :
            new ObjectParameter("Run_ID", typeof(long));


        var rule_category_IDParameter = rule_category_ID.HasValue ?
            new ObjectParameter("Rule_category_ID", rule_category_ID) :
            new ObjectParameter("Rule_category_ID", typeof(long));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HXR_GET_ERROR_RULE_SP_Result>("HXR_GET_ERROR_RULE_SP", client_IdParameter, project_IDParameter, table_nameParameter, run_IDParameter, rule_category_IDParameter, status_code, message);
    }


    public virtual int DASM_INS_MASKING_TEMPLATE_SP(ObjectParameter template_ID_out, ObjectParameter status_Code, ObjectParameter message)
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DASM_INS_MASKING_TEMPLATE_SP", template_ID_out, status_Code, message);
    }


    public virtual ObjectResult<DASM_GET_TARGETSERVER_SP_Result> DASM_GET_TARGETSERVER_SP(string client_ID, string project_ID, Nullable<long> role_ID, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var role_IDParameter = role_ID.HasValue ?
            new ObjectParameter("Role_ID", role_ID) :
            new ObjectParameter("Role_ID", typeof(long));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DASM_GET_TARGETSERVER_SP_Result>("DASM_GET_TARGETSERVER_SP", client_IDParameter, project_IDParameter, role_IDParameter, status_Code, message);
    }


    public virtual ObjectResult<string> DASM_GET_SLICING_COL_LIST_SP(string client_ID, string project_ID, string constraint_Type, Nullable<long> config_ID, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var constraint_TypeParameter = constraint_Type != null ?
            new ObjectParameter("Constraint_Type", constraint_Type) :
            new ObjectParameter("Constraint_Type", typeof(string));


        var config_IDParameter = config_ID.HasValue ?
            new ObjectParameter("Config_ID", config_ID) :
            new ObjectParameter("Config_ID", typeof(long));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("DASM_GET_SLICING_COL_LIST_SP", client_IDParameter, project_IDParameter, constraint_TypeParameter, config_IDParameter, status_Code, message);
    }


    public virtual ObjectResult<DASM_GET_AUDITREPORT_SP_Result> DASM_GET_AUDITREPORT_SP(string client_ID, string project_ID, Nullable<long> template_ID, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var template_IDParameter = template_ID.HasValue ?
            new ObjectParameter("Template_ID", template_ID) :
            new ObjectParameter("Template_ID", typeof(long));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DASM_GET_AUDITREPORT_SP_Result>("DASM_GET_AUDITREPORT_SP", client_IDParameter, project_IDParameter, template_IDParameter, status_Code, message);
    }


    public virtual ObjectResult<DASM_GET_SLICING_RUNID_SP_Result> DASM_GET_SLICING_RUNID_SP(string client_ID, string project_ID, Nullable<long> template_ID, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var template_IDParameter = template_ID.HasValue ?
            new ObjectParameter("Template_ID", template_ID) :
            new ObjectParameter("Template_ID", typeof(long));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DASM_GET_SLICING_RUNID_SP_Result>("DASM_GET_SLICING_RUNID_SP", client_IDParameter, project_IDParameter, template_IDParameter, status_Code, message);
    }


    public virtual ObjectResult<DASM_GET_DELETELIST_SP_Result> DASM_GET_DELETELIST_SP(string client_ID, string project_ID, Nullable<long> teamplate_ID, Nullable<long> run_ID, Nullable<int> pageNo, Nullable<int> recordsPerPage, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var teamplate_IDParameter = teamplate_ID.HasValue ?
            new ObjectParameter("Teamplate_ID", teamplate_ID) :
            new ObjectParameter("Teamplate_ID", typeof(long));


        var run_IDParameter = run_ID.HasValue ?
            new ObjectParameter("Run_ID", run_ID) :
            new ObjectParameter("Run_ID", typeof(long));


        var pageNoParameter = pageNo.HasValue ?
            new ObjectParameter("PageNo", pageNo) :
            new ObjectParameter("PageNo", typeof(int));


        var recordsPerPageParameter = recordsPerPage.HasValue ?
            new ObjectParameter("RecordsPerPage", recordsPerPage) :
            new ObjectParameter("RecordsPerPage", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DASM_GET_DELETELIST_SP_Result>("DASM_GET_DELETELIST_SP", client_IDParameter, project_IDParameter, teamplate_IDParameter, run_IDParameter, pageNoParameter, recordsPerPageParameter, status_Code, message);
    }


    public virtual int ETL_INSERT_FILE_UPLOAD_TEMPLATE_SP(string template_ID, string source_Name, string file_Location, string file_Name, string prefix_Filename, string batch_Portion, string batch_Name_Values, string file_Type, string file_Delimiter, string data_Starting_Line, string target_Table, string header_Row, ObjectParameter status_Code, ObjectParameter message)
    {

        var template_IDParameter = template_ID != null ?
            new ObjectParameter("Template_ID", template_ID) :
            new ObjectParameter("Template_ID", typeof(string));


        var source_NameParameter = source_Name != null ?
            new ObjectParameter("Source_Name", source_Name) :
            new ObjectParameter("Source_Name", typeof(string));


        var file_LocationParameter = file_Location != null ?
            new ObjectParameter("File_Location", file_Location) :
            new ObjectParameter("File_Location", typeof(string));


        var file_NameParameter = file_Name != null ?
            new ObjectParameter("File_Name", file_Name) :
            new ObjectParameter("File_Name", typeof(string));


        var prefix_FilenameParameter = prefix_Filename != null ?
            new ObjectParameter("Prefix_Filename", prefix_Filename) :
            new ObjectParameter("Prefix_Filename", typeof(string));


        var batch_PortionParameter = batch_Portion != null ?
            new ObjectParameter("Batch_Portion", batch_Portion) :
            new ObjectParameter("Batch_Portion", typeof(string));


        var batch_Name_ValuesParameter = batch_Name_Values != null ?
            new ObjectParameter("Batch_Name_Values", batch_Name_Values) :
            new ObjectParameter("Batch_Name_Values", typeof(string));


        var file_TypeParameter = file_Type != null ?
            new ObjectParameter("File_Type", file_Type) :
            new ObjectParameter("File_Type", typeof(string));


        var file_DelimiterParameter = file_Delimiter != null ?
            new ObjectParameter("File_Delimiter", file_Delimiter) :
            new ObjectParameter("File_Delimiter", typeof(string));


        var data_Starting_LineParameter = data_Starting_Line != null ?
            new ObjectParameter("Data_Starting_Line", data_Starting_Line) :
            new ObjectParameter("Data_Starting_Line", typeof(string));


        var target_TableParameter = target_Table != null ?
            new ObjectParameter("Target_Table", target_Table) :
            new ObjectParameter("Target_Table", typeof(string));


        var header_RowParameter = header_Row != null ?
            new ObjectParameter("Header_Row", header_Row) :
            new ObjectParameter("Header_Row", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ETL_INSERT_FILE_UPLOAD_TEMPLATE_SP", template_IDParameter, source_NameParameter, file_LocationParameter, file_NameParameter, prefix_FilenameParameter, batch_PortionParameter, batch_Name_ValuesParameter, file_TypeParameter, file_DelimiterParameter, data_Starting_LineParameter, target_TableParameter, header_RowParameter, status_Code, message);
    }


    public virtual int ETL_INSERT_TEMPLATE_SP(string client_ID, string project_ID, string template_Name, string created_By, string type, ObjectParameter tempalte_ID, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var template_NameParameter = template_Name != null ?
            new ObjectParameter("Template_Name", template_Name) :
            new ObjectParameter("Template_Name", typeof(string));


        var created_ByParameter = created_By != null ?
            new ObjectParameter("Created_By", created_By) :
            new ObjectParameter("Created_By", typeof(string));


        var typeParameter = type != null ?
            new ObjectParameter("Type", type) :
            new ObjectParameter("Type", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ETL_INSERT_TEMPLATE_SP", client_IDParameter, project_IDParameter, template_NameParameter, created_ByParameter, typeParameter, tempalte_ID, status_Code, message);
    }


    public virtual int DASM_CHECK_DUPLICATE_RUN_SP(string client_ID, string project_ID, Nullable<long> template_ID, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var template_IDParameter = template_ID.HasValue ?
            new ObjectParameter("Template_ID", template_ID) :
            new ObjectParameter("Template_ID", typeof(long));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DASM_CHECK_DUPLICATE_RUN_SP", client_IDParameter, project_IDParameter, template_IDParameter, status_Code, message);
    }


    public virtual int ETL_GET_THRESH_LIMIT_SP(string client_ID, string project_ID, Nullable<long> template_ID, ObjectParameter status_code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var template_IDParameter = template_ID.HasValue ?
            new ObjectParameter("Template_ID", template_ID) :
            new ObjectParameter("Template_ID", typeof(long));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ETL_GET_THRESH_LIMIT_SP", client_IDParameter, project_IDParameter, template_IDParameter, status_code, message);
    }


    public virtual ObjectResult<PROF_GET_BATCH_STATUS_SP_Result> PROF_GET_BATCH_STATUS_SP(string client_ID, string project_ID, Nullable<int> no_of_rows, Nullable<int> page_no)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var no_of_rowsParameter = no_of_rows.HasValue ?
            new ObjectParameter("No_of_rows", no_of_rows) :
            new ObjectParameter("No_of_rows", typeof(int));


        var page_noParameter = page_no.HasValue ?
            new ObjectParameter("Page_no", page_no) :
            new ObjectParameter("Page_no", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PROF_GET_BATCH_STATUS_SP_Result>("PROF_GET_BATCH_STATUS_SP", client_IDParameter, project_IDParameter, no_of_rowsParameter, page_noParameter);
    }


    public virtual int CMN_CHECK_COLUMN_DATA_TYPE_SP(string client_ID, string project_ID, string table_Name, string column_name, Nullable<long> config_ID, string columnType, ObjectParameter status_code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var table_NameParameter = table_Name != null ?
            new ObjectParameter("Table_Name", table_Name) :
            new ObjectParameter("Table_Name", typeof(string));


        var column_nameParameter = column_name != null ?
            new ObjectParameter("Column_name", column_name) :
            new ObjectParameter("Column_name", typeof(string));


        var config_IDParameter = config_ID.HasValue ?
            new ObjectParameter("Config_ID", config_ID) :
            new ObjectParameter("Config_ID", typeof(long));


        var columnTypeParameter = columnType != null ?
            new ObjectParameter("ColumnType", columnType) :
            new ObjectParameter("ColumnType", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CMN_CHECK_COLUMN_DATA_TYPE_SP", client_IDParameter, project_IDParameter, table_NameParameter, column_nameParameter, config_IDParameter, columnTypeParameter, status_code, message);
    }


    public virtual ObjectResult<CMN_GET_COL_DATA_TYPES_SP_Result> CMN_GET_COL_DATA_TYPES_SP(string client_ID, string project_ID, Nullable<long> config_ID, ObjectParameter status_code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var config_IDParameter = config_ID.HasValue ?
            new ObjectParameter("Config_ID", config_ID) :
            new ObjectParameter("Config_ID", typeof(long));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CMN_GET_COL_DATA_TYPES_SP_Result>("CMN_GET_COL_DATA_TYPES_SP", client_IDParameter, project_IDParameter, config_IDParameter, status_code, message);
    }


    public virtual int CMN_GET_TABLE_COL_COUNT_SP(string client_ID, string project_ID, Nullable<long> config_ID, string table_Name, ObjectParameter column_Count, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var config_IDParameter = config_ID.HasValue ?
            new ObjectParameter("Config_ID", config_ID) :
            new ObjectParameter("Config_ID", typeof(long));


        var table_NameParameter = table_Name != null ?
            new ObjectParameter("Table_Name", table_Name) :
            new ObjectParameter("Table_Name", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CMN_GET_TABLE_COL_COUNT_SP", client_IDParameter, project_IDParameter, config_IDParameter, table_NameParameter, column_Count, status_Code, message);
    }


    public virtual int CMN_INSERT_ROLE_SP(string client_ID, string project_ID, string role_Name, string role_Description, string active_Flag, string sys_Admin, ObjectParameter status_code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var role_NameParameter = role_Name != null ?
            new ObjectParameter("Role_Name", role_Name) :
            new ObjectParameter("Role_Name", typeof(string));


        var role_DescriptionParameter = role_Description != null ?
            new ObjectParameter("Role_Description", role_Description) :
            new ObjectParameter("Role_Description", typeof(string));


        var active_FlagParameter = active_Flag != null ?
            new ObjectParameter("Active_Flag", active_Flag) :
            new ObjectParameter("Active_Flag", typeof(string));


        var sys_AdminParameter = sys_Admin != null ?
            new ObjectParameter("Sys_Admin", sys_Admin) :
            new ObjectParameter("Sys_Admin", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CMN_INSERT_ROLE_SP", client_IDParameter, project_IDParameter, role_NameParameter, role_DescriptionParameter, active_FlagParameter, sys_AdminParameter, status_code, message);
    }


    public virtual ObjectResult<DASM_GET_MASKING_TEMPLATE_SP_Result> DASM_GET_MASKING_TEMPLATE_SP(string client_ID, string project_ID, Nullable<long> role_ID, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var role_IDParameter = role_ID.HasValue ?
            new ObjectParameter("Role_ID", role_ID) :
            new ObjectParameter("Role_ID", typeof(long));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DASM_GET_MASKING_TEMPLATE_SP_Result>("DASM_GET_MASKING_TEMPLATE_SP", client_IDParameter, project_IDParameter, role_IDParameter, status_Code, message);
    }


    public virtual ObjectResult<DRD_INSERT_AUTOMATON_TEMPLATE_SP_Result> DRD_INSERT_AUTOMATON_TEMPLATE_SP(string client_ID, string project_ID, string atmtn_Template_ID, Nullable<long> role_ID, string updated_By, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var atmtn_Template_IDParameter = atmtn_Template_ID != null ?
            new ObjectParameter("Atmtn_Template_ID", atmtn_Template_ID) :
            new ObjectParameter("Atmtn_Template_ID", typeof(string));


        var role_IDParameter = role_ID.HasValue ?
            new ObjectParameter("Role_ID", role_ID) :
            new ObjectParameter("Role_ID", typeof(long));


        var updated_ByParameter = updated_By != null ?
            new ObjectParameter("Updated_By", updated_By) :
            new ObjectParameter("Updated_By", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DRD_INSERT_AUTOMATON_TEMPLATE_SP_Result>("DRD_INSERT_AUTOMATON_TEMPLATE_SP", client_IDParameter, project_IDParameter, atmtn_Template_IDParameter, role_IDParameter, updated_ByParameter, status_Code, message);
    }


    public virtual ObjectResult<ETL_GET_CONN_STRING_SP1_Result> ETL_GET_CONN_STRING_SP1(string client_ID, string project_ID, Nullable<long> tool_ID, Nullable<long> role_ID, string sourceTarget, string dB_Type, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var tool_IDParameter = tool_ID.HasValue ?
            new ObjectParameter("Tool_ID", tool_ID) :
            new ObjectParameter("Tool_ID", typeof(long));


        var role_IDParameter = role_ID.HasValue ?
            new ObjectParameter("Role_ID", role_ID) :
            new ObjectParameter("Role_ID", typeof(long));


        var sourceTargetParameter = sourceTarget != null ?
            new ObjectParameter("SourceTarget", sourceTarget) :
            new ObjectParameter("SourceTarget", typeof(string));


        var dB_TypeParameter = dB_Type != null ?
            new ObjectParameter("DB_Type", dB_Type) :
            new ObjectParameter("DB_Type", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ETL_GET_CONN_STRING_SP1_Result>("ETL_GET_CONN_STRING_SP1", client_IDParameter, project_IDParameter, tool_IDParameter, role_IDParameter, sourceTargetParameter, dB_TypeParameter, status_Code, message);
    }


    public virtual ObjectResult<COMMON_GET_CONFIG_DETAILS_SP1_Result> COMMON_GET_CONFIG_DETAILS_SP1(string client_ID, string project_ID, string source_Target, string dB_Type, Nullable<long> tool_ID, Nullable<int> role_ID, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var source_TargetParameter = source_Target != null ?
            new ObjectParameter("Source_Target", source_Target) :
            new ObjectParameter("Source_Target", typeof(string));


        var dB_TypeParameter = dB_Type != null ?
            new ObjectParameter("DB_Type", dB_Type) :
            new ObjectParameter("DB_Type", typeof(string));


        var tool_IDParameter = tool_ID.HasValue ?
            new ObjectParameter("Tool_ID", tool_ID) :
            new ObjectParameter("Tool_ID", typeof(long));


        var role_IDParameter = role_ID.HasValue ?
            new ObjectParameter("Role_ID", role_ID) :
            new ObjectParameter("Role_ID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<COMMON_GET_CONFIG_DETAILS_SP1_Result>("COMMON_GET_CONFIG_DETAILS_SP1", client_IDParameter, project_IDParameter, source_TargetParameter, dB_TypeParameter, tool_IDParameter, role_IDParameter, status_Code, message);
    }


    public virtual ObjectResult<ETL_GET_SOURCE_TARGET_MAPPING_DTLS_SP_Result> ETL_GET_SOURCE_TARGET_MAPPING_DTLS_SP(string client_ID, string project_ID, Nullable<long> template_ID, Nullable<long> role_ID, string table_Name, string source_OR_Target, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var template_IDParameter = template_ID.HasValue ?
            new ObjectParameter("Template_ID", template_ID) :
            new ObjectParameter("Template_ID", typeof(long));


        var role_IDParameter = role_ID.HasValue ?
            new ObjectParameter("Role_ID", role_ID) :
            new ObjectParameter("Role_ID", typeof(long));


        var table_NameParameter = table_Name != null ?
            new ObjectParameter("Table_Name", table_Name) :
            new ObjectParameter("Table_Name", typeof(string));


        var source_OR_TargetParameter = source_OR_Target != null ?
            new ObjectParameter("Source_OR_Target", source_OR_Target) :
            new ObjectParameter("Source_OR_Target", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ETL_GET_SOURCE_TARGET_MAPPING_DTLS_SP_Result>("ETL_GET_SOURCE_TARGET_MAPPING_DTLS_SP", client_IDParameter, project_IDParameter, template_IDParameter, role_IDParameter, table_NameParameter, source_OR_TargetParameter, status_Code, message);
    }


    public virtual ObjectResult<HXR_GET_RULE_ERROR_SUMMARY_SP_Result> HXR_GET_RULE_ERROR_SUMMARY_SP(string client_ID, string project_ID, string table_Name, string run_Number, Nullable<long> rule_Category_ID, Nullable<long> rule_ID, ObjectParameter status_Code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var table_NameParameter = table_Name != null ?
            new ObjectParameter("Table_Name", table_Name) :
            new ObjectParameter("Table_Name", typeof(string));


        var run_NumberParameter = run_Number != null ?
            new ObjectParameter("Run_Number", run_Number) :
            new ObjectParameter("Run_Number", typeof(string));


        var rule_Category_IDParameter = rule_Category_ID.HasValue ?
            new ObjectParameter("Rule_Category_ID", rule_Category_ID) :
            new ObjectParameter("Rule_Category_ID", typeof(long));


        var rule_IDParameter = rule_ID.HasValue ?
            new ObjectParameter("Rule_ID", rule_ID) :
            new ObjectParameter("Rule_ID", typeof(long));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HXR_GET_RULE_ERROR_SUMMARY_SP_Result>("HXR_GET_RULE_ERROR_SUMMARY_SP", client_IDParameter, project_IDParameter, table_NameParameter, run_NumberParameter, rule_Category_IDParameter, rule_IDParameter, status_Code, message);
    }


    public virtual int DASM_INS_MASKING_TEMPLATE_SP1(Nullable<long> role_ID, ObjectParameter template_ID_out, ObjectParameter status_Code, ObjectParameter message)
    {

        var role_IDParameter = role_ID.HasValue ?
            new ObjectParameter("Role_ID", role_ID) :
            new ObjectParameter("Role_ID", typeof(long));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DASM_INS_MASKING_TEMPLATE_SP1", role_IDParameter, template_ID_out, status_Code, message);
    }


    public virtual ObjectResult<CMN_GET_ROLE_SP_Result1> CMN_GET_ROLE_SP(string client_ID, string project_ID, Nullable<long> role_ID, ObjectParameter status_code, ObjectParameter message)
    {

        var client_IDParameter = client_ID != null ?
            new ObjectParameter("Client_ID", client_ID) :
            new ObjectParameter("Client_ID", typeof(string));


        var project_IDParameter = project_ID != null ?
            new ObjectParameter("Project_ID", project_ID) :
            new ObjectParameter("Project_ID", typeof(string));


        var role_IDParameter = role_ID.HasValue ?
            new ObjectParameter("Role_ID", role_ID) :
            new ObjectParameter("Role_ID", typeof(long));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CMN_GET_ROLE_SP_Result1>("CMN_GET_ROLE_SP", client_IDParameter, project_IDParameter, role_IDParameter, status_code, message);
    }

}

}

