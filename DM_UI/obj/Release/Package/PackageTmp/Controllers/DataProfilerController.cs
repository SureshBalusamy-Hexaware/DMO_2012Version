using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using DM_BusinessEntities;
using DM_BusinessService;
using DM_UI.App_Start;

namespace DM_UI.Controllers
{
    public class DataProfilerController : Controller
    {
        private readonly IHXRConfigurationMS _configMS;

        public DataProfilerController()
        {
            _configMS = new HXRConfigurationMSService();
        }

        private void ViewBags(UIProperties.DataProfilerMenu MenuId)
        {
            int ToolID = (int)UIProperties.Tools.DataProfiler;
            //ViewBag.SelectedMenu = SelectedTabId;
            UIProperties.MenuTable.SelectedMenuId = (int)MenuId;
            UIProperties.MenuTable.GetMenu(ToolID);
            ViewBag.ToolIconPath = ((dynamic)(UIProperties.Tool_Logos.GetToolLogo(ToolID))).Logo;
            ViewBag.Menu = UIProperties.MenuTable.ToolMenu;
            ViewBag.UserName = UIProperties.Sessions.UserName;
        }
        private void ViewDatas()
        {
            ViewData["ClientID"] = UIProperties.Sessions.Client.Client_ID;
            ViewData["ProjectID"] = UIProperties.Sessions.Client.project_ID;
        }
        public ActionResult Configuration()
        {
            TempData["ToolId"] = (int)UIProperties.Tools.DataProfiler;
            TempData["MenuId"] = (int)UIProperties.DataProfilerMenu.Configuration;

            return RedirectToAction("Index", "Configuration");
        }

        public ActionResult DataProfiling()
        {
            ViewDatas();
            ViewBags(UIProperties.DataProfilerMenu.Profile);

            HXRConfigurationMSEntity _configEntity = UIProperties.Sessions.ConfigEntity;
            ViewData["DatabaseIP"] = _configEntity.ServerIPAddress;
            ViewData["SourceTarget"] = _configEntity.SourceTarget;
            ViewData["DatabaseName"] = _configEntity.SchemaName;
            ViewData["ConfigId"] = _configEntity.Config_ID;

            return View("DataProfiling");
        }

        public ActionResult OfflineProfiling()
        {
            ViewDatas();
            ViewBags(UIProperties.DataProfilerMenu.OfflineProfile);

            HXRConfigurationMSEntity _configEntity = UIProperties.Sessions.ConfigEntity;
            ViewData["DatabaseIP"] = _configEntity.ServerIPAddress;
            ViewData["SourceTarget"] = _configEntity.SourceTarget;
            ViewData["DatabaseName"] = _configEntity.SchemaName;
            ViewData["ConfigId"] = _configEntity.Config_ID;

            return View("OfflineProfiling");
        }

        public ActionResult ProfileReport()
        {
            ViewDatas();
            ViewBags(UIProperties.DataProfilerMenu.Report);
            return Redirect("../Dashboard.aspx?ToolID=11");
        }

        public ActionResult ExcelTemplate()
        {
            return RedirectToAction("ExcelTemplate", "Automaton",
            new { ToolName = "DataProfiler" });
        }

        public ActionResult CodeRuleManagement()
        {

            HXRConfigurationMSEntity _configEntity = UIProperties.Sessions.ConfigEntity;

            ViewData["ConfigId"] = _configEntity.Config_ID;
            ViewDatas();
            ViewBags(UIProperties.DataProfilerMenu.CodeRuleManagement);

            return View();
        }

        private void InitializeSession()
        {
            string StatusCode = string.Empty, Message = string.Empty;
            UIProperties.Sessions.Client = _configMS.GetClientDetails(UIProperties.Sessions.UserName, ref StatusCode, ref  Message);

            UIProperties.Sessions.ToolID = ((int)UIProperties.Tools.DataProfiler).ToString();
            ViewData["ClientID"] = UIProperties.Sessions.Client.Client_ID;
            ViewData["ProjectID"] = UIProperties.Sessions.Client.project_ID;
        }

        [HttpGet]
        public JsonResult GetConfigBySourceTarget(string SourceTarget)
        {
            string StatusCode = string.Empty, Message = string.Empty;

            string ClientID = UIProperties.Sessions.Client.Client_ID;
            string ProjectID = UIProperties.Sessions.Client.project_ID;
            long ToolID = Convert.ToInt64(UIProperties.Tools.DataProfiler);
            int? RoleId = UIProperties.Sessions.Client.Role_ID;
            HXRConfigurationMSEntity _configEntity = _configMS.GetConfigurationByType(ClientID, ProjectID, SourceTarget, ToolID, RoleId, ref StatusCode, ref Message);
            UIProperties.Sessions.ConfigEntity = _configEntity;

            if (UIProperties.Sessions.ConfigEntity != null)
                ViewData["ConfigID"] = UIProperties.Sessions.ConfigEntity.Config_ID;
            else
                ViewData["ConfigID"] = "0";

            if (_configEntity != null)
                return Json(_configEntity, JsonRequestBehavior.AllowGet);
            else return null;
        }

        #region AutoGenerated
        //
        // GET: /DataProfiler/

        public ActionResult Index()
        {
            return View();
        }

        //
        // GET: /DataProfiler/Details/5

        public ActionResult Details(int id)
        {
            return View();
        }

        //
        // GET: /DataProfiler/Create

        public ActionResult Create()
        {
            return View();
        }

        //
        // POST: /DataProfiler/Create

        [HttpPost]
        public ActionResult Create(FormCollection collection)
        {
            try
            {
                // TODO: Add insert logic here

                return RedirectToAction("Index");
            }
            catch
            {
                return View();
            }
        }

        //
        // GET: /DataProfiler/Edit/5

        public ActionResult Edit(int id)
        {
            return View();
        }

        //
        // POST: /DataProfiler/Edit/5

        [HttpPost]
        public ActionResult Edit(int id, FormCollection collection)
        {
            try
            {
                // TODO: Add update logic here

                return RedirectToAction("Index");
            }
            catch
            {
                return View();
            }
        }

        //
        // GET: /DataProfiler/Delete/5

        public ActionResult Delete(int id)
        {
            return View();
        }

        //
        // POST: /DataProfiler/Delete/5

        [HttpPost]
        public ActionResult Delete(int id, FormCollection collection)
        {
            try
            {
                // TODO: Add delete logic here

                return RedirectToAction("Index");
            }
            catch
            {
                return View();
            }
        }

        #endregion
    }
}
