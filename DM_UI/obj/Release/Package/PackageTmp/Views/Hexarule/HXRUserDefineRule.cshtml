@using Resources
@{
    ViewBag.Title = @DM_en_US.TabhdrCreateRule;
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script type="text/javascript">
    $(document).ready(function () {
        var baseUrl = '@Url.Content("~/")';
        $("#progressDiv").hide();

        var client_ID = $("#hdnClientId").val();
        var project_ID = $("#hdnProjectId").val();
        var DatabaseIP = $("#hdnDatabaseIP").val();
        var SourceTarget = $("#hdnSourceTarget").val();
        var DatabaseName = $("#hdnDatabaseName").val();
        var ConfigID = $("#hdnConfigId").val();
        var checked_rules = new Array();

        $("#Save_compl").prop("disabled", true);
        $("#update_compl").prop("disabled", true);


        $.ajax({
            type: "GET",
            url: baseUrl + "api/HXRRuleAPI/GetRuleType",
            dataType: 'json',
            success: function (data) {
                $.each(data, function (index, value) {
                    var RuleType_Name = value.RuleType_Name;
                    var RuleType_ID = value.RuleType_ID;
                    $('#ddlRuletype').append($('<option>').text(RuleType_Name).val(RuleType_ID));
                });
            }
        });



        var ServiceUrl = baseUrl + "api/HXRRuleAPI/MetaDataTable";
        $.ajax({
            type: "GET",
            url: ServiceUrl,
            data: { client_ID: client_ID, project_ID: project_ID, config_ID: ConfigID },
            dataType: 'json',
            success: function (data) {
                $.each(data, function (index, value) {
                    $('#select_table').append($('<option>').text(value).val(value));
                });
                function_tableselect();
            },
            error: function (xhr) {
                alert(xhr.statusText);
            }
        });

        $("#ddlDatatypeFunctions").change(function () {
            var _example = $("#ddlDatatypeFunctions option:selected").attr("example");
            var _selectedCol = $("#selectid1 option:selected").val();
            _example = _example.replace('[column]', '[' + _selectedCol + ']');
            $("#txtDatatypeFunctionEx").val(_example);
        });
        $("#chkFunctions").change(function () {
            if ($("#chkFunctions").is(":checked")) {
                $("#ddlDatatypeFunctions").prop('disabled', false)
                $("#txtDatatypeFunctionEx").prop('disabled', false);
            }
            else {
                $("#ddlDatatypeFunctions").prop('disabled', 'disabled');
                $("#txtDatatypeFunctionEx").prop('disabled', true);
            }
        });

        //Author: 21096 Getting the Error Codes into  List
        $.ajax({
            type: "GET",
            //url: "ErrorDataServlet",
            url: baseUrl + 'api/HXRRuleAPI/GetErrorCode',
            data: { client_ID: client_ID, project_ID: project_ID },
            dataType: 'json',
            success: function (data) {

                $.each(data, function (index, value) {
                    var currentValue = value;
                    //$('#error_code').append($('<option>').text(currentValue.ErrorCode).val(currentValue.ErrorCode));

                    $('#error_code').append($('<option>').text(currentValue.ErrorCode + ' - ' + currentValue.ErrorDesc).val(currentValue.ErrorCode));

                });
                GetErrorDesc($('#error_code').val());
            },
            error: function (xhr) {
                alert(xhr.statusText);
            }
        });

        //Author: 21096 Getting the Rule Category List
        $.ajax({
            type: "GET",
            //  url: "RuleCategoryServlet",
            url: baseUrl + 'api/HXRRuleAPI/GetRuleCategories',
            dataType: 'json',
            success: function (data) {
                $.each(data, function (index, value) {
                    //var str = value.split(':');
                    //$('#select_category').append($('<option>').text(str[1]).val(str[0]));
                    var option = $('<option>');
                    option.val(value.RuleCategory_ID);
                    option.text(value.RuleCategory_Name);
                    $('#select_category').append(option);
                });
            }
        });

        var split_in = new Array();
        //$("#textarea1").keydown(function (event) {
        //    return false;
        //});

        document.onkeydown = function () {
            switch (event.keyCode) {
                case 116: //F5 button
                    event.returnValue = false;
                    event.keyCode = 0;
                    return false;
                case 82: //R button
                    if (event.ctrlKey) {
                        event.returnValue = false;
                        event.keyCode = 0;
                        return false;
                    }
            }
        };
        //Page event load

        //$("#coladd_button").hide();
        /* $("#operator_select").prop('disabled', true); */
        $("#textbox1").prop('disabled', true);
        $("#textbox3").prop('disabled', true);
        $("#textbox2").hide();
        $("#textbox_inlike").hide();

        //$("#selectid1").hide();

        //Update Click event
        $("#update_compl").click(function () {
            var ruleId;
            var ruleDesc;
            var ruleDesc_val;
            var ruleCondition1;
            var myGrid = $('#jqgrid1'),
            selRowId = myGrid.jqGrid('getGridParam', 'selrow');
            var cellName = 'rulecondition';

            ruleId = myGrid.jqGrid('getCell', selRowId, 'ruleid');

            //ruleCondition1 = $("#" + selRowId + "_" + cellName).val();
            //if (ruleCondition1 == undefined || ruleCondition1 == "") {
            //    alert("Please edit the rule condition.");
            //    return;
            //}
            ruleCondition1 = $("#textarea1").val();


            cellName = "ruledesc";
            ruleDesc = myGrid.jqGrid('getCell', selRowId, 'ruledesc');

            //ruleDesc_val = $("#" + selRowId + "_" + cellName).val();
            //if (ruleDesc == undefined || ruleDesc == "") {
            //    alert("Please edit the rule description.");
            //    return;
            //}
            ruleDesc_val = $("#textarea_ruledesc").val();

            var DataSteward = $("#txtDataSteward").val();
            if (DataSteward == undefined || DataSteward == " " || DataSteward == "") {
                alert('Data Steward required.');
                return;
            }

            var category_id = $("#select_category").val();
            var Prioriy = $("#ddlRulePriority").val();
            var error_code = $('#error_code').val();

            $.ajax({
                type: "GET",
                // url: "UpdateRuleServlet",
                url: baseUrl + "api/HXRRuleAPI/UpdateRuleAttribute",
                data: {
                    client_ID: client_ID,
                    project_ID: project_ID,
                    //ruleId: ruleId,
                    attribute_Rule_ID: ruleId,
                    rule_ID: null,
                    ruleType_ID: null,
                    error_Code: error_code,
                    ruleCategory_ID: category_id,
                    column_Name: null,
                    default_value: null,
                    conditional_Clause: ruleCondition1,
                    ruleDesc: ruleDesc_val,
                    priority: Prioriy,
                    last_Modified_By: 'Hexaware',
                    data_steward: DataSteward
                },
                dataType: 'json',
                success: function (data) {
                    window.functionselect("Save_compl");
                    alert("Updated successfully.");
                }
            });

        });

        //Save button click event.
        $("#Save_compl").click(function () {

            $("#validateresponsediv").hide();
            var rule_type_id = $('#select_category').val();
            var feed_type = $("#select_table option:selected").text();
            var textvalue_validate = $("#textarea1").val();
            var rule_desc = $("#textarea_ruledesc").val();
            var error_code = $('#error_code').val();
            var category_id = $("#select_category").val();
            var ruleType_ID = $("#ddlRuletype").val();
            var Prioriy = $("#ddlRulePriority").val();
            var splitcol = $("#selectid1 option:selected").text().split(":");
            splitcol[0] = $.trim(splitcol[0]);
            splitcol[0] = "[" + splitcol[0] + "]";
            var column_val = splitcol[0];

            if ($("#error_code option:selected").val() == '70001') {
                alert('This is can\'t be used as error code');
                return;
            }

            if ($("#hdnfldRuleflag").val() == "N") {
                alert("Please validate the rule by clicking the validate button.");
                return;
            }


            if (textvalue_validate == "") {
                alert("Please create the rule.");
                return;
            }
            if (rule_desc == "") {
                alert("Enter rule description.");
                return;
            }

            var DataSteward = $("#txtDataSteward").val();
            if (DataSteward == undefined || DataSteward == " " || DataSteward == "") {
                alert('Data Steward required.');
                return;
            }


            $("#progressDiv").show();
            //alert("desc length:-- "+rule_desc.length);
            if (rule_desc.length < 300) {

                $.ajax({
                    type: "GET",
                    // url: "UpdateRuleServlet",
                    url: baseUrl + "api/HXRRuleAPI/SaveUserRuleAttribute",
                    data: {
                        client_ID: client_ID,
                        project_ID: project_ID,
                        rule_ID: null,
                        ruleType_ID: ruleType_ID,
                        error_Code: error_code,
                        ruleCategory_ID: category_id,
                        table_name: feed_type,
                        column_Name: column_val,
                        default_value: null,
                        conditional_Clause: textvalue_validate,
                        rule_desc: rule_desc,
                        priority: Prioriy,
                        reference_Table: null,
                        reference_Column: null,
                        reference_Cond: null,
                        last_Modified_By: 'Hexaware',
                        data_steward: DataSteward

                    },
                    dataType: 'json',
                    success: function (data) {
                        if (data == "Rule Attribute saved." || data == "Validation Successful" || data == "Success") {
                            window.functionselect("Save_compl");
                            $("#validateresponsediv").show();
                            $("#validateresponsediv").css("color", "green");
                            $("#validateresponsediv").html(data);
                            $("#textarea_ruledesc").val('');
                            alert("Saved successfully.");
                        }
                        else if (data == "Enter the rule..!!") {
                            alert("Enter the rule..!!");
                        }
                        else {
                            $("#validateresponsediv").show();
                            $("#validateresponsediv").css("color", "red");
                            $("#validateresponsediv").html(data);
                            $("#hdnfldRuleflag").val("N");

                        }
                        $("#progressDiv").hide();
                    },
                    error: function (xhr) {
                        alert(hxr.statusText); $("#progressDiv").hide();
                    }
                });



                //$.get('SavecomplruleServlet', { textval: textvalue_validate, rule_desc: rule_desc, feed_type: feed_type, error_code: error_code, category_id: category_id, column_val: column_val },
                //    function (data) {
                //    if (data == "Rule Attribute saved." || data == "Validation Successful") {
                //        window.functionselect("Save_compl");
                //        $("#validateresponsediv").show();
                //        $("#validateresponsediv").css("color", "green");
                //        $("#validateresponsediv").html(data);
                //        $("#textarea_ruledesc").val('');
                //    }
                //    else if (data == "Enter the rule..!!") {
                //        alert("Enter the rule..!!");
                //    }
                //    else {
                //        $("#validateresponsediv").show();
                //        $("#validateresponsediv").css("color", "red");
                //        $("#validateresponsediv").html(data);
                //    }
                //});
            }
            else
                alert("Rule description can maximum be of 300 characters.");

        });

        //Reset Button click event.

        $("#reset_firstpage").click(function () {

            //if ($("#selectid1").is(":visible")) {
            //    $("#textarea1").val('');
            //    $("#validateresponsediv").hide();
            //    if ($("#textbox1").is(":visible"))
            //        $("#textbox1").val('');

            //    if ($("#textbox_inlike").is(":visible"))
            //        $("#textbox_inlike").val('');

            //    if ($("#textbox2").is(":visible"))
            //        $("#textbox2").val('');

            //    if ($("#textbox3").is(":visible"))
            //        $("#textbox3").val('');
            //    /*  $("#operator_select").prop('disabled', true);
            //     $("#length_select").prop('disabled', true); */
            //}
        });

        //Open brace button click event
        $("#openbrac_button").click(function () {
            var _txtCreateRule = $("#textarea1");
            $("#validateresponsediv").hide();
            var textareaval = $("#textarea1").val();
            if (!$("#textarea1").val()) {
                //$("#textarea1").append("(");
                _txtCreateRule.val(_txtCreateRule.val() + "(");
            }

            else {
                if (textareaval.charAt(textareaval.length - 1) == '(') {
                    //$("#textarea1").append("(");
                    _txtCreateRule.val(_txtCreateRule.val() + "(");
                }
                else
                    //$("#textarea1").append(" " + "(");
                    _txtCreateRule.val(_txtCreateRule.val() + " " + "(");
            }
        });

        //Close Brace button click event
        $("#closedbrac_button").click(function () {
            var _txtCreateRule = $("#textarea1");
            $("#validateresponsediv").hide();
            //  $("#textarea1").append(")");
            _txtCreateRule.val(_txtCreateRule.val() + ")");
        });

        //Add button click event
        $("#and_button").click(function () {
            var _txtCreateRule = $("#textarea1");
            $("#validateresponsediv").hide();

            if (!$("#textarea1").val()) {
                // $("#textarea1").append("AND");
                _txtCreateRule.val(_txtCreateRule.val() + "AND");
            }
            else
                //    $("#textarea1").append(" " + "AND");
                _txtCreateRule.val(_txtCreateRule.val() + " " + "AND");
        });

        //OR Button click event.
        $("#or_button").click(function () {
            var _txtCreateRule = $("#textarea1");
            $("#validateresponsediv").hide();
            if (!$("#textarea1").val()) {
                //$("#textarea1").append("OR");
                _txtCreateRule.val(_txtCreateRule.val() + "OR");
            }
            else
                //$("#textarea1").append(" " + "OR");
                _txtCreateRule.val(_txtCreateRule.val() + " " + "OR");
        });

        //Not button click event.
        $("#not_button").click(function () {
            var _txtCreateRule = $("#textarea1");
            $("#validateresponsediv").hide();

            if (!$("#textarea1").val()) {
                //$("#textarea1").append("NOT");
                _txtCreateRule.val(_txtCreateRule.val() + "NOT");
            }
            else
                //$("#textarea1").append(" " + "NOT");
                _txtCreateRule.val(_txtCreateRule.val() + " " + "NOT");
        });

        //if else addition
        $("#if_button").click(function () {
            $("#validateresponsediv").hide();

            if (!$("#textarea1").val()) {
                $("#textarea1").append("IF");
            }
            else {
                if ($("#textarea1").val().charAt($("#textarea1").val().length - 1) == '(') {
                    $("#textarea1").append("IF");
                } else
                    $("#textarea1").append(" " + "IF");

            }
            $("#ifelsemessage").show();
        });

        //Else button click event
        $("#else_button").click(function () {
            $("#validateresponsediv").hide();
            if (!$("#textarea1").val()) {
                $("#textarea1").append("ELSE");
            }
            else
                $("#textarea1").append(" " + "ELSE");
            $("#ifelsemessage").show();
        });

        //End button click event.
        $("#end_button").click(function () {
            $("#validateresponsediv").hide();

            if (!$("#textarea1").val()) {
                $("#textarea1").append("END");
            }
            else
                $("#textarea1").append(" " + "END");


            $("#ifelsemessage").show();
        });

        //Then button click event.
        $("#then_button").click(function () {
            $("#validateresponsediv").hide();

            if (!$("#textarea1").val()) {
                $("#textarea1").append("THEN");
            }
            else
                $("#textarea1").append(" " + "THEN");


            $("#ifelsemessage").show();
        });

        //Back button click event.
        $("#back_button").click(function () {
            $("#validateresponsediv").hide();
            var textvalue = $("#textarea1").val();
            //$.get('BackspaceServlet', { textval: textvalue }, function (data) {
            var backspaceURL = baseUrl + "api/HXRRuleAPI/BackspaceButtonClick"
            $.get(backspaceURL, { textval: textvalue }, function (data) {
                $("#textarea1").val('');
                $("#textarea1").html(data);
            });
            $("#hdnfldRuleflag").val("N");

        });

        //Validate Button click event.
        $("#validate_compl").click(function () {

            $("#ifelsemessage").hide();
            var textvalue_validate = $("#textarea1").val();
            var feed_type = $("#select_table option:selected").text();





            if (textvalue_validate == undefined || textvalue_validate == "") {
                alert("Please create the rule.");
                return;
            }
            var DataSteward = $("#txtDataSteward").val();
            if (DataSteward == undefined || DataSteward == " " || DataSteward == "") {
                alert('Data Steward required.');
                return;
            }
            //if (rule_desc == "") {
            //    alert("Enter rule description.");
            //    return;
            //}
            $("#progressDiv").show();
            $.ajax({
                type: "GET",
                // url: "UpdateRuleServlet",
                url: baseUrl + "api/HXRRuleAPI/GetUserDefineRuleValidation",
                data: {
                    client_ID: client_ID,
                    project_ID: project_ID,
                    TableName: feed_type,
                    Query: textvalue_validate
                },
                dataType: 'json',
                success: function (data) {
                    $("#validateresponsediv").html(data);

                    if (data == "Validation Successful") {
                        // debugger;
                        var _myGrid = $('#jqgrid1');
                        var selRowId = _myGrid.jqGrid('getGridParam', 'selrow');
                        if (selRowId != null) {
                            $("#Save_compl").prop("disabled", true);
                            $("#update_compl").prop("disabled", false);
                        }
                        else {
                            $("#Save_compl").prop("disabled", false);
                            $("#update_compl").prop("disabled", true);
                        }
                        alert(data);
                        //$("#validateresponsediv").show();
                        //$("#validateresponsediv").css("color", "green");

                        //$("#validateresponsediv").html(data);
                        $("#hdnfldRuleflag").val("Y");

                    }
                    else if (data == "Enter the rule..!!") {
                        alert("Enter the rule..!!");
                        $("#hdnfldRuleflag").val("N");
                        $("#Save_compl").prop("disabled", true);
                        $("#update_compl").prop("disabled", true);
                    }
                    else {

                        //$("#validateresponsediv").show();
                        //$("#validateresponsediv").css("color", "red");

                        //$("#validateresponsediv").html(data);
                        $("#Save_compl").prop("disabled", true);
                        $("#update_compl").prop("disabled", true);
                        alert(data);
                        $("#hdnfldRuleflag").val("N");

                    } $("#progressDiv").hide();
                },
                error: function (xhr) {
                    alert(hxr.statusText); $("#progressDiv").hide();
                }
            });

            //$.get('ValidatecomplServlet', { textval: textvalue_validate, feed_type: feed_type }, function (data) {

            //    $("#validateresponsediv").html(data);

            //    if (data == "Validation Successful") {

            //        $("#validateresponsediv").show();
            //        $("#validateresponsediv").css("color", "green");

            //        $("#validateresponsediv").html(data);


            //    }
            //    else if (data == "Enter the rule..!!") {
            //        alert("Enter the rule..!!");
            //    }
            //    else {

            //        $("#validateresponsediv").show();
            //        $("#validateresponsediv").css("color", "red");

            //        $("#validateresponsediv").html(data);

            //    }

            //});

        });

        //Col Add button click event.
        $("#coladd_button").click(function () {

            var splitcol = $("#selectid1 option:selected").text().split(":");

            splitcol[0] = $.trim(splitcol[0]);
            splitcol[0] = "[" + splitcol[0] + "]";

            var textareaval = $("#textarea1").val();

            if (splitcol[0] == "[No Column found]") {

            }
            else if (textareaval.charAt(textareaval.length - 1) == '(') {

                $("#textarea1").append(splitcol[0]);
            }//
            else {

                if ($("#textarea1").val()) {
                    $("#textarea1").append(" " + splitcol[0]);
                }
                else
                    $("#textarea1").append(splitcol[0]);

            }
            //
        });


        //$("#textbox1").keypress(function (event) {
        //    var keycode = (event.keyCode ? event.keyCode : event.which);
        //    if (keycode == '13') {                //alert('You pressed a "enter" key in textbox');
        //    }
        //    //event.stopPropagation();
        //});
        //$("#textbox2").keypress(function (event) {
        //    var keycode = (event.keyCode ? event.keyCode : event.which);
        //    if (keycode == '13') {


        //    }
        //});


        //$("#textbox3").keypress(function (event) {
        //    var keycode = (event.keyCode ? event.keyCode : event.which);
        //    if (keycode == '13') { }
        //});
        //$("#textbox_inlike").keypress(function (event) {
        //    var keycode = (event.keyCode ? event.keyCode : event.which);
        //    if (keycode == '13') {
        //    }
        //});

        $("#btnAddRule").click(function () {
            var _txtCreateRule = $("#textarea1");

            var splitcol = $("#selectid1 option:selected").text().split(":");
            splitcol[0] = $.trim(splitcol[0]);
            splitcol[0] = "[" + splitcol[0] + "]";
            var column_val = splitcol[0];

            // var splitcol = $("#selectid1 option:selected").text().split(":");
            //  splitcol[0] = $.trim(splitcol[0]);
            // splitcol[0] = "[" + splitcol[0] + "]";
            //var column_val = splitcol[0];

            // var splitcol = $("#selectid1 option:selected").text().split(":");
            // splitcol[0] = $.trim(splitcol[0]);
            // splitcol[0] = "[" + splitcol[0] + "]";
            // var column_val = splitcol[0];

            if ($("#chkFunctions").is(":checked")) {
                var _fnc = $("#txtDatatypeFunctionEx").val();
                column_val = _fnc;
                //   _txtCreateRule.append(" " + _fnc + " ");
            }

            if ($("#operator_select option:selected").text() == "BETWEEN") {
                $("#validateresponsediv").hide();
                //$("#textarea1").val('');
                var textbox2_val = $("#textbox2").val();



                var operator = $("#operator_select option:selected").text();
                var textbox1_val = $("#textbox1").val();
                var textareaval = $("#textarea1").val();

                if (textareaval.charAt(textareaval.length - 1) == '(') {
                    //$("#textarea1").append(column_val + " " + operator + " " + textbox1_val + " " + "AND" + " " + textbox2_val);
                    _txtCreateRule.val(_txtCreateRule.val() + column_val + " " + operator + " " + textbox1_val + " " + "AND" + " " + textbox2_val);
                }
                else {
                    if ($("#textarea1").val()) {
                        //$("#textarea1").append(" " + column_val + " " + operator + " " + textbox1_val + " " + "AND" + " " + textbox2_val);
                        _txtCreateRule.val(_txtCreateRule.val() + " " + column_val + " " + operator + " " + textbox1_val + " " + "AND" + " " + textbox2_val);
                    }
                    else {
                        //$("#textarea1").append(column_val + " " + operator + " " + textbox1_val + " " + "AND" + " " + textbox2_val);
                        _txtCreateRule.val(_txtCreateRule.val() + column_val + " " + operator + " " + textbox1_val + " " + "AND" + " " + textbox2_val);
                    }
                }
            }
            else if ($("#operator_select option:selected").text() == "IN"
                || $("#operator_select option:selected").text() == "LIKE"
                || $("#operator_select option:selected").text() == "NOT IN"
                || $("#operator_select option:selected").text() == "NOT LIKE") {

                $("#validateresponsediv").hide();
                var textbox_like = $("#textbox_inlike").val();



                var operator = $("#operator_select option:selected").text();
                if (operator == "IN" || operator == "NOT IN") {
                    var final_intext = "";
                    split_in = textbox_like.split(",");

                    for (i = 0; i < split_in.length; i++) {
                        //final_intext += "'" + split_in[i] + "'" + ",";
                        if (split_in[i].substring(0, 1) == '\'') {
                            final_intext += split_in[i] + ",";
                        }
                        else
                            final_intext += "'" + split_in[i] + "'" + ",";
                    }
                    final_intext = final_intext.substring(0, final_intext.length - 1);

                    final_intext = "(" + final_intext + ")";
                    textbox_like = final_intext;
                    //
                }
                var textareaval = $("#textarea1").val();
                if (textareaval.charAt(textareaval.length - 1) == '(') {
                    //$("#textarea1").append(column_val + " " + operator + " " + textbox_like);
                    _txtCreateRule.val(_txtCreateRule.val() + column_val + " " + operator + " " + textbox_like);
                }
                else {
                    if ($("#textarea1").val()) {
                        // $("#textarea1").append(" " + column_val + " " + operator + " " + textbox_like);
                        _txtCreateRule.val(_txtCreateRule.val() + " " + column_val + " " + operator + " " + textbox_like);
                    }
                    else {
                        //$("#textarea1").append(column_val + " " + operator + " " + textbox_like);
                        _txtCreateRule.val(_txtCreateRule.val() + column_val + " " + operator + " " + textbox_like);
                    }
                }


            }
            else {
                $("#validateresponsediv").hide();
                //	$("#textarea1").val('');
                //alert($("#selectid1 option:selected").text());



                var operator = $("#operator_select option:selected").text();
                var textbox1_val = $("#textbox1").val();

                if (textbox1_val == undefined || textbox1_val == null || textbox1_val == "") {
                    alert('Enter the value!');
                    return;
                }

                if (textbox1_val.indexOf("'") === -1) {
                    if (isNaN(textbox1_val)) {
                        textbox1_val = "[" + textbox1_val + "]";
                    }
                }
                var textareaval = $("#textarea1").val();

                if (textareaval.charAt(textareaval.length - 1) == '(') {
                    //$("#textarea1").append(column_val + " " + operator + " " + textbox1_val);
                    _txtCreateRule.val(_txtCreateRule.val() + column_val + " " + operator + " " + textbox1_val);
                }
                else {
                    if ($("#textarea1").val()) {
                        //alert("value there");

                        //$("#textarea1").append(" " + column_val + " " + operator + " " + textbox1_val);
                        _txtCreateRule.val(_txtCreateRule.val() + " " + column_val + " " + operator + " " + textbox1_val);

                    }
                    else {
                        //alert("no value ..");
                        //$("#textarea1").append(column_val + " " + operator + " " + textbox1_val);
                        _txtCreateRule.val(_txtCreateRule.val() + column_val + " " + operator + " " + textbox1_val);
                    }
                }
            }
        });

        $("#ddlRuletype").change(function () {
            functionselect(null);
        });
    });
    function function_tableselect() {
        var client_ID = $("#hdnClientId").val();
        var project_ID = $("#hdnProjectId").val();
        var DatabaseIP = $("#hdnDatabaseIP").val();
        var SourceTarget = $("#hdnSourceTarget").val();
        var DatabaseName = $("#hdnDatabaseName").val();
        var ConfigID = $("#hdnConfigId").val();
        $("#textbox1").prop('disabled', false);
        $("#textbox3").prop('disabled', false);
        var selected = $("#select_table option:selected").text();
        var baseUrl = '@Url.Content("~/")';

        //alert("selected table:" + selected);
        $.ajax({
            type: "GET",
            url: baseUrl + 'api/HXRRuleAPI/GetMetaDataColumnByTableName',
            data: { client_ID: client_ID, project_ID: project_ID, database_IP: DatabaseIP, source_Target: SourceTarget, database_Name: DatabaseName, Config_Id: ConfigID, Table_Name: selected },
            dataType: 'json',
            success: function (data) {
                if (data.length != 0) {
                    var optionsValues = '<select id="selectid1" class="dropdown" style="width: 100%;" onChange="functionselect(' + this.id + ')" >';

                    $.each(data, function (index, item) {
                        var tooltipval = item.split(":");
                        optionsValues += '<option value="' + tooltipval[0] + '" Datatype ="' + tooltipval[1] + '"   title="' + tooltipval[0] + '">' + tooltipval[0] + '</option>';
                    });
                    optionsValues += '</select>';
                    var options = $('#selectid1');

                    options.replaceWith(optionsValues);
                    //  $("#labelcol").text(selected + ": ");
                    $("#selectid1").show();
                } else {
                    var optionsValues = '<select id="selectid1" onChange="functionselect(' + this.id + ')" class="dropdown">';
                    optionsValues += '<option value="No Column found" >' + "No Column found" + '</option>';
                    optionsValues += '</select>';
                    var options = $('#selectid1');
                    options.replaceWith(optionsValues);
                    // $("#labelcol").text(selected + ": ");
                    $("#selectid1").show();
                }
                functionselect('Save_compl');
            }

        });



        //$.getJSON('BuilderServlet', { table_name: selected }, function (data) {
        //    if (data.length != 0) {
        //        var optionsValues = '<select id="selectid1" onChange="functionselect(' + this.id + ')" class="sclass">';

        //        $.each(data, function (index, item) {
        //            var tooltipval = item.split(":");
        //            optionsValues += '<option value="' + tooltipval[0] + '" title="' + tooltipval[1] + '">' + tooltipval[0] + '</option>';
        //        });
        //        optionsValues += '</select>';
        //        var options = $('#selectid1');

        //        options.replaceWith(optionsValues);
        //        $("#labelcol").text(selected + ": ");
        //        $("#selectid1").show();
        //        $("#coladd_button").show();
        //    } else {
        //        var optionsValues = '<select id="selectid1" onChange="functionselect(' + this.id + ')" class="sclass">';
        //        optionsValues += '<option value="No Column found" >' + "No Column found" + '</option>';
        //        optionsValues += '</select>';
        //        var options = $('#selectid1');
        //        options.replaceWith(optionsValues);
        //        $("#labelcol").text(selected + ": ");
        //        $("#selectid1").show();
        //        $("#coladd_button").show();
        //    }

        //});


    }


    function function_categoryselect() {


        /* var colName=$("#select_category").val();
        var error_code=$('#error_code').val();
        $.get('SavecomplruleServlet',{colName:colName},
                function(data){
                alert(data);
        }); */

    }
    function fun_appendlength() {
        $("#validateresponsediv").hide();
        if ($("#textbox3").val()) {
            $("#textarea1").val('');
            var splitcol = $("#selectid1 option:selected").text().split(":");

            splitcol[0] = $.trim(splitcol[0]);
            splitcol[0] = "[" + splitcol[0] + "]";
            var columnselect = splitcol[0];
            var lnoperselect = $("#length_select option:selected").text();
            var lentext = $("#textbox3").val();
            var textareaval = $("#textarea1").val();

            if (textareaval.charAt(textareaval.length - 1) == '(') {
                $("#textarea1").append("len(");
                $("#textarea1").append(columnselect);
                $("#textarea1").append(")");
                $("#textarea1").append(" ");
                $("#textarea1").append(lnoperselect);
                $("#textarea1").append(" ");
                $("#textarea1").append(lentext);
            }
            else {
                if ($("#textarea1").val()) {
                    $("#textarea1").append(" ");
                    $("#textarea1").append("len(");
                    $("#textarea1").append(columnselect);
                    $("#textarea1").append(")");
                    $("#textarea1").append(" ");
                    $("#textarea1").append(lnoperselect);
                    $("#textarea1").append(" ");
                    $("#textarea1").append(lentext);
                }
                else {
                    $("#textarea1").append("len(");
                    $("#textarea1").append(columnselect);
                    $("#textarea1").append(")");
                    $("#textarea1").append(" ");
                    $("#textarea1").append(lnoperselect);
                    $("#textarea1").append(" ");
                    $("#textarea1").append(lentext);
                }
            }
        }
        else
            alert("empty textbox..!!");

    }

    function SetHelpText() {
        var AlphanumericHelp = "Please enter character string values in the textbox within single quote. Example: Name = 'Jack'";
        var NumericHelp = "Please enter numeric values in the textbox. Example: Salary = 5000. Note don't include quotes.";
        var DateHelp = "Please enter date in the textbox using yyyy/mm/dd format. Example: DOB: 2015/01/07";

        var DataType = $("#txtDataType").val();
        var imgHelp = $("#imgHelp");
        DataType = DataType.toUpperCase();
        switch (DataType) {
            case "VARCHAR":
            case "NVARCHAR":
            case "CHAR":
                imgHelp.attr('title', AlphanumericHelp);
                break;
            case "INT":
            case "BIGINT":
            case "SMALLINT":
            case "FLOAT":
                imgHelp.attr('title', NumericHelp);
                break;
            case "DATETIME":
                imgHelp.attr('title', DateHelp);
                break;
            default:
                imgHelp.attr('title', 'Help not available');
                break;
        }
    }

    function DataTypeFunctions(dataType) {
        var _baseUrl = '@Url.Content("~/")';
        var client_ID = $("#hdnClientId").val();
        var project_ID = $("#hdnProjectId").val();
        var _ServiceUrl = _baseUrl + "api/HXRRuleAPI/GetFunctionByDataType";
        var _ddlDatatypeFunctions = $("#ddlDatatypeFunctions");
        var Option = $('<option>');
        $.ajax({
            type: "GET",
            url: _ServiceUrl,
            data: { client_ID: client_ID, project_ID: project_ID, DataType: dataType },
            dataType: 'json',
            success: function (data) {
                if (data != null && data.length > 0) {
                    $('#ddlDatatypeFunctions option').remove();
                    $.each(data, function (index, value) {
                        var Option = $('<option>');
                        Option.attr('example', value.Function_Sample);
                        _ddlDatatypeFunctions.append(Option.
                            text(value.Function_Syntax).val(value.Function_ID));
                    });
                    $("#ddlDatatypeFunctions").change();
                    $('#divFunctions').attr("style", "display:block;");
                    if ($("#chkFunctions").is(":checked")) {
                        $("#ddlDatatypeFunctions").prop('disabled', false)
                        $("#txtDatatypeFunctionEx").prop('disabled', false);
                    }
                    else {
                        $("#ddlDatatypeFunctions").prop('disabled', 'disabled');
                        $("#txtDatatypeFunctionEx").prop('disabled', true);
                    }
                }
                else {
                    $('#divFunctions').attr("style", "display:none;");
                    $('#ddlDatatypeFunctions option').remove();
                    $('#txtDatatypeFunctionEx').val('');

                }
            },
            error: function (xhr) {
                alert(xhr.statusText);
            }
        });
    }

    function functionselect(save_buttonid) {

        //if (save_buttonid != "Save_compl") {
        //    window.resizeTo(950, 650);
        //}
        var datatype = $("#selectid1 option:selected").attr("datatype");
        $("#txtDataType").val(datatype);
        DataTypeFunctions(datatype);
        $("#textbox_inlike").val('');
        $("#textbox1").val('');
        $("#textbox2").val('');
        $("#validateresponsediv").hide();
        var lastsel;
        var baseUrl = '@Url.Content("~/")';

        $(function () {
            var ServiceUrl = baseUrl + "api/HXRRuleAPI/GetUserRuleAttributes";
            var client_ID = $("#hdnClientId").val();
            var project_ID = $("#hdnProjectId").val();
            var Rule_TypeID = $("#ddlRuletype").val();;
            var splitcol = $("#selectid1 option:selected").text().split(":");
            splitcol[0] = $.trim(splitcol[0]);
            splitcol[0] = "[" + splitcol[0] + "]";
            var column_val = splitcol[0];
            // alert("column is:" + column_val);
            var feed_type = $("#select_table option:selected").text();
            var gwdth = $("#grddiv").width();
            $("#jqgrid1").GridUnload();
            $grid = jQuery("#jqgrid1").jqGrid({
                postData: { client_ID: client_ID, project_ID: project_ID, Table_Name: feed_type, Column_Name: splitcol[0], Rule_TypeID: Rule_TypeID },
                mytype: 'POST',
                datatype: 'json',
                //url: 'TableviewServlet',
                url: ServiceUrl,
                height: 100,
                width: 900,
                autowidth: true,
                shrinkToFit: true,
                reloadAfterSubmit: true,
                rowNum: 10,
                rowList: [10, 20, 30],
                sortname: 'ruleid',
                colNames: ['RuleattrId', 'Table Name', 'Column Name', '@DM_en_US.lblRuleType', '@DM_en_US.lblRuleCategory', 'Priority', 'Rule', 'Rule Description',
                    'Rule Condition', 'Error Desc','Data Steward'],
                colModel: [
                { key: true, name: 'ruleid', index: 'ruleid', width: 100, hidden: true },
                { name: 'tablename', index: 'tablename', width: 100 },
                { name: 'columnname', index: 'columnname', width: 100 },
                { name: 'ruletype', index: 'ruletype', width: 100 },
                { name: 'rulecategory', index: 'rulecategory', width: 100 },
                { name: 'Priority', index: 'Priority', width: 100 },
                { name: 'rule', index: 'rule', width: 100 },
                { name: 'ruledesc', index: 'ruledesc', width: 100, editable: true, hidden: true },
                { name: 'rulecondition', index: 'rulecondition', width: 100, editable: true },
                { name: 'errordesc', index: 'errordesc', width: 100 },
                { name: 'Data_Steward', index: 'Data_Steward', hidden: true }],
                pager: '#pager2',
                scrollOffset: 0,
                viewrecords: true,
                viewsortcols: true,
                loadonce: true,
                gridview: true,
                sortorder: 'asc',
                //reloadAfterSubmit:true,
                //showButtonPanel:true,
                onSelectRow: function (rowId) {
                    var rowData = $('#jqgrid1').jqGrid('getRowData', rowId);
                    var _rule_Category = rowData.rulecategory;
                    var _rule_condition = rowData.rulecondition.replace("b.", "");

                    var _rule_desc = rowData.rule;
                    var _error_desc = rowData.errordesc;
                    var _priority = rowData.Priority;
                    var _DataSteward = rowData.Data_Steward;

                    $("#textarea1").val(_rule_condition);
                    $("#textarea_ruledesc").val(_rule_desc);
                    $("#txtDataSteward").val(_DataSteward);


                    $("#error_code option").filter(function () {
                        return this.text.split('-')[1].trim() == _error_desc;
                    }).attr('selected', true);

                    $("#select_category option").filter(function () {
                        return this.text == _rule_Category;
                    }).attr('selected', true);

                    $("#ddlRulePriority option").filter(function () {
                        return this.text == _priority;
                    }).attr('selected', true);



                    //if (rowId && rowId !== lastsel) {
                    //    jQuery('#jqgrid1').jqGrid('restoreRow', lastsel);
                    //    jQuery('#jqgrid1').jqGrid('editRow', rowId, true);
                    //    lastsel = rowId;
                    //}
                    //if (!$("#textarea1").text())
                    //    $("#textarea1").append(rowData.rule);

                    //else {
                    //    var textareaval = $("#textarea1").val();
                    //    if (textareaval.charAt(textareaval.length - 1) == '(') {

                    //        $("#textarea1").append(rowData.rule);
                    //    }
                    //    else
                    //        $("#textarea1").append(" " + rowData.rule);
                    //}
                    $("#Save_compl").prop("disabled", true);
                    $("#update_compl").prop("disabled", true);



                },
                gridComplete: function () {
                    var recs = $('#jqgrid1').jqGrid('getGridParam', 'reccount');
                    if (recs == 0) {
                        $("#jqgrid1").hide();
                    }
                },
                loadComplete: function () {

                },
                editurl: "UpdateRuleServlet",
                caption: 'Rules'
            });

            jQuery("#jqgrid1").jqGrid('navGrid', '#pager2', { edit: false, add: false, del: false, search: false, refresh: false });
            jQuery("#jqgrid1").jqGrid('sortableRows');
        });
        //$("#textarea1").val('');
        //$("#textarea_ruledesc").val('');
        $("#operator_select").val('=');
        SetHelpText();
    }
    function fun_operator_select() {
        $("#validateresponsediv").hide();
        $("#textbox2").hide();
        $("#textbox_inlike").hide();
        if ($("#operator_select option:selected").text() == "BETWEEN") {
            $("#textbox2").show();
        }
        else if ($("#operator_select option:selected").text() == "IN" || $("#operator_select option:selected").text() == "LIKE" || $("#operator_select option:selected").text() == "NOT IN" || $("#operator_select option:selected").text() == "NOT LIKE") {
            $("#textbox_inlike").show();
            $("#textbox1").hide();
        }
        else
            $("#textbox1").show();


    }

    function GetErrorDesc(ErrorID) {
        // alert(ErrorID);
        var client_ID = $("#hdnClientId").val();
        var project_ID = $("#hdnProjectId").val();
        var baseUrl = '@Url.Content("~/")';

        $.ajax({
            type: "GET",
            //url: "ErrorDescriptionServlet",
            //data: { "ErrorID": ErrorID },
            url: baseUrl + 'api/HXRRuleAPI/GetErrorDescByErrorCode',
            data: { client_ID: client_ID, project_ID: project_ID, ErrorCode: ErrorID },
            dataType: 'json',
            success: function (data) {
                ErrorDesc = data;
                $('#errordesc').val(data);
            }
        });
        //$("#error_code").val(ErrorID);

    }
    function errorCodes(id) {
        if ($("#textarea_ruledesc").val() == '') {
            $("#textarea_ruledesc").focus();
            alert("Enter rule description.");
            return;
        }
        //GetErrorDesc(id.value);
        //var ErrorDesc = $('#errordesc').val();
        //$('#error_code option:contains("' + ErrorDesc + '")').text(ErrorID);
    }
    function tablecheck_checked(rule, id) {
        $("#validateresponsediv").hide();
        checked_rules.push(id);


        if ($("#" + id).is(':checked')) {

            if (!$("#textarea1").val())
                $("#textarea1").append(rule);

            else
                $("#textarea1").append(" " + rule);

        }
        else if (!($("#" + id).is(':checked'))) {
            $("#textarea1").val('');
            jQuery.each(checked_rules, function (index, item) {
                $("#" + checked_rules[index]).prop('checked', false);

            });

        }

    }
</script>
<div class="content-body">
    <div style="width:98%;margin:auto;">
        <div class="group">
            <div class="form-group width-per-100 fL">
                <div class="col-40" style="width: 20%;">
                    <span class="control-label">@DM_en_US.lblSelectTable</span>
                    <select id="select_table" class="dropdown" style="width:100%;" onchange="function_tableselect()"></select>
                </div>
                <div class="col-40" style="width: 20%;">
                    <span class="control-label" id="labelcol">@DM_en_US.lblSelectColumn</span>
                    <select id="selectid1" class="dropdown" style="width: 100%;"></select>
                </div>
                <div class="col-40" style="width: 20%;">
                    <span class="control-label" id="labelcol">@DM_en_US.lblRuleType</span>
                    <select id="ddlRuletype" class="dropdown" style="width: 100%;"></select>
                </div>
                <div class="col-10">
                    <span class="control-label">@DM_en_US.lblDataType</span>
                    <input type="text" class="textbox" id="txtDataType" disabled="disabled" />
                </div>
                <div class="col-40" style="width: 20%;">
                    <span class="control-label" id="labelcol">@DM_en_US.lblRulePriority</span>
                    <select id="ddlRulePriority" class="dropdown" style="width: 100%;">
                        <option value="E">Error</option>
                        <option value="W" selected>Warning</option>
                        <option value="R">Report</option>
                    </select>
                </div>
                @*<div class="col-10 pad-lft20" style="padding-top: 26px;">
                        <input class="form-button" type="button" value="Add column to textarea" id="coladd_button">
                    </div>*@
            </div>
        </div>
        <div class="group">
            <div class="div-header">
                <span class="control-label label-bold">@DM_en_US.hdrRuleCreation</span>
            </div>
            <div class="form-group width-per-100 fL">
                <div class="col-40" style="width: 22%; padding-right: 12px;">
                    <span id="category" class="control-label">@DM_en_US.lblRuleCategory</span>
                    <select id="select_category" class="dropdown" onchange="function_categoryselect()" style="width:100%;"></select>
                </div>
                <div id="divFunctions" class="col-100">
                    <div class="col-40" style="width: 35%;">
                        <input type="checkbox" id="chkFunctions" /> <span class="control-label">@DM_en_US.lblIncludeFunctions</span>
                        <select id="ddlDatatypeFunctions" class="dropdown" style="width:100%;"></select>
                    </div>
                    <div class="col-40" style="width: 30%;">
                        <span class="control-label">@DM_en_US.lblExample</span>
                        <input id="txtDatatypeFunctionEx" class="form-control" />
                    </div>
                </div>
            </div>
            <div class="form-group width-per-100">
                <input type="text" name="val" value="Value" id="cond_valradio" class="form-control" style="width: 10%;" />
                <select id="operator_select" onclick="fun_operator_select()" class="dropdown" style="width: 10%;">
                    <option label="=">=</option>
                    <option label="!=">!=</option>
                    <option label="&lt">&lt</option>
                    <option label="&gt">&gt</option>
                    <option label="&lt=">&lt=</option>
                    <option label="&gt=">&gt=</option>
                    <option label="BETWEEN">BETWEEN</option>
                    <option label="IN">IN</option>
                    <option label="NOT IN">NOT IN</option>
                    <option label="LIKE">LIKE</option>
                    <option label="NOT LIKE">NOT LIKE</option>
                </select>
                <input type="text" name=valuetext id="textbox_inlike" class="form-control" style="width: 10%;" />&nbsp;
                <input type="text" name=valuetext id="textbox1" class="form-control" style="width: 10%;" />&nbsp;
                <input type="text" name=valuetext id="textbox2" class="form-control" style="width: 10%;" />
                <img src="~/Images/help.png" id="imgHelp" alt="img" />
                @*<div class="col-10 pad-lft20" style="padding-top: 26px;">*@<input class="form-button" type="button" value="Add" id="btnAddRule" />
                @*</div>*@
            </div>
            <div class="form-group width-per-100">
                <input class="form-button" type="button" value="(" id="openbrac_button">
                <input class="form-button" type="button" value=")" id="closedbrac_button">
                <input class="form-button" type="button" value="AND" id="and_button">
                <input class="form-button" type="button" value="OR" id="or_button">
                <input class="form-button" type="button" value="NOT" id="not_button">
                <input class="form-button" type="button" value="IF" id="if_button">
                <input class="form-button" type="button" value="THEN" id="then_button">
                <input class="form-button" type="button" value="ELSE" id="else_button">
                <input class="form-button" type="button" value="END" id="end_button">
                <input class="form-button" type="button" value="&lt-Backspace" id="back_button">
            </div>
        </div>
        @*<div class="group">
                <div class="form-group">
                    <div id="validateresponsediv" align='center' class='divclass'>
                    </div>
                </div>
            </div>*@
        <div class="group">
            @*User Defined Rule text area to display user entered rule*@
            <div class="form-group">
                <div class="col-40">
                    <span id="rule_formed" class="control-label">Created Rules</span>
                    <textarea id="textarea1" rows="3" cols="50" class="form-control"></textarea>
                </div>
                <div class="col-40">
                    <span id="rule_formed" class="control-label">Rule description</span>
                    <textarea id="textarea_ruledesc" rows="3" cols="50" class="form-control"></textarea>
                </div>
            </div>
        </div>
        @*Error Code And Error Description Functionality*@
        <div class="group">
            <div class="form-group width-per-100">
                <div class="col-40">
                    <span id="errorcode" class="control-label">Error Code</span>
                    <select id="error_code" name="error_code" class="dropdown" onchange="errorCodes(this)" style="width: 97%;"></select>
                </div>
                <div class="col-40" style="width: 31%; padding-right: 25px; ">
                    <label class="control-label">Data Steward</label>
                    <input id="txtDataSteward" type="text" class="form-control" />
                </div>
                <div class="col-40" style="padding-top: 27px;width:10%;">
                    <input class="form-button" type="button" value="Validate" id="validate_compl" />
                </div>
                <div class="col-40" style="display:none;">
                    <span class="control-label">Error Description</span>
                    <input type="text" id="errordesc" name="errordesc" class="form-control" style="width: 79%;" />
                </div>
            </div>
        </div>
        @*Displaying Existing Rules Table*@
        <div class="group">
            <div id="grddiv" class="form-group width-per-100">
                <table id="jqgrid1" class="width-per-100" align='center'></table>
                <div id="pager2" class="scroll"></div>
            </div>
        </div>
        @*All buttons displaying code*@
        <div class="group">
            <div class="form-group text-align-center form-group-btn width-per-100">
                <input class="form-button" type="button" value="Update" id="update_compl">
                <input class="form-button" type="button" value="Save" id="Save_compl">
                @*<input class="form-button" type="button" value="Reset" id="reset_firstpage">*@
                <a class="form-button" style="text-decoration:none;" href="Hexarule/HXRUserDefine">Reset</a>
                @Html.ActionLink("Reset", "HXRUserDefine", "Hexarule", new { @class = "form-button", @style = "text-decoration:none;" })
            </div>
        </div>
        <div class="group">
            <div class="form-load-img text-align-center width-per-100" id="progressDiv">
                <img src="~/Images/load5.gif" />
            </div>
        </div>
    </div>
</div>
<input type="hidden" value="@ViewData["ClientID"]" id="hdnClientId" />
<input type="hidden" value="@ViewData["ProjectID"]" id="hdnProjectId" />
<input type="hidden" value="@ViewData["DatabaseIP"]" id="hdnDatabaseIP" />
<input type="hidden" value="@ViewData["SourceTarget"]" id="hdnSourceTarget" />
<input type="hidden" value="@ViewData["DatabaseName"]" id="hdnDatabaseName" />
<input type="hidden" value="@ViewData["ConfigID"]" id="hdnConfigId" />
<input type="hidden" value="N" id="hdnfldRuleflag" />