@model DM_UI.Models.RuleModel

@{
    ViewBag.Title = "Rule";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var message = TempData["AlertMsg"] ?? string.Empty;
    var _command = TempData["Command"] ?? string.Empty;

}
<script lang="ja" type="text/javascript">
    $(document).ready(function () {
        var ClientId = $("#hdnClientId").val();
        var ProjectId = $("#hdnProjectId").val();

        var baseUrl = '@Url.Content("~/")';
        var ServiceUrl = baseUrl + "api/HXRRuleAPI/GetAllRules";
        $("#grdRule").GridUnload();
        $grid = jQuery("#grdRule").jqGrid({
            postData: { client_ID: ClientId, project_ID: ProjectId },
            mytype: 'GET',
            datatype: 'json',
            url: ServiceUrl,
            editurl: baseUrl + 'Hexarule/RuleUpdate',
            jsonReader: { id: "RuleId" },
            prmNames: { id: "RuleId" },
            height: 250,
            width: 1077,
            reloadAfterSubmit: true,
            rowNum: 10,
            rowList: [10, 20, 30],
            sortname: 'Rulename',
            colNames: ['RuleId', 'ClientId', 'ProjectId', 'Rule name', 'Conditional clause', 'Default value'],
            colModel: [
            { key: true, hidden: true, name: 'RuleId', index: 'RuleId' },
            { key: true, hidden: true, name: 'ClientId', index: 'ClientId' },
            { key: true, hidden: true, name: 'ProjectId', index: 'ProjectId' },
            { key: false, name: 'Rulename', index: 'Rulename', editable: true, width: 40, editrules: { required: true } },
            { key: false, name: 'conditionalclause', index: 'conditionalclause', editable: true, width: 40, editrules: { required: true } },
            { key: false, name: 'Defaultvalue', index: 'Defaultvalue', editable: true, width: 20, editrules: { required: true } }
            ],
            pager: '#pager1',
            scrollOffset: 0,
            viewrecords: true,
            viewsortcols: true,
            loadonce: true,
            gridview: true,
            sortorder: 'asc',
            reloadAfterSubmit: true,
            caption: 'Rules',
            loadComplete: function () {
               // jQuery('#grdRule').jqGrid('setSelection', '95');

            }
        });

        jQuery("#grdRule").jqGrid('navGrid', '#pager1', {
            edit: true, add: false, del: true, search: false, refresh: false,
            edittext: 'Edit',
            deltext: 'Delete',
            editfunc: function (rowid) {
                var _Rule_Name = $("#Rule_Name");
                var _Conditional_Clause = $("#Conditional_Clause");
                var _Default_value = $("#Default_value");

                _Rule_Name.val($.trim($grid.jqGrid('getCell', rowid, 'Rulename')));
                _Conditional_Clause.val($.trim($grid.jqGrid('getCell', rowid, 'conditionalclause')));
                _Default_value.val($.trim($grid.jqGrid('getCell', rowid, 'Defaultvalue')));

                $("#btnSave").val('Update');
                $("#btnClear").val('Cancel');
                $("#hdnRuleId").val(rowid);
                _Rule_Name.focus();
            }
        },
            {
                closeOnEscape: true,
                closeAfterEdit: true,
                afterComplete: function (response) {
                    if (response.responseText) {
                        alert(response.responseText);
                    }
                },
                afterSubmit: function () {
                    $(this).jqGrid("setGridParam", { datatype: 'json' });
                    return [true];
                }
            },
            {
                closeOnEscape: true,
                closeAfterEdit: true,
                afterComplete: function (response) {

                    if (response.responseText) {
                        alert(response.responseText);
                    }
                }
            },
            {
                closeOnEscape: true,
                closeAfterEdit: true,
                recreateForm: true,
                afterComplete: function (response) {
                    if (response.responseText) {
                        //alert(response.responseText);
                        if (response.responseText == 'Deleted successfully.')
                            ShowMessage(response.responseText, 'success');
                        else ShowMessage(response.responseText, 'failed');
                    }
                }
            });
        jQuery("#grdRule").jqGrid('sortableRows');
        $("#btnReset").click(function () {
            $("input[type='text']").each(function () {
                $(this).val('');
            });
        });
        var message = '@message'
        if (message) {
            //alert(message);
            var _class;
            if (message == 'Saved successfully.'
                || message == 'Updated successfully.'
                || message == 'Deleted successfully.') {
                _class = 'success';
            }
            else {
                _class = 'failed';
            }
            ShowMessage(message, _class);

        }
        else
            HideMessage();

        var _cmd = '@_command'
        if (_cmd) {
            $("#btnSave").val('Update');
            $("#btnClear").val('Cancel');
        }
    });
    function ShowMessage(message, cssclass) {
        $("#msgbox").show();
        $("#msgbox span").text(message);

        $("#msgbox span").removeClass();
        $("#msgbox span").addClass(cssclass);
    }
    function HideMessage() {
        $("#msgbox").hide();
    }
</script>
@using (Html.BeginForm("RuleSave", "Hexarule", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    <div class="content-body width-per-100">
        <div style="width:80%;margin:auto;">
            <div class="group">
                <div class="div-header">
                    <span class="control-label label-bold">Rule</span>
                </div>
                <div class="col-40" style="width: 36%;padding: 0;">
                    <div class="form-group width-per-100">
                        @Html.LabelFor(model => model.Rule_Name, new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.Rule_Name, new { @class = "form-control", @tabindex = "1", @maxlength = "125" })
                        @Html.ValidationMessageFor(model => model.Rule_Name, string.Empty, new { @class = "error-msg" })
                    </div>
                </div>
                <div class="col-40" style="width: 37%;padding-right: 0px;">
                    <div class="form-group width-per-100">
                        @Html.LabelFor(model => model.Conditional_Clause, new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.Conditional_Clause, new { @class = "form-control", @tabindex = "3", @maxlength = "250" })
                        @Html.ValidationMessageFor(model => model.Conditional_Clause, string.Empty, new { @class = "error-msg" })
                    </div>
                </div>
                <div class="col-10" style="width: 15%; padding: 0px;">
                    <div class="form-group width-per-100">
                        @Html.LabelFor(model => model.Default_value, new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.Default_value, new { @class = "form-control", @tabindex = "2", style = "width: 83%;", @maxlength = "50" })
                        @Html.ValidationMessageFor(model => model.Default_value, string.Empty, new { @class = "error-msg" })
                    </div>
                </div>
                <div class="col-10" style="padding-top: 20px; text-align: right; width: 12%; padding-right: 0px;">
                    <input value="Save" id="btnSave" class="button" name="Command" type="submit" tabindex="3" />
                    <input value="Clear" id="btnClear" class="button" name="Command" type="submit" tabindex="4" />
                    <input type="hidden" name="_ruleId" id="hdnRuleId" />
                    <input type="hidden" value="@ViewData["ClientID"]" id="hdnClientId" />
                    <input type="hidden" value="@ViewData["ProjectID"]" id="hdnProjectId" />
                </div>
            </div>
            <div id="msgbox" class="group text-align-center">
                <span class="success">Saved Successfully.</span>
            </div>
            <div class="group">
                <div id="grddiv" class="form-group width-per-100">
                    <table id="grdRule"></table>
                    <div id="pager1" class="scroll"></div>
                </div>
            </div>
        </div>

    </div>
}
@*@section Scripts{
    @Scripts.Render("~/bundles/jqueryval")
}*@