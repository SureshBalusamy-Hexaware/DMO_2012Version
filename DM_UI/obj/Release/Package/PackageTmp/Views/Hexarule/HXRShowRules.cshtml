@using Resources
@{
    ViewBag.Title = @DM_en_US.TabhdrProcessAndUpdate;
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style type="text/css">
    .modal {
        position: fixed;
        top: 0;
        left: 0;
        background: #aaaaaa 50% 50% repeat-x;
        z-index: 10000 !important;
        opacity: 0.9 !important;
        filter: alpha(opacity=50) !important;
        min-height: 100%;
        width: 100%;
    }

    .myLoadingProgress {
        z-index: 9999 !important;
        margin: 300px auto;
        padding: 10px;
        width: 200px;
        background-color: White;
        border: 5px solid #67CFF5;
        /*border-radius: 10px;*/
        filter: alpha(opacity=100);
        opacity: 1;
        -moz-opacity: 1;
    }

    .myDialogClass .ui-widget-header {
        font-family: "open_sansregular", "Segoe UI", "Helvetica Neue", Helvetica, Arial, sans-serif;
        margin-bottom: 5px;
        font-size: 13px;
        letter-spacing: 0.3px !important;
        font-weight: normal;
    }

    .myDialogClass .ui-widget-content {
        background-color: #F3F3F3;
    }
</style>
<script lang="ja" type="text/javascript">
    $(document).ajaxStart(function () {
        $('#divblockUI').show();
    }).ajaxStop(function () {
        $('#divblockUI').hide();
    });

    $(document).ready(function () {


        $("#viewdata_button").hide();
        $("#reprocess_button").hide();

        $("#dialog").dialog({
            autoOpen: false,
            width: 'auto',
            draggable: false,
            resizable: false,
            title: "Offline Status",
            dialogClass: "myDialogClass"
        });

        GetAllTables();



        $("#btnOfflineStatus").click(function () {

            var baseUrl = '@Url.Content("~/")';
            var client_ID = $("#hdnClientId").val();
            var project_ID = $("#hdnProjectId").val();
            var TableName = $("#select_table option:selected").text();
            var ServiceUrl = baseUrl + "api/HXRRuleAPI/GetOfflineStatus";
            $("#grdOfflineStatus").GridUnload();
            $("#grdOfflineStatus").jqGrid({
                postData: { client_ID: client_ID, project_ID: project_ID, Table_Name: TableName },
                mytype: 'GET',
                datatype: 'json',
                url: ServiceUrl,
                height: 230,
                width: 900,
                autowidth: true,
                shrinkToFit: true,
                rowNum: 10,
                rowList: [10, 20, 30],
                colNames: ['Offline Job Id', 'Table Name', 'Run Status', 'Response Message', 'Start Time', 'End Time', 'Request By'],
                colModel: [
                { name: 'Offline_Job_ID', index: 'Offline_Job_ID', hidden: true },
                { name: 'Table_Name', index: 'Table_Name' },
                { name: 'Run_Status', index: 'Run_Status' },
                { name: 'Run_Status_Message', index: 'Run_Status_Message' },
                { name: 'Start_Time', index: 'Start_Time' },
                { name: 'End_Time', index: 'End_Time' },
                { name: 'Created_by', index: 'Created_by' }],
                pager: '#pgrOfflineStatus',
                //scrollOffset: 0,
                viewrecords: true,
                viewsortcols: true,
                //loadonce: true,
                gridview: true,
                sortorder: 'asc',
                gridComplete: function () {
                },
                loadComplete: function () {
                },
                caption: 'Status History'
            });

            jQuery("#grdOfflineStatus").jqGrid('navGrid', '#pgrOfflineStatus', { edit: false, add: false, del: false, view: false, search: false });
            jQuery("#grdOfflineStatus").jqGrid('sortableRows');

            $("#dialog").dialog("open");
        });
        //Run button click event
        $("#run_button,#reprocess_button").click(function (event) {

            $('#divblockUI').show();
            var baseUrl = '@Url.Content("~/")';
            var client_ID = $("#hdnClientId").val();
            var project_ID = $("#hdnProjectId").val();
            var ConfigID = $("#hdnConfigID").val();
            var feed_type = $("#select_table option:selected").text();
            var RunType = $("input[name=RunType]:checked").val();
            var _Url = "";

            if (RunType == "Online")
                _Url = baseUrl + "api/HXRRuleAPI/GetRuleValidationErrorData";
            else if (RunType == "Offline") {
                _Url = baseUrl + "api/HXRRuleAPI/SubmitOfflineRun";
                $.ajax({
                    url: _Url,
                    type: "GET",
                    //contentType: "application/json; charset=utf-8",
                    data: { client_ID: client_ID, project_ID: project_ID, config_ID: ConfigID, table_name: feed_type, },//, run_ID: '' },
                    dataType: "text",
                    async: true,
                    success: function (data, result) {
                        if (!result) alert('Failure to retrieve run status.');
                        alert('Request submitted successfully.');
                    },
                    error: function (xhr) {

                        alert("Failed");
                    }
                });
                return;
            }
            $.ajax({
                url: _Url,
                type: "GET",
                // contentType: "application/json; charset=utf-8",
                data: { client_ID: client_ID, project_ID: project_ID, config_ID: ConfigID, table_name: feed_type, run_ID: null },
                dataType: "json",
                async: true,
                success: function (data, result) {
                    Execute(data, event.currentTarget.id);
                },
                error: function (xhr) {
                    alert("Failed");
                }
            })




        });
        $("#viewdata_button").click(function () {
            var baseUrl = '@Url.Content("~/")';
            var tablename = $("#select_table option:selected").text();
            var ConfigID = $("#hdnConfigID").val();
            var colModel = new Array();
            var colNames = new Array();
            var ColumnNames;
            var ColumnModel;
            var rows;

            var selectedRow = jQuery("#errortable").jqGrid('getGridParam', 'selrow');
            if (selectedRow == undefined || selectedRow == "") {
                alert('Select row to view Input data');
                return;
            }

            var primary_key_column = jQuery("#errortable").jqGrid('getCell', selectedRow, 'Key_Column')
            var primary_key_value = jQuery("#errortable").jqGrid('getCell', selectedRow, primary_key_column);

            rows = null;

            $.ajax({
                url: baseUrl + "api/HXRRuleAPI/GetRuleValidationErrorSampleData",
                type: "GET",
                contentType: "application/json; charset=utf-8",
                //data: { table_name: tablename, column_list: selectedColumns },
                data: { config_ID: ConfigID, table_name: tablename, key_column: primary_key_column, key_value: primary_key_value },
                dataType: "json",
                cache: false,
                success: function (data) {

                    var cols = data.ColNames;
                    rows = data.rows;

                    //function BuildCoulmnNames(cols) {
                    var uFields = cols.split(',');
                    var columns = [];
                    for (var i = 0; i < uFields.length ; i++) {
                        columns.push(uFields[i]);
                    }

                    ColumnNames = columns;

                    var uFields = cols.split(',');
                    var columns = [];
                    for (var i = 0; i < uFields.length ; i++) {
                        columns.push({ name: uFields[i], index: uFields[i], width: 80, search: true, sortable: false, editable: true, hidden: false, align: 'center' });
                    }
                    ColumnModel = columns;
                    $("#errortabledata").GridUnload();
                    $grid = jQuery("#errortabledata").jqGrid({
                        data: JSON.parse(rows),
                        datatype: "local",
                        height: 100,
                        width: 1331,
                        rowNum: 10,
                        //search: { caption: 'Search Record' },
                        rowList: [5, 10, 20, 50],
                        colNames: ColumnNames,
                        colModel: ColumnModel,
                        pager: '#pager_errortabledata',
                        viewrecords: true,
                        loadonce: true,
                        gridview: true,
                        sortorder: 'asc',
                        autowidth: false,
                        shrinkToFit: false,
                        scrollOffset: 0,
                        showButtonPanel: true,
                        closeAfterEdit: true,
                        caption: 'Input data',
                    })
                    jQuery("#errortabledata").jqGrid('sortableRows');
                },
                error: function () {
                    alert("Error with AJAX callback");
                }
            });
        });
    });
    function Execute(_ErrorDetails, btnId) {

        var colModel = new Array();
        var colNames = new Array();
        var ColumnModel;
        var rows = null;

        //_ErrorDetails = jQuery.parseJSON(_ErrorDetails);
        var RunId = 0;
        if (_ErrorDetails.HXRRuleValidationResultsEntity != undefined) {
            var ValidationMsg = _ErrorDetails.HXRRuleValidationResultsEntity;
            if (ValidationMsg != null) {
                var totalCount = ValidationMsg.total_records;
                var passCount = ValidationMsg.pass_count;
                var failCount = ValidationMsg.Fail_Count;
                var TotalErrors = ValidationMsg.number_errors;
                RunId = ValidationMsg.Run_Id;
                $("#statusMsg").css("color", "green");
                $("#statusMsg").empty();
                $("#statusMsg").append("Run completed for Run Id " + RunId + ". Total Number of Records: " + totalCount + ", Passed - " + passCount + ", Failed - "
                    + failCount + ", Total Errors - " + TotalErrors);
                $("#viewdata_button").show();
                $("#reprocess_button").show();
            }
        }
        else {
            alert(_ErrorDetails);
            return;
        }
        var ColumnNames;
        var cols = _ErrorDetails.ColNames;
        var uFields = cols.split(',');
        var columns = [];
        for (var i = 0; i < uFields.length ; i++) {
            columns.push(uFields[i]);
        }
        ColumnNames = columns;

        var uFields = cols.split(',');
        var columns = [];
        for (var i = 0; i < uFields.length ; i++) {
            switch (uFields[i]) {

                case "Table_Name":
                case "column_name":
                    columns.push({ name: uFields[i], index: uFields[i], width: 200, fixed: true, search: true, sortable: false, editable: true, hidden: false, align: 'center' });
                    break;
                case "Rule_Description":
                    columns.push({ name: uFields[i], index: uFields[i], width: 450, fixed: true, search: true, sortable: false, editable: true, hidden: false, align: 'center' });
                    break;
                case "Conditional_Clause":
                    columns.push({ name: uFields[i], index: uFields[i], width: 250, fixed: true, search: true, sortable: false, editable: true, hidden: false, align: 'center' });
                    break;
                case "Attribute_Rule_ID":
                case "Error_value":
                case "Error_Description":
                case "Run_User":
                case "Key_Column":
                    columns.push({ name: uFields[i], index: uFields[i], width: 80, fixed: true, search: true, sortable: false, editable: true, hidden: false, align: 'center' });
                    break;
                default:
                    columns.push({ name: uFields[i], index: uFields[i], width: 80, fixed: true, search: true, sortable: false, editable: true, hidden: false, align: 'center' });

                    break;
            }
        }
        ColumnModel = columns;


        var baseUrl = '@Url.Content("~/")';
        var client_ID = $("#hdnClientId").val();
        var project_ID = $("#hdnProjectId").val();
        var ConfigID = $("#hdnConfigID").val();
        var feed_type = $("#select_table option:selected").text();
        var RunType = $("input[name=RunType]:checked").val();
        var _Url = "";


        $("#errortable").GridUnload();
        $grid = jQuery("#errortable").jqGrid({
            //data: JSON.parse(rows),
            //datastr: JSON.parse(rows),
            mtype: 'GET',
            postData: { client_ID: client_ID, project_ID: project_ID, Table_Name: feed_type, config_ID: ConfigID, run_ID: RunId, Rule_cateogry_ID: null, Rule_name: null },
            url: baseUrl + "api/HXRRuleAPI/GetRuleValidationErrorData_Paging",
            datatype: 'json',
            height: 230,
            width: 1331,
            rowNum: 10,
            search: { caption: 'Search Record' },
            rowList: [5, 10, 20, 50],
            colNames: ColumnNames,
            colModel: ColumnModel,
            pager: '#pager_errortable',
            viewrecords: true,
            //loadonce: false,
            //gridview: true,
            //sortorder: 'asc',
            autowidth: true,
            shrinkToFit: false,
            sortable: true,
            //shrinkToFit: true,
            //scrollOffset: 0,
            showButtonPanel: true,
            closeAfterEdit: true,
            caption: 'Invalid Records',
            onSelectRow: function (rowId) {
            },
            edit: {
                addCaption: "Add Record",
                editCaption: "Edit Record here",
                bSubmit: "Submit",
                bCancel: "Cancel",
                bClose: "Close",
                saveData: "Data has been changed! Save changes?",
                bYes: "Yes",
                bNo: "No",
                bExit: "Cancel",
                mtype: "POST",
                editData: {
                    data: $('#errortable').getRowData(this.id)
                }
            },
            editurl: baseUrl + "api/HXRRuleAPI/UpdateSourceTable/"
        }).navGrid('#pager_errortable',
               { edit: true, add: false, del: false, search: true, closeAfterAdd: true, closeAfterEdit: true },
               {
                   afterSubmit: function (response, postdata) {

                       var myInfo = '<div class="ui-state-highlight ui-corner-all">' + '<span class="ui-icon ui-icon-info" ' +
                           'style="float: left; margin-right: .3em;"></span>' + 'Changes saved' + '</div>',
                           $infoTr = $("#TblGrid_" + $.jgrid.jqID(this.id) + ">tbody>tr.tinfo"),
                           $infoTd = $infoTr.children("td.topinfo");
                       $infoTd.html(myInfo);
                       $infoTr.show();

                       var res = jQuery.parseJSON(response.responseText);
                       return [true, "", res.d];
                   },
                   onclickSubmit: function (params, postdata) {
                       var table_name = postdata.Table_Name;
                       var Key_Column = postdata.Key_Column;
                       var Key_Column_Value = "";
                       var Column_Name = postdata.column_name.replace('[', '').replace(']', '');
                       var Column_Name_Value = "";
                       for (var key in postdata) {
                           if (key == Key_Column) {
                               Key_Column_Value = postdata[key];
                           }
                           if (key == Column_Name) {
                               Column_Name_Value = postdata[key];
                           }
                       }

                       //params.url = baseUrl + "api/HXRRuleAPI/UpdateSourceTable/?TableName=" + feed_type + "&PrimaryKeyCol=" + Key_Column
                       //    + "&PrimaryKeyValue=" + Key_Column_Value + "&UpdateCol=" + Column_Name + "&UpdateVal=" + Column_Name_Value + "&ConfigID=" + ConfigID;
                       //return JSON.stringify(postdata);

                       return {
                           TableName: feed_type,
                           PrimaryKeyCol: Key_Column,
                           PrimaryKeyValue: Key_Column_Value,
                           UpdateCol: Column_Name,
                           UpdateVal: Column_Name_Value,
                           run_id: RunId,
                           ConfigID: ConfigID,
                           update_all: 'N'
                       };
                   },
                   recreateForm: true, width: 700,
                   beforeShowForm: function (form) {
                       var $self = $(this);
                       form.find(".FormElement[readonly]")
                           .prop("disabled", true)
                           .closest(".DataTD")
                           .prev(".CaptionTD")
                           .prop("disabled", true);
                       form.css({ "max-height": 0.50 * screen.height + "px", "width": "680px" });
                       form.find(".FormElement:input").addClass("form-control");
                       var column_involve = new Array();
                       var str = "";
                       var ErrorTable = $('#errortable'),
                           selRowId = ErrorTable.jqGrid('getGridParam', 'selrow'),
                           Conditional_Clause = ErrorTable.jqGrid('getCell', selRowId, 'Conditional_Clause'),
                           Rule_Description = ErrorTable.jqGrid('getCell', selRowId, 'Rule_Description'),
                           Column_Name = ErrorTable.jqGrid('getCell', selRowId, 'column_name');

                       $('#tr_column_name', form).hide();
                       $('#tr_Run_User', form).hide();
                       $('#tr_Table_Name', form).hide();
                       $('#tr_Key_Column', form).hide();
                       $('#tr_Attribute_Rule_ID', form).hide();
                       //$('#tr_Conditional_Clause', form).hide();
                       $('#tr_Rule_Description', form).hide();
                       $('#tr_Error_value', form).hide();
                       $('#tr_Error_Description', form).hide();

                       str = Rule_Description;
                       //str = "1. " + Conditional_Clause;
                       //var myInfo = '<div class="ui-state-highlight ui-corner-all">' + '<span class="ui-icon ui-icon-info" '
                       //    + 'style="float: right; margin-right: .3em;"></span>' + "<b>FAILED RULES:</b> " + "<br><br>" + str + '</div>',
                       //    $infoTr = $("#TblGrid_" + $.jgrid.jqID(this.id) + ">tbody>tr.tinfo"), $infoTd = $infoTr.children("td.topinfo");
                       var myInfo = '<div class="ui-state-highlight ui-corner-all">' + '<span class="ui-icon ui-icon-info" '
                           + 'style="float: right; margin-right: .3em;"></span>' + "<b>Rule Description:</b> " + "<br><br>" + str + '</div>',
                           $infoTr = $("#TblGrid_" + $.jgrid.jqID(this.id) + ">tbody>tr.tinfo"), $infoTd = $infoTr.children("td.topinfo");


                       $infoTd.html(myInfo);
                       $infoTr.show();
                       var _raw_Columnname = Column_Name.replace('[', '').replace(']', '');
                       $("[id='tr_" + _raw_Columnname + "']", form).addClass("ui-state-highlight");

                       //Update All Button
                       $('<a href="#">Update All<span class="ui-icon ui-icon-disk"></span></a>')
                       .click(function (form) {
                           var table_name = ErrorTable.jqGrid('getRowData', selRowId).Table_Name;
                           var Key_Column = ErrorTable.jqGrid('getRowData', selRowId).Key_Column;
                           var Key_Column_Value = ErrorTable.jqGrid('getCell', selRowId, Key_Column);
                           var Column_Name_Value = $("#" + _raw_Columnname).val();
                           $.ajax({
                               type: "POST",
                               url: baseUrl + "api/HXRRuleAPI/UpdateSourceTable/",
                               dataType: 'json',
                               contentType: "application/json;charset=utf-8",
                               data: JSON.stringify({
                                   TableName: feed_type,
                                   PrimaryKeyCol: Key_Column,
                                   PrimaryKeyValue: Key_Column_Value,
                                   UpdateCol: Column_Name,
                                   UpdateVal: Column_Name_Value,
                                   run_id: RunId,
                                   ConfigID: ConfigID,
                                   update_all: 'Y'
                               }),
                               success: function (data) {
                                   var myInfo = '<div class="ui-state-highlight ui-corner-all">' + '<span class="ui-icon ui-icon-info" ' +
                            'style="float: left; margin-right: .3em;"></span>' + 'Changes saved' + '</div>',
                            $infoTr = $("#TblGrid_errortable>tbody>tr.tinfo"),
                            $infoTd = $infoTr.children("td.topinfo");
                                   $infoTd.html(myInfo);
                                   $infoTr.show();
                               }
                           });


                       }).addClass("fm-button ui-state-default ui-corner-all fm-button-icon-left")
                       .prependTo("#Act_Buttons>td.EditButton");


                   },
                   onclickPgButtons: function (next, form, rowid) {
                       var ErrorTable = $('#errortable'), selRowId = ErrorTable.jqGrid('getGridParam', 'selrow'),
                          Conditional_Clause = ErrorTable.jqGrid('getCell', selRowId, 'Conditional_Clause'),
                          Rule_Description = ErrorTable.jqGrid('getCell', selRowId, 'Rule_Description'),
                          Column_Name = ErrorTable.jqGrid('getCell', selRowId, 'column_name');

                       var column_involve = new Array();
                       form.css({ "max-height": 0.50 * screen.height + "px" });
                       var str = "";
                       //str = "1. " + Conditional_Clause;
                       str = Rule_Description;

                       var myInfo = '<div class="ui-state-highlight ui-corner-all">' + '<span class="ui-icon ui-icon-info" '
                           + 'style="float: right; margin-right: .3em;"></span>' + "<b>Rule Description:</b> " + "<br><br>" + str + '</div>',
                           $infoTr = $("#TblGrid_" + $.jgrid.jqID(this.id) + ">tbody>tr.tinfo"), $infoTd = $infoTr.children("td.topinfo");
                       $infoTd.html(myInfo);
                       $infoTr.show();
                       $('#tr_' + Column_Name, form).addClass("ui-state-highlight");
                   },
                   afterShowForm: function (form) {
                   }
               });
        jQuery("#errortable").jqGrid('sortableRows');

        if (btnId == "run_button")
            alert("Run completed!");
        else if (btnId == "reprocess_button") {
            alert('Reprocess completed');
        }
        else
            alert("Failed");
    }
    function GetAllTables() {
        var baseUrl = '@Url.Content("~/")';

        var ServiceUrl = baseUrl + "api/HXRRuleAPI/MetaDataTable";
        var client_ID = $("#hdnClientId").val();
        var project_ID = $("#hdnProjectId").val();
        var DatabaseIP = $("#hdnDatabaseIP").val();
        var SourceTarget = $("#hdnSourceTarget").val();
        var DatabaseName = $("#hdnDatabaseName").val();
        var ConfigID = $("#hdnConfigID").val();

        $.ajax({
            type: "GET",
            url: ServiceUrl,
            //data: { client_ID: client_ID, project_ID: project_ID, database_IP: DatabaseIP, source_Target: SourceTarget, database_Name: DatabaseName },
            data: { client_ID: client_ID, project_ID: project_ID, config_ID: ConfigID },
            dataType: 'json',
            success: function (data) {
                $.each(data, function (index, value) {
                    $('#select_table').append($('<option>').text(value).val(value));
                });
                //$("#run_button").trigger("click");
                function_tableselect();

            },
            error: function (xhr) {
                alert(xhr.statusText);
            }
        });
    }
    //Write table Grid to show all the User Defined Rules and Pre Defined Rules.
    function function_tableselect() {
        var baseUrl = '@Url.Content("~/")';
        //$(function () {
        var ServiceUrl = baseUrl + "api/HXRRuleAPI/GetRuleAttributes";

        var client_ID = $("#hdnClientId").val();
        var project_ID = $("#hdnProjectId").val();
        var Column_Name = "";
        var Rule_TypeID = 0;
        var TableName = $("#select_table option:selected").text();

        $("#showrulestable").GridUnload();
        $("#showrulestable").jqGrid({
            postData: { client_ID: client_ID, project_ID: project_ID, Table_Name: TableName, Column_Name: Column_Name, Rule_TypeID: Rule_TypeID },
            mytype: 'GET',
            datatype: 'json',
            // url: 'ShowRulesServlet',
            url: ServiceUrl,
            height: 230,
            width: 900,
            autowidth: true,
            shrinkToFit: true,
            rowNum: 10,
            rowList: [10, 20, 30],
            colNames: ['Column Name', '@DM_en_US.lblRuleCategory', '@DM_en_US.lblRuleType', 'Rule', 'Rule Description', 'Rule Condition', 'Error Description', 'Status'],
            colModel: [
            { name: 'columnname', index: 'columnname' },
            { name: 'rulecategory', index: 'rulecategory' },
            { name: 'ruletype', index: 'ruletype' },
            { name: 'rule', index: 'rule' },
            { name: 'ruledesc', index: 'ruledesc', hidden: true },
            { name: 'rulecondition', index: 'rulecondition' },
            { name: 'errordesc', index: 'errordesc' },
            { name: 'status', index: 'status' }],
            pager: '#pager_datatable',
            //scrollOffset: 0,
            viewrecords: true,
            viewsortcols: true,
            //loadonce: true,
            gridview: true,
            sortorder: 'asc',
            gridComplete: function () {
                var recs = $('#showrulestable').jqGrid('getGridParam', 'reccount');
                if (recs == 0) {
                    $("#showrulestable").hide();
                }
            },
            loadComplete: function () {
            },
            caption: 'Rules Defined on the selected Table'
        });

        jQuery("#showrulestable").jqGrid('navGrid', '#pager_datatable', { edit: false, add: false, del: false, view: false, search: false });
        jQuery("#showrulestable").jqGrid('sortableRows');
        //});
    }
</script>
<div class="content-body" style="width:100%;">
    <div style="width:99%;margin:auto;">
        <div class="group">
            <div class="form-group width-per-100 fL">
                <div>
                    <span class="control-label">Select table</span>
                    <select id="select_table" class="dropdown" onchange="function_tableselect()" style="width:30%;"></select>
                </div>
            </div>
        </div>
        <div class="group">
            <div class="form-group width-per-100" style="width:98.5%;">
                <table id="showrulestable" class="scroll"></table>
                <div id="pager_datatable" class="scroll"></div>
            </div>
        </div>
        <div class="group">
            <div class="form-group text-align-center form-group-btn width-per-100">
                <input type="radio" id="rdbtnOnline" name="RunType" value="Online" checked="checked" /><label class="control-label" for="rdbtnOnline">Online</label>
                <input type="radio" id="rdbtnOffline" name="RunType" value="Offline" title="" /><label class="control-label" for="rdbtnOffline">Offline</label>
            </div>
            <div class="form-group text-align-center form-group-btn width-per-100">
                <input class="form-button" type="button" value="Run" id="run_button" title="" />
                <input class="form-button" type="submit" value="View Offline Status" id="btnOfflineStatus" title="" />
            </div>
        </div>
        <div class="group">
            <div class="form-group text-align-center form-group-btn width-per-100">
                <span id="statusMsg" class="control-label" style="color:green;"></span>
            </div>
        </div>
        <div class="group">
            <div class="form-group width-per-100" style="width:98.5%;">
                <table id="errortable" class="scroll"></table>
                <div id="pager_errortable" class="scroll"></div>
            </div>
        </div>
        <div class="group">
            <div class="form-group width-per-100" style="width:98.5%;">
                <table id="errortabledata" class="scroll"></table>
                <div id="pager_errortabledata" class="scroll"></div>
            </div>
        </div>
        <div class="group">
            <div class="form-group text-align-center form-group-btn width-per-100">
                <input class="form-button" type="button" value="View Data" id="viewdata_button">
                <input class="form-button" type="button" value="Re-Process" id="reprocess_button">
            </div>
        </div>
    </div>
</div>
<div class="group" id="dialog">
    <div class="form-group" style="padding-left: 10px;">
        <table id="grdOfflineStatus" class="scroll"></table>
        <div id="pgrOfflineStatusStatus" class="scroll"></div>
    </div>
</div>
<div id="divblockUI" class="modal">
    <div class="myLoadingProgress" align="center">
        Processing. Please wait.<br /><br />
        <img alt="" src="~/Images/loader.gif" />
    </div>
</div>
<input type="hidden" value="@ViewData["ClientID"]" id="hdnClientId" />
<input type="hidden" value="@ViewData["ProjectID"]" id="hdnProjectId" />
<input type="hidden" value="@ViewData["DatabaseIP"]" id="hdnDatabaseIP" />
<input type="hidden" value="@ViewData["SourceTarget"]" id="hdnSourceTarget" />
<input type="hidden" value="@ViewData["DatabaseName"]" id="hdnDatabaseName" />
<input type="hidden" value="@ViewData["ConfigID"]" id="hdnConfigID" />
