@using Resources
@{
    ViewBag.Title = "Correction & Re-Process";
}


<div class="content-body" style="width:100%;">
    <div style="width:99%;margin:auto;">
        <div class="group">
            <div class="form-group width-per-100 fL">
                <div class="col-40" style="width:25%;">
                    <span class="control-label">Select table</span>
                    <select id="select_table" class="dropdown" onchange="GetRunNumbers()" style="width:100%;"></select>
                </div>
                <div class="col-40" style="width:20%;">
                    <span class="control-label">Rule Criteria</span>
                    <select id="ddlCriteria" class="dropdown" style="width:100%;"></select>
                </div>
                <div class="col-40" style="width:25%;">
                    <span class="control-label">Rule</span>
                    <select id="ddlRule" class="dropdown" style="width:100%;"></select>
                </div>
                <div class="col-40" style="width:23%;">
                    <span class="control-label">Run Number</span>
                    <select id="ddlRunNumbers" class="dropdown" style="width:100%;"></select>
                </div>
            </div>
        </div>
        <div class="group">
            <div class="form-group width-per-100" style="width:98.5%;">
                <table id="errortable1" class="scroll"></table>
                <div id="pager_errortable1" class="scroll"></div>
            </div>
        </div>
        <div class="group">
            <div class="form-group width-per-100" style="width:98.5%;">
                <table id="errortable" class="scroll"></table>
                <div id="pager_errortable" class="scroll"></div>
            </div>
        </div>
        <div class="group">
            <div class="form-group width-per-100" style="width:98.5%;">
                <table id="errortabledata" class="scroll"></table>
                <div id="pager_errortabledata" class="scroll"></div>
            </div>
        </div>


        <div class="group">
            <div class="form-group text-align-center form-group-btn width-per-100">
                <input class="form-button" type="button" value="View Data" id="viewdata_button">
                <input class="form-button" type="button" value="Re-Process" id="reprocess_button">
            </div>
        </div>
    </div>
</div>
<div id="divblockUI" class="modal">
    <div class="myLoadingProgress" align="center">
        Processing. Please wait.<br /><br />
        <img alt="" src="~/Images/loader.gif" />
    </div>
</div>
<input type="hidden" value="@ViewData["ClientID"]" id="hdnClientId" />
<input type="hidden" value="@ViewData["ProjectID"]" id="hdnProjectId" />
<input type="hidden" value="@ViewData["DatabaseIP"]" id="hdnDatabaseIP" />
<input type="hidden" value="@ViewData["SourceTarget"]" id="hdnSourceTarget" />
<input type="hidden" value="@ViewData["DatabaseName"]" id="hdnDatabaseName" />
<input type="hidden" value="@ViewData["ConfigID"]" id="hdnConfigID" />
<script lang="ja" type="text/javascript">
    $(document).ajaxStart(function () {
        $('#divblockUI').show();
    }).ajaxStop(function () {
        $('#divblockUI').hide();
    });
    $(document).ready(function () {

        baseUrl = '@Url.Content("~/")';
        $('#loadingDiv').hide();
        $("#viewdata_button").hide();
        $("#reprocess_button").hide();

        $("#dialog").dialog({
            autoOpen: false,
            width: 'auto',
            draggable: false,
            resizable: false,
            title: "Offline Status",
            dialogClass: "myDialogClass"
        });

        GetAllTables();

        $("#ddlRunNumbers").change(function () {

            $("#viewdata_button").show();
            $("#reprocess_button").show();
            GetErrorData();

        });
        $("#ddlCriteria").change(function () {

            $("#viewdata_button").show();
            $("#reprocess_button").show();
            GetErrorData();
            GetRule();

        });
        $("#ddlRule").change(function () {

            $("#viewdata_button").show();
            $("#reprocess_button").show();

            GetErrorData();

        });
        //Run button click event
        $("#reprocess_button").click(function (event) {

         
            var client_ID = $("#hdnClientId").val();
            var project_ID = $("#hdnProjectId").val();
            var ConfigID = $("#hdnConfigID").val();
            var feed_type = $("#select_table option:selected").text();
            var RunId = $("#ddlRunNumbers").val();
            var _Url = "";
            _Url = baseUrl + "api/HXRRuleAPI/GetRuleValidationErrorData";
            var colModel = new Array();
            var colNames = new Array();
            var ColumnModel;
            var rows = null;
            var _ErrorDetails =
                $.ajax({
                    url: _Url,
                    type: "GET",
                    contentType: "application/json; charset=utf-8",
                    data: { client_ID: client_ID, project_ID: project_ID, config_ID: ConfigID, table_name: feed_type, run_ID: RunId },
                    dataType: "json",
                    async: false,
                    success: function (data, result) {
                        if (!result) alert('Failure to retrieve run status.');
                        else alert('Re-Process completed.');

                    },
                    error: function (xhr) {
                        alert("Failed");
                    }
                }).responseText;
            GetErrorData();
        });

        $("#viewdata_button").click(function () {
          
         
            var tablename = $("#select_table option:selected").text();
            var ConfigID = $("#hdnConfigID").val();
            var colModel = new Array();
            var colNames = new Array();
            var ColumnNames;
            var ColumnModel;
            var rows;

            var selectedRow = jQuery("#errortable").jqGrid('getGridParam', 'selrow');
            if (selectedRow == undefined || selectedRow == "") {
                alert('Select row to view Input data');
                return;
            }

            var primary_key_column = jQuery("#errortable").jqGrid('getCell', selectedRow, 'Key_Column')
            var primary_key_value = jQuery("#errortable").jqGrid('getCell', selectedRow, primary_key_column);

            rows = null;

            $.ajax({
                url: baseUrl + "api/HXRRuleAPI/GetRuleValidationErrorSampleData",
                type: "GET",
                contentType: "application/json; charset=utf-8",
                data: { config_ID: ConfigID, table_name: tablename, key_column: primary_key_column, key_value: primary_key_value },
                dataType: "json",
                cache: false,
                success: function (data) {

                    var cols = data.ColNames;
                   rows = data.rows;

                    //function BuildCoulmnNames(cols) {
                    var uFields = cols.split(',');
                    var columns = [];
                    for (var i = 0; i < uFields.length ; i++) {
                        columns.push(uFields[i]);
                    }

                    ColumnNames = columns;

                    var uFields = cols.split(',');
                    var columns = [];
                    for (var i = 0; i < uFields.length ; i++) {
                        columns.push({ name: uFields[i], index: uFields[i], width: 80, search: true, sortable: false, editable: true, hidden: false, align: 'center' });
                    }
                    ColumnModel = columns;
                    $("#errortabledata").GridUnload();
                    $grid = jQuery("#errortabledata").jqGrid({
                        data: JSON.parse(rows),
                        datatype: "local",
                        height: 100,
                        width: 1331,
                        rowNum: 10,
                        //search: { caption: 'Search Record' },
                        rowList: [5, 10, 20, 50],
                        colNames: ColumnNames,
                        colModel: ColumnModel,
                        pager: '#pager_errortabledata',
                        viewrecords: true,
                        loadonce: true,
                        gridview: true,
                        sortorder: 'asc',
                        autowidth: false,
                        shrinkToFit: false,
                        scrollOffset: 0,
                        showButtonPanel: true,
                        closeAfterEdit: true,
                        caption: 'Input data',
                    })
                    jQuery("#errortabledata").jqGrid('sortableRows');
                },
                error: function () {
                    alert("Error with AJAX callback");
                }
            });
        });
    });


    function GetErrorData() {

       var feed_type = $("#select_table option:selected").text();
       var RunId = $("#ddlRunNumbers").val();
        var CategoryId = $("#ddlCriteria").val() == -1 ? null : $("#ddlCriteria").val();
        var RuleId = $("#ddlRule").val() == -1 ? null : $("#ddlRule").val();
        if (RunId == null) {
            $("#viewdata_button").hide();
            $("#reprocess_button").hide();
            $("#errortabledata").GridUnload();
            $("#errortable").GridUnload();
            return;
        }
        
        $("#errortable1").GridUnload();
        $grid = jQuery("#errortable1").jqGrid({
            mytype: 'GET',
            postData: {
                client_ID: $("#hdnClientId").val(), project_ID: $("#hdnProjectId").val(), config_ID: $("#hdnConfigID").val(),
                table_name: feed_type, run_ID: $("#ddlRunNumbers :selected").text(), Rule_cateogry_ID: CategoryId, Rule_name: RuleId
            },
            datatype: 'json',
            url: baseUrl + "api/HXRRuleAPI/GetRuleErrorSummary",
            colModel: [
                        { label: 'RuleCategory_Name', name: 'RuleCategory_Name', width: 100, editable: true, editrules: { required: true } },
                        { label: 'Rule_Name', name: 'Rule_Name', width: 100, editable: true, editrules: { required: true } },
                        { label: 'Pass Count', name: 'Re', width: 25, editable: true, editrules: { required: true }, align: 'center' },
                        { label: 'Pass %', name: 'Rec_Pass_Percent', width: 25, editable: true, editrules: { required: true }, align: 'center' },
                        { label: 'Fail %', name: 'Rec_Fail_Percent', width: 25, editable: true, editrules: { required: true }, align: 'center' },
                        { label: 'Fail Count', name: 'Record_Fail_Count', width: 25, align: 'center' },
                        { label: 'RuleID', name: 'Rule_ID', width: 25, align: 'center',hidden:true },
                        { label: 'RuleCategoryID', name: 'RuleCategory_ID', width: 25, align: 'center', hidden: true },
            ],
            // sortname: 'ID',
            sortorder: 'asc',
            loadonce: true,
            viewrecords: true,
            width: 980,
            height: 100,
            autowidth: true,
            //scrollOffset: 0,
            reloadAfterSubmit: true,
            pginput: false,
            pgbuttons: false,
            rowNum: -1,
            pager: "#pager_errortable1",
            caption: 'SummaryReports',
            gridComplete: function () {
              
                var ids = jQuery("#errortable1").jqGrid('getDataIDs');
                for (var i = 0; i < ids.length; i++) {
                    var cl = ids[i];
                    var rowData = jQuery('#errortable1').jqGrid('getRowData', cl);
                    editbutton = "<a style='height:22px;width:20px;text-decoration: underline;cursor: pointer;'  onclick=\"GetErrorDataDetails('" + rowData["Rule_ID"] + ":" + rowData["RuleCategory_ID"] + "');\"  > " + rowData["Record_Fail_Count"] + "<a/>";
                    jQuery("#errortable1").jqGrid('setRowData', ids[i], { Record_Fail_Count: editbutton });
                }
            }
        });
    }

    function GetErrorDataDetails(Rule_ID)
    {
     
        var arr = Rule_ID.split(':');
        var feed_type = $("#select_table option:selected").text();
        var RunId = $("#ddlRunNumbers").val();
        var CategoryId = $("#ddlCriteria").val() == -1 ? null : $("#ddlCriteria").val();
        var RuleId = $("#ddlRule").val() == -1 ? null : $("#ddlRule").val();


        var _Url = "";
        _Url = baseUrl + "api/HXRRuleAPI/GetRuleValidationErrorDataColumns";
        var colModel = new Array();
        var colNames = new Array();
        var ColumnModel;
        var rows = null;
        var _ErrorDetails =
            $.ajax({
                url: _Url,
                type: "GET",
                contentType: "application/json; charset=utf-8",
                data: {
                    client_ID: $("#hdnClientId").val(), project_ID: $("#hdnProjectId").val(), config_ID: $("#hdnConfigID").val(),
                    table_name: $("#select_table option:selected").text(), run_ID: $("#ddlRunNumbers").val(), Rule_cateogry_ID: arr[1], Rule_name: arr[0]
                },
                dataType: "json",
                async: false,
                success: function (data, result) { if (!result) alert('Failure to retrieve run status.'); },
                error: function (xhr) {
                    alert("Failed");
                }
            }).responseText;
        _ErrorDetails = jQuery.parseJSON(_ErrorDetails);

        var ColumnNames;
        var cols = _ErrorDetails.ColNames;
        var uFields = cols.split(',');
        var columns = [];
        for (var i = 0; i < uFields.length ; i++) {
            columns.push(uFields[i]);
        }
        ColumnNames = columns;

        var uFields = cols.split(',');
        var columns = [];
        for (var i = 0; i < uFields.length ; i++) {
            switch (uFields[i]) {

                case "Table_Name":
                case "column_name":
                    columns.push({ name: uFields[i], index: uFields[i], width: 200, fixed: true, search: true, sortable: false, editable: true, hidden: false, align: 'center' });
                    break;
                case "Rule_Description":
                    columns.push({ name: uFields[i], index: uFields[i], width: 400, fixed: true, search: true, sortable: false, editable: true, hidden: false, align: 'center' });
                    break;
                case "Conditional_Clause":
                    columns.push({ name: uFields[i], index: uFields[i], width: 300, fixed: true, search: true, sortable: false, editable: true, hidden: false, align: 'center' });
                    break;
                case "Attribute_Rule_ID":
                case "Error_value":
                case "Error_Description":
                case "Run_User":
                case "Key_Column":
                    columns.push({ name: uFields[i], index: uFields[i], width: 80, fixed: true, search: true, sortable: false, editable: true, hidden: false, align: 'center' });
                    break;
                default:
                    columns.push({ name: uFields[i], index: uFields[i], width: 80, fixed: true, search: true, sortable: false, editable: true, hidden: false, align: 'center' });

                    break;
            }
        }
        ColumnModel = columns;

        $("#errortable").GridUnload();
        $grid = jQuery("#errortable").jqGrid({
            mtype: 'GET',
            postData: {
                client_ID: $("#hdnClientId").val(), project_ID: $("#hdnProjectId").val(), Table_Name: feed_type,
                config_ID: $("#hdnConfigID").val(), run_ID: $("#ddlRunNumbers").val(),Rule_cateogry_ID: arr[1], Rule_name: arr[0]
            },
            url: baseUrl + "api/HXRRuleAPI/GetRuleValidationErrorData_Paging",
            datatype: 'json',
            height: 230,
            width: 1331,
            rowNum: 10,
            search: { caption: 'Search Record' },
            rowList: [5, 10, 20, 50],
            colNames: ColumnNames,
            colModel: ColumnModel,
            pager: '#pager_errortable',
            viewrecords: true,
            //loadonce: false,
            //gridview: true,
            //sortorder: 'asc',
            autowidth: true,
            shrinkToFit: false,
            sortable: true,
            //shrinkToFit: true,
            //scrollOffset: 0,
            showButtonPanel: true,
            closeAfterEdit: true,
            caption: 'Invalid Records',
            onSelectRow: function (rowId) {
            },
            edit: {
                addCaption: "Add Record",
                editCaption: "Edit Record here",
                bSubmit: "Submit",
                bCancel: "Cancel",
                bClose: "Close",
                saveData: "Data has been changed! Save changes?",
                bYes: "Yes",
                bNo: "No",
                bExit: "Cancel",
                mtype: "POST",
                editData: {
                    data: $('#errortable').getRowData(this.id)
                }
            },
            editurl: baseUrl + "api/HXRRuleAPI/UpdateSourceTable/"
        }).navGrid('#pager_errortable',
               { edit: true, add: false, del: false, search: true, closeAfterAdd: true, closeAfterEdit: true },
               {
                   afterSubmit: function (response, postdata) {

                       var myInfo = '<div class="ui-state-highlight ui-corner-all">' + '<span class="ui-icon ui-icon-info" ' +
                           'style="float: left; margin-right: .3em;"></span>' + 'Changes saved' + '</div>',
                           $infoTr = $("#TblGrid_" + $.jgrid.jqID(this.id) + ">tbody>tr.tinfo"),
                           $infoTd = $infoTr.children("td.topinfo");
                       $infoTd.html(myInfo);
                       $infoTr.show();

                       var res = jQuery.parseJSON(response.responseText);
                       return [true, "", res.d];
                   },
                   onclickSubmit: function (params, postdata) {
                       var table_name = postdata.Table_Name;
                       var Key_Column = postdata.Key_Column;
                       var Key_Column_Value = "";
                       var Column_Name = postdata.column_name.replace('[', '').replace(']', '');
                       var Column_Name_Value = "";
                       for (var key in postdata) {
                           if (key == Key_Column) {
                               Key_Column_Value = postdata[key];
                           }
                           if (key == Column_Name) {
                               Column_Name_Value = postdata[key];
                           }
                       }

                       //params.url = baseUrl + "api/HXRRuleAPI/UpdateSourceTable/?TableName=" + feed_type + "&PrimaryKeyCol=" + Key_Column
                       //    + "&PrimaryKeyValue=" + Key_Column_Value + "&UpdateCol=" + Column_Name + "&UpdateVal=" + Column_Name_Value + "&ConfigID=" + ConfigID;
                       //return JSON.stringify(postdata);

                       return {
                           TableName: feed_type,
                           PrimaryKeyCol: Key_Column,
                           PrimaryKeyValue: Key_Column_Value,
                           UpdateCol: Column_Name,
                           UpdateVal: Column_Name_Value,
                           run_id: RunId,
                           ConfigID: ConfigID,
                           update_all: 'N'
                       };
                   },
                   recreateForm: true, width: 700,
                   beforeShowForm: function (form) {
                       var $self = $(this);
                       form.find(".FormElement[readonly]")
                           .prop("disabled", true)
                           .closest(".DataTD")
                           .prev(".CaptionTD")
                           .prop("disabled", true);
                       form.css({ "max-height": 0.50 * screen.height + "px", "width": "680px" });
                       form.find(".FormElement:input").addClass("form-control");
                       var column_involve = new Array();
                       var str = "";
                       var ErrorTable = $('#errortable'),
                          selRowId = ErrorTable.jqGrid('getGridParam', 'selrow'),
                           Conditional_Clause = ErrorTable.jqGrid('getCell', selRowId, 'Conditional_Clause'),
                           Rule_Description = ErrorTable.jqGrid('getCell', selRowId, 'Rule_Description'),
                           Column_Name = ErrorTable.jqGrid('getCell', selRowId, 'column_name');

                       $('#tr_column_name', form).hide();
                       $('#tr_Run_User', form).hide();
                       $('#tr_Table_Name', form).hide();
                       $('#tr_Key_Column', form).hide();
                       $('#tr_Attribute_Rule_ID', form).hide();
                       //$('#tr_Conditional_Clause', form).hide();
                       $('#tr_Rule_Description', form).hide();
                       $('#tr_Error_value', form).hide();
                       $('#tr_Error_Description', form).hide();

                       str = Rule_Description;
                       //str = "1. " + Conditional_Clause;
                       //var myInfo = '<div class="ui-state-highlight ui-corner-all">' + '<span class="ui-icon ui-icon-info" '
                       //    + 'style="float: right; margin-right: .3em;"></span>' + "<b>FAILED RULES:</b> " + "<br><br>" + str + '</div>',
                       //    $infoTr = $("#TblGrid_" + $.jgrid.jqID(this.id) + ">tbody>tr.tinfo"), $infoTd = $infoTr.children("td.topinfo");
                       var myInfo = '<div class="ui-state-highlight ui-corner-all">' + '<span class="ui-icon ui-icon-info" '
                           + 'style="float: right; margin-right: .3em;"></span>' + "<b>Rule Description:</b> " + "<br><br>" + str + '</div>',
                           $infoTr = $("#TblGrid_" + $.jgrid.jqID(this.id) + ">tbody>tr.tinfo"), $infoTd = $infoTr.children("td.topinfo");


                       $infoTd.html(myInfo);
                       $infoTr.show();
                       var _raw_Columnname = Column_Name.replace('[', '').replace(']', '');
                       $("[id='tr_" + _raw_Columnname + "']", form).addClass("ui-state-highlight");

                       //Update All Button
                       $('<a href="#">Update All<span class="ui-icon ui-icon-disk"></span></a>')
                       .click(function (form) {
                           var table_name = ErrorTable.jqGrid('getRowData', selRowId).Table_Name;
                           var Key_Column = ErrorTable.jqGrid('getRowData', selRowId).Key_Column;
                           var Key_Column_Value = ErrorTable.jqGrid('getCell', selRowId, Key_Column);
                           var Column_Name_Value = $("#" + _raw_Columnname).val();
                           $.ajax({
                               type: "POST",
                               url: baseUrl + "api/HXRRuleAPI/UpdateSourceTable/",
                               dataType: 'json',
                               contentType: "application/json;charset=utf-8",
                               data: JSON.stringify({
                                   TableName: feed_type,
                                   Rule_cateogry_ID: $("#ddlCriteria").val() == -1 ? null : $("#ddlCriteria").val(),
                                   Rule_ID: $("#ddlRule").val() == -1 ? null : $("#ddlRule").val(),
                                   PrimaryKeyCol: Key_Column,
                                   PrimaryKeyValue: Key_Column_Value,
                                   UpdateCol: Column_Name,
                                   UpdateVal: Column_Name_Value,
                                   run_id: RunId,
                                   ConfigID: ConfigID,
                                   update_all: 'Y'
                               }),
                               success: function (data) {
                                   var myInfo = '<div class="ui-state-highlight ui-corner-all">' + '<span class="ui-icon ui-icon-info" ' +
                            'style="float: left; margin-right: .3em;"></span>' + 'Changes saved' + '</div>',
                            $infoTr = $("#TblGrid_errortable>tbody>tr.tinfo"),
                            $infoTd = $infoTr.children("td.topinfo");
                                   $infoTd.html(myInfo);
                                   $infoTr.show();
                               }
                           });


                       }).addClass("fm-button ui-state-default ui-corner-all fm-button-icon-left")
                       .prependTo("#Act_Buttons>td.EditButton");


                   },
                   onclickPgButtons: function (next, form, rowid) {
                       var ErrorTable = $('#errortable'), selRowId = ErrorTable.jqGrid('getGridParam', 'selrow'),
                          Conditional_Clause = ErrorTable.jqGrid('getCell', selRowId, 'Conditional_Clause'),
                          Rule_Description = ErrorTable.jqGrid('getCell', selRowId, 'Rule_Description'),
                          Column_Name = ErrorTable.jqGrid('getCell', selRowId, 'column_name');

                       var column_involve = new Array();
                       form.css({ "max-height": 0.50 * screen.height + "px" });
                       var str = "";
                       //str = "1. " + Conditional_Clause;
                       str = Rule_Description;

                       var myInfo = '<div class="ui-state-highlight ui-corner-all">' + '<span class="ui-icon ui-icon-info" '
                           + 'style="float: right; margin-right: .3em;"></span>' + "<b>Rule Description:</b> " + "<br><br>" + str + '</div>',
                           $infoTr = $("#TblGrid_" + $.jgrid.jqID(this.id) + ">tbody>tr.tinfo"), $infoTd = $infoTr.children("td.topinfo");
                       $infoTd.html(myInfo);
                       $infoTr.show();
                       $('#tr_' + Column_Name, form).addClass("ui-state-highlight");
                   },
                   afterShowForm: function (form) {
                   }
               });
        jQuery("#errortable").jqGrid('sortableRows');
    }

    function ReloadUserGrid(Project_Code) {
     
        var postData = $("#errortable").jqGrid("getGridParam", "postData");
        postData.Project_ID = Project_Code;
        _SelectedProjectId = Project_Code;
        $('#errortable').trigger('reloadGrid');
    }
    function GetAllTables() {

       
            var ServiceUrl = baseUrl + "api/HXRRuleAPI/MetaDataTable";
           // var DatabaseIP = $("#hdnDatabaseIP").val();
           // var SourceTarget = $("#hdnSourceTarget").val();
           // var DatabaseName = $("#hdnDatabaseName").val();

            $.ajax({
                type: "GET",
                url: ServiceUrl,
                data: { client_ID: $("#hdnClientId").val(), project_ID: $("#hdnProjectId").val(), config_ID: $("#hdnConfigID").val() },
                dataType: 'json',
                success: function (data) {
                    $.each(data, function (index, value) {
                        $('#select_table').append($('<option>').text(value).val(value));
                    });
                    GetRunNumbers();
                    GetRuleCriteria();
                },
                error: function (xhr) {
                    alert(xhr.statusText);
                }
            });
        }


        function GetRunNumbers() {
        
            var ServiceUrl = baseUrl + "api/HXRRuleAPI/GetRunNumbers";
            $.ajax({
                type: "GET",
                url: ServiceUrl,
                data: { client_ID: $("#hdnClientId").val(), project_ID: $("#hdnProjectId").val(), Table_Name: $("#select_table option:selected").text() },
                dataType: 'json',
                success: function (data) {
                    $("#errortable1").GridUnload();
                    $("#errortable").GridUnload();
                    console.log(data);
                    $("#ddlRunNumbers option").remove();
                    $.each(data, function (index, value) {
                        $("#ddlRunNumbers").append($('<option>').text(value.Value).val(value.Key));
                    });
                    GetRuleCriteria();
                    $("#ddlRunNumbers").change();
                },
                error: function (xhr) {
                    alert(xhr.statusText);
                }
            });

        }

        function GetRuleCriteria() {
         
            var ServiceUrl = baseUrl + "api/HXRRuleAPI/GetRuleCriteria";
            $.ajax({
                type: "GET",
                url: ServiceUrl,
                data: {
                    client_ID: $("#hdnClientId").val(), project_ID: $("#hdnProjectId").val(), Table_Name: $("#select_table option:selected").text(),
                    Run_Id: $("#ddlRunNumbers").val()
                },
                dataType: 'json',
                success: function (data) {
                    $("#ddlCriteria option").remove();
                    $("#ddlCriteria").append($('<option>').text('Select').val(-1));

                    $.each(data, function (index, value) {
                        $("#ddlCriteria").append($('<option>').text(value).val(index));
                    });
                    GetRule();
                },
                error: function (xhr) {
                    alert(xhr.statusText);
                }
            });
        }
        function GetRule() {

            var ServiceUrl = baseUrl + "api/HXRRuleAPI/GetErrorDataRule";
            $.ajax({
                type: "GET",
                url: ServiceUrl,
                data: {
                    client_ID: $("#hdnClientId").val(), project_ID: $("#hdnProjectId").val(), Table_Name: $("#select_table option:selected").text(),
                    Run_Id: $("#ddlRunNumbers").val(), Rule_Category_Id: $("#ddlCriteria").val()
                },
                dataType: 'json',
                success: function (data) {
                    $("#ddlRule option").remove();
                    $("#ddlRule").append($('<option>').text('Select').val(-1));
                    $.each(data, function (index, value) {
                        $("#ddlRule").append($('<option>').text(value).val(index));
                    });
                    //$("#ddlRule").change();
                },
                error: function (xhr) {
                    alert(xhr.statusText);
                }
            });
        }
</script>
<style type="text/css">
    .modal {
        position: fixed;
        top: 0;
        left: 0;
        background: #aaaaaa 50% 50% repeat-x;
        z-index: 10000 !important;
        opacity: 0.9 !important;
        filter: alpha(opacity=50) !important;
        min-height: 100%;
        width: 100%;
    }

    .myLoadingProgress {
        z-index: 9999 !important;
        margin: 300px auto;
        padding: 10px;
        width: 200px;
        background-color: White;
        border: 5px solid #67CFF5;
        /*border-radius: 10px;*/
        filter: alpha(opacity=100);
        opacity: 1;
        -moz-opacity: 1;
    }

    .myDialogClass .ui-widget-header {
        font-family: "open_sansregular", "Segoe UI", "Helvetica Neue", Helvetica, Arial, sans-serif;
        margin-bottom: 5px;
        font-size: 13px;
        letter-spacing: 0.3px !important;
        font-weight: normal;
    }

    .myDialogClass .ui-widget-content {
        background-color: #F3F3F3;
    }
</style>
