@model DM_UI.Models.ChangePasswordViewModel

@{
    ViewBag.Title = "ChangePassword";
    Layout = "~/Views/Shared/_LayoutHome.cshtml";
}

@using (Html.BeginForm("ChangePassword", "Home", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    <div class="content-body width-per-100">
        <div style="width:30%;margin:auto;">
            <div class="div-header">
                <span class="control-label label-bold">Change My Password</span>
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.ProjectId, new { @class = "control-label" })
            </div>
            <div class="editor-field form-group">
                @Html.DropDownList("ProjectId", (IEnumerable<SelectListItem>)ViewBag.ProjectId, null,
                new { @disabled = "disabled", @class = "dropdown", @style = "width:99%;" })
                @Html.ValidationMessageFor(model => model.ProjectId, String.Empty, new { @class = "control-label" })
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.UserName, new { @class = "control-label" })
            </div>
            <div class="editor-field form-group">
                @Html.TextBoxFor(model => model.UserName, new {  @class = "form-control", @style="width:94%;", @disabled="disable" })
                @Html.ValidationMessageFor(model => model.UserName, String.Empty, new { @class = "control-label" })
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.OldPassword, new { @class = "control-label" })
            </div>
            <div class="editor-field form-group">
                @Html.PasswordFor(model => model.OldPassword, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.OldPassword, String.Empty, new { @class = "control-label" })
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.NewPassword, new { @class = "control-label" })
            </div>
            <div class="editor-field form-group">
                @Html.PasswordFor(model => model.NewPassword, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.NewPassword, String.Empty, new { @class = "control-label" })
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.ConfirmPassword, new { @class = "control-label" })
            </div>
            <div class="editor-field form-group">
                @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, String.Empty, new { @class = "control-label" })
            </div>
            <p>
                <input type="submit" value="Change" class="button" />                
                @Html.ActionLink("Back to Home", "Index", null, new { @style = "margin: 0px; vertical-align: bottom; float: right; padding-top: 15px;padding-right: 6px;", @class = "control-label" })
            </p>
            
        </div>
    </div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
