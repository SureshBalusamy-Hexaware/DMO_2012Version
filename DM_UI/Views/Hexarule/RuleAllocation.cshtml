@using Resources
@{
    ViewBag.Title = @DM_en_US.TabhdrRuleAllocation;
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="loadingprogress" align="center">
    Please wait.<br />
    <br />
    <img src="../Images/loader.gif" alt=" " />
</div>
<div class="content-body" style="width:100%;">
    <div style="width:98%;margin:auto;">
        <div class="group">
            <div class="form-group width-per-100 fL">
                <div>
                    <span class="control-label">Select Table</span>
                    <select id="ddlTables" class="dropdown" style="width:30%;"></select>
                </div>
            </div>
        </div>
        <div class="group">
            <div class="form-group width-per-100 fL">
                <div style="width:95%;">
                    <table id="grdRules" class="scroll"></table>
                    <div id="pgrRules" class="scroll"></div>
                </div>
            </div>
        </div>
        <div id="btndiv" class="group">
            @* Buttons Displaying*@
            <div class="form-group text-align-center form-group-btn width-per-100">
                <input class="form-button" type="button" value="Save" id="btnSaveAllocation">
                <input class="form-button" type="button" value="Reset" id="btnReset">
                <input class="form-button" type="button" value="Generate Code" id="btnGenerate">
                <input type="hidden" id="hdnSelectAllStatus" value="false" />
            </div>
        </div>
    </div>
</div>
<input type="hidden" value="@ViewData["ClientID"]" id="hdnClientId" />
<input type="hidden" value="@ViewData["ProjectID"]" id="hdnProjectId" />
<input type="hidden" value="@ViewData["DatabaseIP"]" id="hdnDatabaseIP" />
<input type="hidden" value="@ViewData["SourceTarget"]" id="hdnSourceTarget" />
<input type="hidden" value="@ViewData["DatabaseName"]" id="hdnDatabaseName" />
<input type="hidden" value="@ViewData["ConfigID"]" id="hdnConfigID" />
<style type="text/css">
    .modal {
        position: fixed;
        top: 0;
        left: 0;
        background-color: black;
        z-index: 99;
        opacity: 0.8;
        filter: alpha(opacity=80);
        -moz-opacity: 0.8;
        min-height: 100%;
        width: 100%;
    }

    .loadingprogress {
        font-family: Arial;
        font-size: 10pt;
        border: 5px solid #67CFF5;
        width: 200px;
        height: 100px;
        display: none;
        position: fixed;
        background-color: White;
        z-index: 999;
    }

    .myDialogClass .ui-widget-header {
        font-family: "open_sansregular", "Segoe UI", "Helvetica Neue", Helvetica, Arial, sans-serif;
        margin-bottom: 5px;
        font-size: 13px;
        letter-spacing: 0.3px !important;
        font-weight: normal;
    }

    .myDialogClass .ui-widget-content {
        background-color: #F3F3F3;
    }
</style>
<script type="text/javascript">
    var _ddlTables = "#ddlTables";
    var _grdRules = "#grdRules";
    var _pgrRules = "#pgrRules";
    var _btnSaveAllocation = "#btnSaveAllocation";
    var _btnReset = "#btnReset";
    var _btnGenerate = "#btnGenerate";

    var _hdnClientId = "#hdnClientId";
    var _hdnProjectId = "#hdnProjectId";
    var _hdnDatabaseIP = "#hdnDatabaseIP";
    var _hdnSourceTarget = "#hdnSourceTarget";
    var _hdnDatabaseName = "#hdnDatabaseName";
    var _hdnConfigID = "#hdnConfigID";
    var _hdnSelectAllStatus = "#hdnSelectAllStatus";

    var client_ID = $(_hdnClientId).val();
    var project_ID = $(_hdnProjectId).val();

    var DatabaseIP = $(_hdnDatabaseIP).val();
    var SourceTarget = $(_hdnSourceTarget).val();
    var DatabaseName = $(_hdnDatabaseName).val();
    var ConfigID = $(_hdnConfigID).val();
    var ServiceUrl;
    function ShowProgress() {
        setTimeout(function () {
            var modal = $('<div />');
            modal.addClass("modal");
            var loading = $(".loadingprogress");
            loading.show();
            var top = Math.max($(window).height() / 2 - loading[0].offsetHeight / 2, 0);
            var left = Math.max($(window).width() / 2 - loading[0].offsetWidth / 2, 0);
            loading.css({ top: top, left: left });
        }, 200);
    }

    function HideProgress() {
        setTimeout(function () {
            var modal = $('<div />');
            modal.addClass("modal");
            var loading = $(".loadingprogress");
            loading.hide();
            var top = Math.max($(window).height() / 2 - loading[0].offsetHeight / 2, 0);
            var left = Math.max($(window).width() / 2 - loading[0].offsetWidth / 2, 0);
            loading.css({ top: top, left: left });
        }, 200);
    }

    $(function () {

        var baseUrl = '@Url.Content("~/")';
        ServiceUrl = baseUrl + "api/HXRRuleAPI/MetaDataTable";



        $.ajax({
            type: "GET",
            url: ServiceUrl,
            data: { client_ID: client_ID, project_ID: project_ID, config_ID: ConfigID },
            dataType: 'json',
            success: function (data) {
                $.each(data, function (index, value) {
                    $(_ddlTables).append($('<option>').text(value).val(value));
                });
                GetTableRules();
            },
            error: function (xhr) {
                alert(xhr.statusText);
            }
        });



        $(_ddlTables).change(function () {
            GetTableRules();
        });
        $(_btnSaveAllocation).click(function () {
            var ActiveAttributeRuleId = new Array();
            var InActiveAttributeRuleId = new Array();
            var TableName = $(_ddlTables + " option:selected").text();
            var myGrid = $(_grdRules);

            var _rows = myGrid.jqGrid('getDataIDs');
            var selRowId = myGrid.jqGrid('getGridParam', 'selarrrow');

            var _IsModified = false;

            $.each(_rows, function (Index, Element) {
                if (myGrid.jqGrid('getCell', Element, 'status') == 1 && ($.inArray(Element, selRowId) != -1)) {
                    //do Nothing
                }
                else if (myGrid.jqGrid('getCell', Element, 'status') == 0 && ($.inArray(Element, selRowId) == -1)) {
                    //do Nothing
                }
                else _IsModified = true;
                if ($.inArray(Element, selRowId) == -1) {
                    InActiveAttributeRuleId.push(myGrid.jqGrid('getCell', Element, 'ruleid'));
                }
                else {
                    ActiveAttributeRuleId.push(myGrid.jqGrid('getCell', Element, 'ruleid'));
                }
            });
            if (InActiveAttributeRuleId.length == 0) InActiveAttributeRuleId.push(0);
            if (!_IsModified) {
                return false;
            }
            else {
                $.ajax({
                    type: "GET",
                    url: baseUrl + "api/HXRRuleAPI/UpdateVersionNumber",
                    dataType: 'json',
                    data: {
                        client_ID: client_ID,
                        project_ID: project_ID,
                        ActiveAttributeRuleId: ActiveAttributeRuleId.toString(),
                        InActiveAttributeRuleId: InActiveAttributeRuleId.toString(),
                        table_name: TableName
                    }
                });
            }
            GetTableRules();
        });
        $(_btnReset).click(function () {
            $(_ddlTables).prop('selectedIndex', 0);
            GetTableRules();
        });
        $(_btnGenerate).click(function () {

            var TableName = $(_ddlTables + " option:selected").text();
            ShowProgress();
            $.ajax({
                type: "GET",
                url: baseUrl + "api/HXRRuleAPI/GenerateObjects",
                dataType: 'json',
                data: { client_ID: client_ID, project_ID: project_ID, table_name: TableName, ConfigId: ConfigID },
                success: function (data) {
                    if (data == "Success")
                        alert("Code generated successfully.");
                    else
                        alert(data);
                    HideProgress();
                },
                error: function (xhr) {
                    alert(xhr.statusText);
                    HideProgress();
                }
            });
        });

    });
    function GetTableRules() {
        var baseUrl = '@Url.Content("~/")';

        var TableName = $(_ddlTables + " option:selected").text();
        //var myGrid = $(_grdRules);
        //var ruleId;
        var Column_Name = "";
        var Rule_TypeID = 0;

        var statuscode, msg;

        ServiceUrl = baseUrl + "api/HXRRuleAPI/CheckKeyColumn";
        var result = $.ajax({
            url: ServiceUrl,
            data: { client_ID: client_ID, project_ID: project_ID, table_Name: TableName, config_Id: ConfigID },
            async: false,
            success: function (data) {
                //statuscode = data.statuscode;
                //msg = data.message;
            },
            error: function (xhr) {
                alert(xhr.statusText);
            }
        }).responseText;
        result = jQuery.parseJSON(result);
        if (result.statuscode != '1') {
            alert('Key Column does not found for selected table. you must define Key Column.');
            $("#btndiv").hide();
            $(_grdRules).GridUnload();
            return false;
        }

        $("#btndiv").show();
        ServiceUrl = baseUrl + "api/HXRRuleAPI/GetAllocationRuleAttributes";
        $(_grdRules).GridUnload();
        $grid = jQuery(_grdRules).jqGrid({
            mytype: 'POST',
            datatype: 'json',
            url: ServiceUrl,
            height: 200,
            width: 900,
            autowidth: true,
            shrinkToFit: true,
            rowNum: 1000,
            rowList: [1000, 3000, 10000],
            postData: { client_ID: client_ID, project_ID: project_ID, Table_Name: TableName, Column_Name: Column_Name, Rule_TypeID: Rule_TypeID },
            colNames: ['Rule_ID', 'Column Name', '@DM_en_US.lblRuleCategory', '@DM_en_US.lblRuleType', 'Rule', 'Rule Desc', 'Rule Condition', 'Error Description', 'Status',
                'Version_No', 'Start Date', 'End Date'],
            colModel: [
            { name: 'ruleid', index: 'ruleid', type: 'long', width: 100, sorttype: 'long' },
            { name: 'columnname', index: 'columnname', width: 100 },
            { name: 'rulecategory', index: 'rulecategory', width: 100 },
            { name: 'ruletype', index: 'ruletype', width: 100 },
            { name: 'rule', index: 'rule', width: 100 },
            { name: 'ruledesc', index: 'ruledesc', width: 100, hidden: true },
            { name: 'rulecondition', index: 'rulecondition', width: 100 },
            { name: 'errordesc', index: 'errordesc', width: 100 },
            { name: 'status', index: 'status', width: 40 },
            { name: 'versionno', index: 'versionno', width: 100 },
            { name: 'startdate', index: 'startdate', width: 100, formatter: 'date', formatoptions: { srcformat: 'm/d/Y', newformat: 'm/d/Y' } },
            { name: 'enddate', index: 'enddate', width: 100, formatter: 'date', formatoptions: { srcformat: 'm/d/Y', newformat: 'm/d/Y' } }
            ],
            multiselect: true,
            pager: _pgrRules,
            viewrecords: true,
            gridview: true,
            scrollOffset: 0,
            reloadAfterSubmit: true,
            showButtonPanel: true,
            //loadui: "disable",
            loadComplete: function () {
                var rows = $(_grdRules).jqGrid('getDataIDs');
                for (i = 0; i < rows.length; i++) {
                    var rowData = $(_grdRules).getRowData(rows[i]);
                    var activeflag = rowData.status;

                    if (activeflag == 1) {
                        $grid.jqGrid('setSelection', rows[i], true);
                    }
                }
            },
            gridComplete: function () {
                $(this).prop('p').loadui = 'enable';
            },
            onSelectRow: function (rowId, status) {
            },
            onSelectAll: function (aRowids, status) {
                $(_hdnSelectAllStatus).val(status);
            },
            caption: 'Rules Defined on Selected Table'
        });

        jQuery(_grdRules).jqGrid('navGrid', _pgrRules, { edit: false, add: false, search: true, del: false, search: false },
        {
            afterShowSearch: function (form) {
                $('.ui-search', form).click(function () {
                });
            }
        }
        );
        jQuery(_grdRules).jqGrid('sortableRows');
        jQuery(_btnSaveAllocation).click(function () {
            jQuery(_grdRules).setGridParam({ datatype: 'json' });
            jQuery(_grdRules).trigger("reloadGrid");
        });


    }
</script>