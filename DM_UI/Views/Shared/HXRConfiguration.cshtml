@{
    ViewBag.Title = "Configuration";
    //Layout = "~/Views/Shared/_Layout.cshtml";
}
<style type="text/css">
    .modal {
        position: fixed;
        top: 0;
        left: 0;
        background-color: black;
        z-index: 99;
        opacity: 0.8;
        filter: alpha(opacity=80);
        -moz-opacity: 0.8;
        min-height: 100%;
        width: 100%;
    }

    .loading {
        font-family: Arial;
        font-size: 10pt;
        border: 5px solid #67CFF5;
        width: 200px;
        height: 100px;
        display: none;
        position: fixed;
        background-color: White;
        z-index: 999;
    }

    .morelink {
        display: block;
        cursor: pointer;
        text-align: right;
    }

        .morelink:hover {
            color: #1779dd;
        }

    .more {
        display: none;
    }
</style>
<script lang="ja" type="text/javascript">
    var _IsAdmin;
    $(document).ready(function () {
        var baseUrl = '@Url.Content("~/")';
        var _ConfigEntity = JSON.parse('@Html.Raw(Json.Encode(ViewData["HXRSrcConfigurationMSEntity"]))');
        var _ConfigTgtEntity = JSON.parse('@Html.Raw(Json.Encode(ViewData["HXRTgtConfigurationMSEntity"]))');
        var _ToolId = JSON.parse('@Html.Raw(Json.Encode(ViewData["ToolID"]))');
        _IsAdmin = JSON.parse('@Html.Raw(Json.Encode(ViewData["IsAdmin"]))');


        $.ajax({
            type: "GET",
            url: baseUrl + "Home/GetRoles",
            data: { Client_ID: $("#hdnClientId").val(), Project_ID: $("#hdnProjectId").val() },
            dataType: 'json',
            cache: false,
            success: function (data) {
                //IsAdmin - true
                if (data != null && data.Status != 0) {

                    //Fill roles dropdown
                    var cell;
                    $('#ddlroles').html('');
                    $.each(data.rows, function (index, value) {
                        cell = $.parseJSON(JSON.stringify(data.rows[index].cell));
                        $('#ddlroles').append($('<option>').text(cell[1]).val(cell[0]));
                    });

                    //Show roles dropdown
                    $("#divroles").show();
                    $("#btnTestDBcon").show();
                    $("#btnSave").show();

                    $('#btnSave').prop('disabled', true);
                    $('#btnImportMetaData').prop('disabled', true);
                    $('#btnGenerateMap').hide();


                    $('#ddlroles').change();
                    //alert($("#hdnConfigID").val());

                }
                else {

                    //Hide roles dropdown
                    $("#divroles").hide();
                    $("#btnTestDBcon").hide();
                    $("#btnSave").hide();

                    $('#btnImportMetaData').prop('disabled', false);
                    $('#btnGenerateMap').hide();
                    PopulateFields();
                    LoadSchemaTablesDropDown();
                    DisableControls();
                    ControlVisibilityToUser();
                }

            },
            error: function (xhr) {

                //alert(xhr.statusText);
            }
        });
        //Show target
        if (_ToolId != 7 && _ToolId != 11) {
            $("#divTarget").show();
        }
        else {
            $("#divTarget").hide();
        }

        $('#ddlroles').change(function () {
            var RoleId = $(this).val();

            var roles =
        $.ajax({
            url: baseUrl + "api/ConfigMS/GetConfigDetailsByRole",
            data: { RoleId: RoleId },
            async: false,
            success: function (data, result) { if (!result) alert('Failure to retrieve the Categories.'); }
        }).responseText;
            roles = jQuery.parseJSON(roles);

            if (roles.Source != null)
                _ConfigEntity.Data = roles.Source;

            if (roles.Target != null) _ConfigTgtEntity.Data = roles.Target;

            PopulateFields();
            $('#dvSrcTable').hide();
            $('#dvTgtTable').hide();
        });
        function PopulateFields() {
            //Populate config details
            if (_ConfigEntity != null) {

               
                $("#hdnConfigID").val(_ConfigEntity.Data.Config_ID);

                $("#txtSrcSchemaName").val(_ConfigEntity.Data.SchemaName);
                $("#txtSrcServerName").val(_ConfigEntity.Data.ServerName);
                $("#txtSrcSchemaPassword").val(_ConfigEntity.Data.SchemaPassword);
                $("#txtSrcServerIP").val(_ConfigEntity.Data.ServerIPAddress);
                $("#ddlSrcStatus").val(_ConfigEntity.Data.ActiveFlag);
                $("#txtSrcServerPort").val(_ConfigEntity.Data.ServerPort);
                $("#txtSrcOSUser").val(_ConfigEntity.Data.OSUserName);
                $("#txtSrcDBUserName").val(_ConfigEntity.Data.DataBaseName);
                $("#txtSrcOSPassword").val(_ConfigEntity.Data.OSPassword);
                $("#txtSrcDBUserPassword").val(_ConfigEntity.Data.DataBasePassword);
                $("#ddlSrcDBType").val(_ConfigEntity.Data.DBType);
            }

            if (_ConfigTgtEntity != null) {

                $("#hdntrtClientId").val(_ConfigTgtEntity.Data.Project.Client.ClientID);
                $("#hdntrtProjectId").val(_ConfigTgtEntity.Data.Project.ProjectID);
                $("#hdntrtConfigID").val(_ConfigTgtEntity.Data.Config_ID);

                $("#txtTgtSchemaName").val(_ConfigTgtEntity.Data.SchemaName);
                $("#txtTgtServerName").val(_ConfigTgtEntity.Data.ServerName);
                $("#txtTgtSchemaPassword").val(_ConfigTgtEntity.Data.SchemaPassword);
                $("#txtTgtServerIP").val(_ConfigTgtEntity.Data.ServerIPAddress);
                $("#ddlTgtStatus").val(_ConfigTgtEntity.Data.ActiveFlag);
                $("#txtTgtServerPort").val(_ConfigTgtEntity.Data.ServerPort);
                $("#txtTgtOSUser").val(_ConfigTgtEntity.Data.OSUserName);
                $("#txtTgtDBUserName").val(_ConfigTgtEntity.Data.DataBaseName);
                $("#txtTgtOSPassword").val(_ConfigTgtEntity.Data.OSPassword);
                $("#txtTgtDBUserPassword").val(_ConfigTgtEntity.Data.DataBasePassword);
                $("#ddlTgtDBType").val(_ConfigTgtEntity.Data.DBType);
            }
        }
    });

    function ResetControls() {

        $("#txtSrcSchemaName").val("");
        $("#txtSrcServerName").val("");
        $("#txtSrcSchemaPassword").val("");
        $("#txtSrcServerIP").val("");
        $("#ddlSrcStatus").val("Active");
        $("#txtSrcServerPort").val("");
        $("#txtSrcOSUser").val("");
        $("#txtSrcDBUserName").val("");
        $("#txtSrcOSPassword").val("");
        $("#txtSrcDBUserPassword").val("");
        $("#ddlSrcDBType").val("SQL SERVER");

        $("#txtTgtSchemaName").val("");
        $("#txtTgtServerName").val("");
        $("#txtTgtSchemaPassword").val("");
        $("#txtTgtServerIP").val("");
        $("#ddlTgtStatus").val("Active");
        $("#txtTgtServerPort").val("");
        $("#txtTgtOSUser").val("");
        $("#txtTgtDBUserName").val("");
        $("#txtTgtOSPassword").val("");
        $("#txtTgtDBUserPassword").val("");
        $("#ddlTgtDBType").val("SQL SERVER");

        $('#dvSrcTable').empty();
        $('#dvTgtTable').empty();
        $('#dvSrcTable').hide();
        $('#dvTgtTable').hide();
        $('#btnSave').prop('disabled', true);
        $('#btnImportMetaData').prop('disabled', true);
        $('#btnGenerateMap').hide();
    }

    function DisableControls() {

        $("#txtSrcSchemaName, #txtSrcServerName, #txtSrcSchemaPassword, #txtSrcServerIP, #ddlSrcStatus, #txtSrcServerPort").prop('disabled', true);
        $("#txtSrcOSUser, #txtSrcOSUser, #txtSrcDBUserName, #txtSrcOSPassword, #txtSrcDBUserPassword, #ddlSrcDBType").prop('disabled', true);
        
        $("#txtTgtSchemaName, #txtTgtServerName, #txtTgtSchemaPassword, #txtTgtServerIP, #ddlTgtStatus, #txtTgtServerPort").prop('disabled', true);
        $("#txtTgtOSUser, #txtTgtDBUserName, #txtTgtOSPassword, #txtTgtDBUserPassword, #ddlTgtDBType").val("SQL SERVER").prop('disabled', true);

        //$('#dvSrcTable').empty();
        //$('#dvTgtTable').empty();
        //$('#dvSrcTable').hide();
        //$('#dvTgtTable').hide();
        //$('#btnSave').prop('disabled', true);
        //$('#btnImportMetaData').prop('disabled', true);
        //$('#btnGenerateMap').hide();
    }


    function ControlVisibilityToUser() {

        $("#txtSrcSchemaName, #txtSrcServerName").show();
        $("#divshowmore, #lblSrcServerIP, #lblSrcServerPort, #txtSrcSchemaPassword, #txtSrcServerIP, #ddlSrcStatus, #txtSrcServerPort,#txtSrcOSUser, #txtSrcOSUser, #txtSrcDBUserName, #txtSrcOSPassword, #txtSrcDBUserPassword, #ddlSrcDBType").hide();

        $("#txtTgtSchemaName, #txtTgtServerName").show();
        $("#lblTgtServerIP, #lblTgtServerPort,#txtTgtSchemaPassword, #txtTgtServerIP, #ddlTgtStatus, #txtTgtServerPort,#txtTgtOSUser, #txtTgtDBUserName, #txtTgtOSPassword, #txtTgtDBUserPassword, #ddlTgtDBType").val("SQL SERVER").hide();
        
    }

    function ClientValidation() {

        var Isvalid = true;

        if (hdnToolID.value != 7 && hdnToolID.value != 11) {
            $(".form-control").each(function (index, Obj) {

                if ($(Obj).val() == "" && $(Obj).is(":visible"))
                    Isvalid = false;
            });
        }
        else {
            $("#divSource .form-control").each(function (index, Obj) {
                if ($(Obj).val() == "" && $(Obj).is(":visible"))
                    Isvalid = false;
            });
        }
        return Isvalid;
    }

    function ImportMetaData() {

        var ToolID = $("#hdnToolID").val();
        var SourceTableList = $("#ddlSrcTable").multipleSelect("getSelects");
        var TargetTableList = $("#ddlTgtTable").multipleSelect("getSelects");

        if (ToolID == 1) {
            if (SourceTableList.length == 0 && TargetTableList.length == 0) {
                alert("All the fields are mandatory.");
                return;
            }
        }
        else {
            if (SourceTableList.length == 0) {
                alert("All the fields are mandatory.");
                return;
            }
        }

        ShowProgress();

        var baseUrl = '@Url.Content("~/")';
        var ClientId = $("#hdnClientId").val();
        var ProjectId = $("#hdnProjectId").val();
        var ConfigID = $("#hdnConfigID").val();

        var mResultSourceTableList = "ALL";
        var mResultTargetTableList = "ALL";

        var TgtTableCount = $('#hdntrtTableCount').val();
        var srcTableCount = $('#hdnsrcTableCount').val();

        var SrcselectedCount = SourceTableList.length;
        var TgtselectedCount = TargetTableList.length;

        if (srcTableCount != SrcselectedCount) {
            mResultSourceTableList = SourceTableList.join(",");
        }

        if (TgtTableCount != TgtselectedCount) {
            mResultTargetTableList = TargetTableList.join(",");
        }
        //alert($("#hdnConfigID").val());

        var ImportMetaDataEntity = {
            ClientID: ClientId,
            ProjectID: ProjectId,
            Config_ID: ConfigID,
            IPAddress: $("#txtSrcServerIP").val(),
            DBName: $("#txtSrcSchemaName").val(),
            SourceTarget: "SOURCE",
            LastModifiedBy: "Hexaware",
            TablenameList: mResultSourceTableList,
            StatusCode: "",
            Message: "",
            GenerateMap: ""

        };
        $.ajax({
            type: "POST",
            data: JSON.stringify(ImportMetaDataEntity),
            url: baseUrl + "Api/ConfigMS/ImportPost",
            dataType: "json",
            contentType: "application/json",
            success: function (data) {

                @*var GenerateMap = '@Session["GenerateMap"]';

                alert(GenerateMap);

                if (GenerateMap.length > 0) {
                    $('#btnGenerateMap').show();
                    alert("Import Meta Data completed successfully.");
                }*@
                //if (ToolID != 1) {
                if (ToolID != 1) {

                    HideProgress();
                    //alert("Import Meta Data completed successfully.");
                    alert(data);
                }
                if (ToolID == 11 || ToolID == 1) {
                    $('#btnGenerateMap').show();
                }
                if (ToolID == 11) {
                    $('#btnGenerateMap').attr('value', 'Generate Profile');
                }
            },
            error: function (xhr) {
                HideProgress();
            }
        });

        if (ToolID == 1 || ToolID == 4) {
            var trtClientId = $("#hdntrtClientId").val();
            var trtProjectId = $("#hdntrtProjectId").val();
            var trtConfigID = $("#hdntrtConfigID").val();

            var ImporttrtMetaDataEntity = {
                ClientID: trtClientId,
                ProjectID: trtProjectId,
                Config_ID: trtConfigID,
                IPAddress: $("#txtTgtServerIP").val(),
                DBName: $("#txtTgtSchemaName").val(),
                SourceTarget: "TARGET",
                LastModifiedBy: "Hexaware",
                TablenameList: mResultTargetTableList,
                StatusCode: "",
                Message: "",
                GenerateMap: ""
            };
            $.ajax({
                type: "POST",
                data: JSON.stringify(ImporttrtMetaDataEntity),
                url: baseUrl + "Api/ConfigMS/ImportPost",
                dataType: "json",
                contentType: "application/json",
                success: function (data) {
                    @*var GenerateMap = '@Session["GenerateMap"]';*@
                    @*var GenerateMap = '@Request.RequestContext.HttpContext.Session["GenerateMap"]';*@

                    //alert(GenerateMap);
                    //if (GenerateMap.length > 0) {
                    //    $('#btnGenerateMap').show();
                    //    alert("Import Meta Data completed successfully.");
                    //}
                    HideProgress();

                    // $('#btnGenerateMap').show();
                    //alert("Import Meta Data completed successfully.");
                    //alert(data);
                },
                error: function (xhr) {
                    HideProgress();
                    //alert(xhr.statusText);
                }
            });

        }
    }

    function ShowProgress() {
        setTimeout(function () {
            var modal = $('<div />');
            modal.addClass("modal");
            var loading = $(".loading");
            loading.show();
            var top = Math.max($(window).height() / 2 - loading[0].offsetHeight / 2, 0);
            var left = Math.max($(window).width() / 2 - loading[0].offsetWidth / 2, 0);
            loading.css({ top: top, left: left });
        }, 200);
    }

    function HideProgress() {
        setTimeout(function () {
            var modal = $('<div />');
            modal.addClass("modal");
            var loading = $(".loading");
            loading.hide();
            var top = Math.max($(window).height() / 2 - loading[0].offsetHeight / 2, 0);
            var left = Math.max($(window).width() / 2 - loading[0].offsetWidth / 2, 0);
            loading.css({ top: top, left: left });
        }, 200);
    }

    function TestConnection() {
        var baseUrl = '@Url.Content("~/")';

        if (!ClientValidation()) {
            alert("All the fields are mandatory.");
            return;
        }

        var DataSource = [$("#txtSrcServerIP").val(), $("#txtTgtServerIP").val()];
        var UserID = [$("#txtSrcDBUserName").val(), $("#txtTgtDBUserName").val()];
        var Password = [$("#txtSrcDBUserPassword").val(), $("#txtTgtDBUserPassword").val()];
        var SchemaName = [$("#txtSrcSchemaName").val(), $("#txtTgtSchemaName").val()];

        //var Url = 'Api/ConfigMS/Get/?DataSource=' + DataSource + '&UserID=' + UserID + '&Password=' + Password + '&SchemaName=' + SchemaName;
        var Url = baseUrl + 'Api/ConfigMS/Get';
        $.ajax({
            url: Url,
            data: {
                DataSource: [$("#txtSrcServerIP").val(), $("#txtTgtServerIP").val()],
                UserID: [$("#txtSrcDBUserName").val(), $("#txtTgtDBUserName").val()],
                Password: [$("#txtSrcDBUserPassword").val(), $("#txtTgtDBUserPassword").val()],
                SchemaName: [$("#txtSrcSchemaName").val(), $("#txtTgtSchemaName").val()]
            },
            type: 'GET',
            dataType: "json",
            success: function (data) {
                //LoadSchemaTablesDropDown();
                $('#btnSave').prop('disabled', false);
                alert(data);
            },
            error: function (xhr) {
                alert("Test Connection Failed!");
            }
        });
    }

    function LoadSchemaTablesDropDown() {
        var _ToolId = JSON.parse('@Html.Raw(Json.Encode(ViewData["ToolID"]))');

        var baseUrl = '@Url.Content("~/")';

        $('#ddlSrcTable').empty();
        $('#ddlTgtTable').empty();
        $('#dvSrcTable').show();
        $('#dvTgtTable').show();
        $('#btnSave').prop('disabled', false);

        
        if ($("#txtSrcServerIP").val() != '' && $("#txtSrcSchemaName").val() != '') {

            //Source Schema Tables
            $.ajax({
                type: "GET",
                url: baseUrl + "api/HXRRuleAPI/GetMetaDataTableList",
                data: { dataSource: $("#txtSrcServerIP").val(), databaseName: $("#txtSrcSchemaName").val() },
                dataType: 'json',
                success: function (data) {
                    $('#hdnsrcTableCount').val(data.length);
                    $.each(data, function (index, value) {
                        $('#ddlSrcTable').append($('<option>').text(value).val(value));
                        $('#ddlSrcTable').multipleSelect("refresh");
                    });

                    SetSelections();
                },
                error: function (xhr) {
                    alert(xhr.statusText);
                }
            });
        }
        //Target Schema Tables
        if (_ToolId != 7 && _ToolId != 11) {
            if ($("#txtTgtServerIP").val() != '' && $("#txtTgtSchemaName").val() != '') {
                $.ajax({
                    type: "GET",
                    url: baseUrl + "api/HXRRuleAPI/GetMetaDataTableList",
                    data: { dataSource: $("#txtTgtServerIP").val(), databaseName: $("#txtTgtSchemaName").val() },
                    dataType: 'json',
                    success: function (data) {

                        $('#hdntrtTableCount').val(data.length);

                        $.each(data, function (index, value) {
                            $('#ddlTgtTable').append($('<option>').text(value).val(value));
                            $('#ddlTgtTable').multipleSelect("refresh");
                        });
                    },
                    error: function (xhr) {
                        alert(xhr.statusText);
                    }
                });
            }
        }

    }

    function SaveConfig() {
        var baseUrl = '@Url.Content("~/")';
        var ToolID = $("#hdnToolID").val();

        if (!ClientValidation()) {
            alert("All the fields are mandatory.");
            return;
        }

        ShowProgress();
        var HXRConfigurationMSEntity = [{
            Project: {
                ProjectID: $("#hdnProjectId").val(),
                ProjectDescription: "",
                Client: {
                    ClientID: $("#hdnClientId").val(),
                    ClientName: "",
                    ActiveFlag: "",
                    LastModifiedDate: Date.now,
                    LastModifiedBy: ""
                },
                ActiveFlag: "",
                ModifiedDate: Date.now,
                ModifiedBy: ""
            },
            SourceTarget: "SOURCE",
            ToolID: ToolID,
            RoleId: $("#ddlroles").val(),
            DBType: $("#ddlSrcDBType").val(),
            ServerName: $("#txtSrcServerName").val(),
            ServerIPAddress: $("#txtSrcServerIP").val(),
            ServerPort: $("#txtSrcServerPort").val(),
            DataBaseName: $("#txtSrcDBUserName").val(),
            DataBasePassword: $("#txtSrcDBUserPassword").val(),
            SchemaName: $("#txtSrcSchemaName").val(),
            SchemaPassword: $("#txtSrcSchemaPassword").val(),
            ActiveFlag: $("#ddlSrcStatus").val(),
            OSUserName: $("#txtSrcOSUser").val(),
            OSPassword: $("#txtSrcOSPassword").val(),
            LastModifiedDate: Date.now(),
            LastModifiedBy: ""
        }];

        //Show target
        if (ToolID != 7 && ToolID != 11) {
            HXRConfigurationMSEntity.push({
                Project:
                    {
                        ProjectID: $("#hdnProjectId").val(),
                        ProjectDescription: "",
                        Client:
                            {
                                ClientID: $("#hdnClientId").val(),
                                ClientName: "",
                                ActiveFlag: "",
                                LastModifiedDate: Date.now,
                                LastModifiedBy: ""
                            },
                        ActiveFlag: "",
                        ModifiedDate: Date.now,
                        ModifiedBy: ""
                    },
                SourceTarget: "TARGET",
                ToolID: ToolID,
                RoleId: $("#ddlroles").val(),
                DBType: $("#ddlTgtDBType").val(),
                ServerName: $("#txtTgtServerName").val(),
                ServerIPAddress: $("#txtTgtServerIP").val(),
                ServerPort: $("#txtTgtServerPort").val(),
                DataBaseName: $("#txtTgtDBUserName").val(),
                DataBasePassword: $("#txtTgtDBUserPassword").val(),
                SchemaName: $("#txtTgtSchemaName").val(),
                SchemaPassword: $("#txtTgtSchemaPassword").val(),
                ActiveFlag: $("#ddlTgtStatus").val(),
                OSUserName: $("#txtTgtOSUser").val(),
                OSPassword: $("#txtTgtOSPassword").val(),
                LastModifiedDate: Date.now(),
                LastModifiedBy: ""
            });
        }

        $.ajax({
            type: "POST",
            data: JSON.stringify(HXRConfigurationMSEntity),
            url: baseUrl + "Api/ConfigMS/Post/",
            dataType: "json",
            contentType: "application/json",
            success: function (data) {
                HideProgress();
                //if (data == "Success") {
                alert(data);
                $('#btnImportMetaData').prop('disabled', false);

                //}
                //else
                //alert("Saving failed.");
                GetConfigBySourceTarget();
                LoadSchemaTablesDropDown();

            }
        });

    }

    function GetConfigBySourceTarget() {
        var ClientId = $("#hdnClientId").val();
        var ProjectId = $("#hdnProjectId").val();
        var baseUrl = '@Url.Content("~/")';
        var ToolID = $("#hdnToolID").val();

        $.ajax({
            type: 'GET',
            //url: '@Url.Action("GetConfigBySourceTarget")',
            url: baseUrl + 'api/HXRRuleAPI/GetConfigBySourceTarget',
            dataType: 'json',
            cache: false,
            data: { ClientID: ClientId, ProjectID: ProjectId, SourceTarget: "TARGET", ToolID: ToolID, RoleId: $("#ddlroles").val() },
            success: function (data) {
                
                if (data != null) {
                    $("#txtTgtSchemaName").val(data.SchemaName);
                    $("#txtTgtServerName").val(data.ServerName);
                    $("#txtTgtSchemaPassword").val(data.SchemaPassword);
                    $("#txtTgtServerIP").val(data.ServerIPAddress);
                    $("#ddlTgtStatus").val(data.ActiveFlag);
                    $("#txtTgtServerPort").val(data.ServerPort);
                    $("#txtTgtOSUser").val(data.OSUserName);
                    $("#txtTgtDBUserName").val(data.DataBaseName);
                    $("#txtTgtOSPassword").val(data.OSPassword);
                    $("#txtTgtDBUserPassword").val(data.DataBasePassword);
                    $("#ddlTgtDBType").val(data.DBType);

                    if (_IsAdmin == "Yes") {
                        $("#hdntrtConfigID").val(data.Config_ID);
                    }

                }
                else {
                    $("#txtTgtSchemaName").val("");
                    $("#txtTgtServerName").val("");
                    $("#txtTgtSchemaPassword").val("");
                    $("#txtTgtServerIP").val("");
                    $("#ddlTgtStatus").val("Active");
                    $("#txtTgtServerPort").val("");
                    $("#txtTgtOSUser").val("");
                    $("#txtTgtDBUserName").val("");
                    $("#txtTgtOSPassword").val("");
                    $("#txtTgtDBUserPassword").val("");
                    $("#ddlTgtDBType").val("SQL SERVER");
                }
            },
            error: function (xhr) {
                $("#txtTgtSchemaName").val("");
                $("#txtTgtServerName").val("");
                $("#txtTgtSchemaPassword").val("");
                $("#txtTgtServerIP").val("");
                $("#ddlTgtStatus").val("Active");
                $("#txtTgtServerPort").val("");
                $("#txtTgtOSUser").val("");
                $("#txtTgtDBUserName").val("");
                $("#txtTgtOSPassword").val("");
                $("#txtTgtDBUserPassword").val("");
                $("#ddlTgtDBType").val("SQL SERVER");
            }
        });

        $.ajax({
            type: 'GET',
            //url: '@Url.Action("GetConfigBySourceTarget")',
            url: baseUrl + 'api/HXRRuleAPI/GetConfigBySourceTarget',
            dataType: 'json',
            //data: { ClientID: ClientId, ProjectID: ProjectId, SourceTarget: $("#ddlSourceTarget").val(), ToolID: ToolID },
            data: { ClientID: ClientId, ProjectID: ProjectId, SourceTarget: "SOURCE", ToolID: ToolID, RoleId: $("#ddlroles").val() },
            success: function (data) {
                if (data != null) {
                    $("#txtSrcSchemaName").val(data.SchemaName);
                    $("#txtSrcServerName").val(data.ServerName);
                    $("#txtSrcSchemaPassword").val(data.SchemaPassword);
                    $("#txtSrcServerIP").val(data.ServerIPAddress);
                    $("#ddlSrcStatus").val(data.ActiveFlag);
                    $("#txtSrcServerPort").val(data.ServerPort);
                    $("#txtSrcOSUser").val(data.OSUserName);
                    $("#txtSrcDBUserName").val(data.DataBaseName);
                    $("#txtSrcOSPassword").val(data.OSPassword);
                    $("#txtSrcDBUserPassword").val(data.DataBasePassword);
                    $("#ddlSrcDBType").val(data.DBType);

                    if (_IsAdmin == "Yes") {
                        $("#hdnConfigID").val(data.Config_ID);
                    }
                }
                else {
                    $("#txtSrcSchemaName").val("");
                    $("#txtSrcServerName").val("");
                    $("#txtSrcSchemaPassword").val("");
                    $("#txtSrcServerIP").val("");
                    $("#ddlSrcStatus").val("Active");
                    $("#txtSrcServerPort").val("");
                    $("#txtSrcOSUser").val("");
                    $("#txtSrcDBUserName").val("");
                    $("#txtSrcOSPassword").val("");
                    $("#txtSrcDBUserPassword").val("");
                    $("#ddlSrcDBType").val("SQL SERVER");
                }
            },
            error: function (xhr) {
                $("#txtSrcSchemaName").val("");
                $("#txtSrcServerName").val("");
                $("#txtSrcSchemaPassword").val("");
                $("#txtSrcServerIP").val("");
                $("#ddlSrcStatus").val("Active");
                $("#txtSrcServerPort").val("");
                $("#txtSrcOSUser").val("");
                $("#txtSrcDBUserName").val("");
                $("#txtSrcOSPassword").val("");
                $("#txtSrcDBUserPassword").val("");
                $("#ddlSrcDBType").val("SQL SERVER");
            }
        });
    }

    function SetSelections() {

        baseUrl = '@Url.Content("~/")';

        $.ajax({
            type: "GET",
            url: baseUrl + "api/AutomatAPI/GetMetaDataTableNames",
            data: { client_ID: $("#hdnClientId").val(), project_ID: $("#hdnProjectId").val(), config_ID: $("#hdnConfigID").val() },
            dataType: 'json',
            success: function (data) {

                //$.each(data, function (index, item) {
                //    data[index] = item.toUpperCase();
                //});

                $("#ddlSrcTable").multipleSelect("setSelects", data);
            }

        });


        $.ajax({
            type: "GET",
            url: baseUrl + "api/AutomatAPI/GetMetaDataTableNames",
            data: { client_ID: $("#hdnClientId").val(), project_ID: $("#hdnProjectId").val(), config_ID: $("#hdntrtConfigID").val() },
            dataType: 'json',
            success: function (data) {
                
                //$.each(data, function (index, item) {
                //    data[index] = item.toUpperCase();
                //});

                $("#ddlTgtTable").multipleSelect("setSelects", data);
            }

        });

    }


    function GenerateMap(GenerateMap) {

        var ToolID = $("#hdnToolID").val();
        var SourceTableList = $("#ddlSrcTable").multipleSelect("getSelects");
        var TargetTableList = $("#ddlTgtTable").multipleSelect("getSelects");

        if (ToolID == 1) {
            if (SourceTableList.length == 0 && TargetTableList.length == 0) {
                alert("All the fields are mandatory.");
                return;
            }
        }
        else {
            if (SourceTableList.length == 0) {
                alert("All the fields are mandatory.");
                return;
            }
        }

        ShowProgress();

        var baseUrl = '@Url.Content("~/")';
        var ClientId = $("#hdnClientId").val();
        var ProjectId = $("#hdnProjectId").val();
        var ConfigID = $("#hdnConfigID").val();

        var mResultSourceTableList = "ALL";
        var mResultTargetTableList = "ALL";

        var TgtTableCount = $('#hdntrtTableCount').val();
        var srcTableCount = $('#hdnsrcTableCount').val();

        var SrcselectedCount = SourceTableList.length;
        var TgtselectedCount = TargetTableList.length;

        if (srcTableCount != SrcselectedCount) {
            mResultSourceTableList = SourceTableList.join(",");
        }

        if (TgtTableCount != TgtselectedCount) {
            mResultTargetTableList = TargetTableList.join(",");
        }

        var ImportMetaDataEntity = {
            ClientID: ClientId,
            ProjectID: ProjectId,
            Config_ID: ConfigID,
            IPAddress: $("#txtSrcServerIP").val(),
            DBName: $("#txtSrcSchemaName").val(),
            SourceTarget: "SOURCE",
            LastModifiedBy: "Hexaware",
            TablenameList: mResultSourceTableList,
            StatusCode: "",
            Message: ""
        };
        $.ajax({
            type: "POST",
            data: JSON.stringify(ImportMetaDataEntity),
            url: baseUrl + "Api/ConfigMS/GeneratePost",
            dataType: "json",
            contentType: "application/json",
            success: function (data) {
                @*var StatusCode = '@Session["StatusCode"]';
                alert(StatusCode);*@
                if (ToolID != 1) {
                    HideProgress();
                    alert("Auto Template created.");// for 13 tables");
                }
            },
            error: function (xhr) {
                HideProgress();
            }
        });

        if (ToolID == 1 || ToolID == 4) {
            var trtClientId = $("#hdntrtClientId").val();
            var trtProjectId = $("#hdntrtProjectId").val();
            var trtConfigID = $("#hdntrtConfigID").val();

            var ImporttrtMetaDataEntity = {
                ClientID: trtClientId,
                ProjectID: trtProjectId,
                Config_ID: trtConfigID,
                IPAddress: $("#txtTgtServerIP").val(),
                DBName: $("#txtTgtSchemaName").val(),
                SourceTarget: "TARGET",
                LastModifiedBy: "Hexaware",
                TablenameList: mResultTargetTableList,
                StatusCode: "",
                Message: ""
            };
            $.ajax({
                type: "POST",
                data: JSON.stringify(ImporttrtMetaDataEntity),
                url: baseUrl + "Api/ConfigMS/GeneratePost",
                dataType: "json",
                contentType: "application/json",
                success: function (data) {
                    @*var StatusCode = '@Session["StatusCode"]';
                    alert(StatusCode);*@
                    HideProgress();
                    alert("Master Template created for " + data.tableCount + " tables.");
                },
                error: function (xhr) {
                    HideProgress();
                    //alert(xhr.statusText);
                }
            });

        }
    }
</script>

<div class="content-body width-per-100">
    <div id="divroles" style="width: 60%;margin: 0 auto;float:none;" class="group">
        <div class="col-40" style="width: 97%;">            
            <div class="form-group width-per-100">
                <span style="font-size: 12px; font-family: arial; font-weight: bold;">Role</span>
                <select id="ddlroles" class="dropdown" style="width:44%;"></select>
            </div>
        </div>
    </div>
    <div class="group" style="width: 60%;margin: 0 auto;float:none;">
        <div style="float: left; width: 100%;">
            <div class="loading" align="center">
                Loading. Please wait.<br />
                <br />
                <img src="~/Images/loader.gif" alt=" " />
            </div>

            <div class="col-40" style="width: 47%;" id="divSource">
                <div class="div-header">
                    <span class="control-label label-bold">SOURCE</span>
                </div>
                <div class="form-group width-per-100">
                    <span id="lblSrcServerName" class="control-label">Server Name</span>
                    <input id="txtSrcServerName" class="form-control" tabindex="1" />
                </div>
                <div class="form-group width-per-100">
                    <span id="lblSrcServerIP" class="control-label">Server IP</span>
                    <input id="txtSrcServerIP" class="form-control" tabindex="3" />
                </div>
                <div class="form-group width-per-100">
                    <span id="lblSrcServerPort" class="control-label">Server Port</span>
                    <input id="txtSrcServerPort" class="form-control" tabindex="5" />
                </div>
                <div class="form-group width-per-100">
                    <span id="lblSrcSchemaName" class="control-label">Database Name</span>
                    <input id="txtSrcSchemaName" class="form-control" tabindex="7" />
                </div>
                <div id="morecontent" class="more">
                    <div class="form-group width-per-100">
                        <span id="lblSrcSchemaPassword" class="control-label">Database Password</span>
                        <input id="txtSrcSchemaPassword" class="form-control" type="Password" tabindex="9" />
                    </div>
                    <div class="form-group width-per-100">
                        <span id="lblSrcDBUserName" class="control-label">DB User Name</span>
                        <input id="txtSrcDBUserName" class="form-control" tabindex="11" />
                    </div>
                    <div class="form-group width-per-100">
                        <span id="lblSrcDBUserPassword" class="control-label">DB User Password</span>
                        <input id="txtSrcDBUserPassword" class="form-control" type="Password" tabindex="13" />
                    </div>
                    <div class="form-group width-per-100">
                        <span id="lblSrcOSUser" class="control-label">OS User</span>
                        <input id="txtSrcOSUser" class="form-control" tabindex="15" />
                    </div>
                    <div class="form-group width-per-100">
                        <span id="lblSrcOSPassword" class="control-label">OS Password</span>
                        <input id="txtSrcOSPassword" class="form-control" type="Password" tabindex="17" />
                    </div>
                    <div class="form-group width-per-100">
                        <span id="lblSrcStatus" class="control-label">Status</span>
                        <select id="ddlSrcStatus" class="dropdown" style="width: 99%;" tabindex="19">
                            <option value="1">Active</option>
                            <option value="0">Inactive</option>
                        </select>
                    </div>
                    <div class="form-group width-per-100">
                        <span id="lblSrcDBType" class="control-label">DB Type</span>
                        <select id="ddlSrcDBType" class="dropdown" style="width: 99%;" tabindex="21">
                            <option>SQL SERVER</option>
                            <option>ORACLE</option>
                            <option>SYBASE</option>
                        </select>
                    </div>
                </div>
                <div class="form-group width-per-100" id="dvSrcTable" style="display:none">
                    <span id="lblSrcDBType" class="control-label">Tables</span>
                    <select id="ddlSrcTable" style="width: 99%;" tabindex="23" multiple="multiple"></select>
                </div>
            </div>
            <div class="col-40" style="width: 47%;" id="divTarget">
                <div class="div-header">
                    <span class="control-label label-bold">TARGET</span>
                </div>
                <div class="form-group width-per-100">
                    <span id="lblTgtServerName" class="control-label">Server Name</span>
                    <input id="txtTgtServerName" class="form-control" tabindex="2" />
                </div>
                <div class="form-group width-per-100">
                    <span id="lblTgtServerIP" class="control-label">Server IP</span>
                    <input id="txtTgtServerIP" class="form-control" tabindex="4" />
                </div>
                <div class="form-group width-per-100">
                    <span id="lblTgtServerPort" class="control-label">Server Port</span>
                    <input id="txtTgtServerPort" class="form-control" tabindex="6" />
                </div>
                <div class="form-group width-per-100">
                    <span id="lblTgtSchemaName" class="control-label">Database Name</span>
                    <input id="txtTgtSchemaName" class="form-control" tabindex="8" />
                </div>
                <div id="morecontent1" class="more">
                    <div class="form-group width-per-100">
                        <span id="lblTgtSchemaPassword" class="control-label">Database Password</span>
                        <input id="txtTgtSchemaPassword" class="form-control" type="Password" tabindex="10" />
                    </div>
                    <div class="form-group width-per-100">
                        <span id="lblTgtDBUserName" class="control-label">DB User Name</span>
                        <input id="txtTgtDBUserName" class="form-control" tabindex="12" />
                    </div>
                    <div class="form-group width-per-100">
                        <span id="lblTgtDBUserPassword" class="control-label">DB User Password</span>
                        <input id="txtTgtDBUserPassword" class="form-control" type="Password" tabindex="14" />
                    </div>
                    <div class="form-group width-per-100">
                        <span id="lblTgtOSUser" class="control-label">OS User</span>
                        <input id="txtTgtOSUser" class="form-control" tabindex="16" />
                    </div>
                    <div class="form-group width-per-100">
                        <span id="lblTgtOSPassword" class="control-label">OS Password</span>
                        <input id="txtTgtOSPassword" class="form-control" type="Password" tabindex="18" />
                    </div>
                    <div class="form-group width-per-100">
                        <span id="lblTgtStatus" class="control-label">Status</span>
                        <select id="ddlTgtStatus" class="dropdown" style="width: 99%;" tabindex="20">
                            <option value="1">Active</option>
                            <option value="0">Inactive</option>
                        </select>
                    </div>
                    <div class="form-group width-per-100">
                        <span id="lblTgtDBType" class="control-label">DB Type</span>
                        <select id="ddlTgtDBType" class="dropdown" style="width: 99%;" tabindex="22">
                            <option>SQL SERVER</option>
                            <option>ORACLE</option>
                            <option>SYBASE</option>
                        </select>
                    </div>
                </div>
                <div class="form-group width-per-100" id="dvTgtTable" style="display:none">
                    <span id="lblTgtDBType" class="control-label">Tables</span>
                    <select id="ddlTgtTable" style="width: 99%;" tabindex="24" multiple="multiple"></select>
                </div>
            </div>
        </div>
    </div>
    <div class="group morelink control-label" id="divshowmore" style="width: 60%; margin: 0 auto; float: none;">Show More...</div>
    <div class="group" style="width: 60%;margin: 0 auto;float:none;">
        <div class="form-btn-row" style="width:96%;">
            <input name="btnTestDBcon" value="Test Connection" onclick="TestConnection();" id="btnTestDBcon" title="Verify Database connection" class="button btn-width-150"
                   type="submit" tabindex="23" />
            <input name="btnSave" value="Save" onclick="SaveConfig()" id="btnSave" class="button btn-width-150" type="submit" tabindex="24" />
            <input name="btnImportMetaData" value="Import Meta Data" onclick="ImportMetaData()" id="btnImportMetaData" class="button btn-width-150" type="submit" tabindex="25" />
            <input name="btnReset" value="Reset" onclick="ResetControls()" id="btnReset" class="button btn-width-150" type="submit" tabindex="26" />
            <input name="btnGenerateMap" value="Generate Map" onclick="GenerateMap(GenerateMap)" id="btnGenerateMap" class="button btn-width-150" type="submit" tabindex="27" />
        </div>
    </div>
</div>

<input type="hidden" value="@ViewData["ClientID"]" id="hdnClientId" />
<input type="hidden" value="@ViewData["ProjectID"]" id="hdnProjectId" />
<input type="hidden" value="@ViewData["ConfigID"]" id="hdnConfigID" />
<input type="hidden" value="@ViewData["ToolID"]" id="hdnToolID" />
<input type="hidden" id="hdntrtClientId" />
<input type="hidden" id="hdntrtProjectId" />
<input type="hidden" id="hdntrtConfigID" />
<input type="hidden" id="hdnsrcTableCount" />
<input type="hidden" id="hdntrtTableCount" />
<script>
    $(function () {
        $('#ddlSrcTable').change(function () {
            console.log($(this).val());
        }).multipleSelect({
            width: '100%',
            position: 'top'
        });

        $('#ddlTgtTable').change(function () {
            console.log($(this).val());
        }).multipleSelect({
            width: '100%',
            position: 'top'
        });

        $('.morelink').click(function () {
            if ($('#morecontent,#morecontent1').hasClass('more')) {
                $('#morecontent,#morecontent1').removeClass('more');
                $(this).html('Show Less');
            }
            else {
                $('#morecontent,#morecontent1').addClass('more');
                $(this).html('Show More...');
            }
        });

        $('#dvSrcTable').hide();
        $('#dvTgtTable').hide();



    });
</script>